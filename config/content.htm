<h1>簡介</h1>
<h4>零組件繪圖系統</h4>
<p>這裡是國立虎尾科技大學機械設計工程系電腦輔助設計實習課程教材, 所使用的機械零組件設計繪圖, 以 <a href="https://www.onshape.com/">Onshape</a>, <a href="https://www.autodesk.com/products/fusion-360/students-teachers-educators">Fusion 360</a> 與 <a href="http://solvespace.com">Solvespace</a> 為主. PTC Creo, SolidWorks 與 Inventor 為輔.</p>
<h4>電路模擬</h4>
<p>Arduino 電路與電子系統模擬, 採用 <a href="https://www.tinkercad.com/">TinkerCAD</a>.</p>
<h4>可攜程式工具</h4>
<p>電腦輔助設計過程所牽涉的程式編寫與運算, 採支援 Python, ANSI C 與 Lua 程式解譯的可攜初階系統, <a href="https://drive.google.com/file/d/1Pkkjg8RX3pkZkjWEBlQBggw11u5YSn5i/view?usp=sharing">p37.7z</a>, (下載 240 MB, 解壓縮後 1GB), 以及額外增加 C++ 支援的進階系統, <a href="https://drive.google.com/file/d/12BLN4daAPlO1KjCTDFi1kqJZ6f5k7Y5k/view?usp=sharing">Qt 可攜系統 .7z</a> (下載 8GB, 解壓縮後 21 GB).</p>
<p><a href="https://drive.google.com/file/d/1_lisI3UVmYAEtM3wiSZ96QxDYrb0uV7n/view?usp=sharing">p37_adv.7z</a> (下載 5GB, 解壓縮後 15 GB)</p>
<p>課程倉儲: <a href="https://github.com/mdecourse/cadp2018">https://github.com/mdecourse/cadp2018</a> </p>
<p>本課程名稱為<a href="http://mdecourse.github.io/cadp2018">電腦輔助設計實習</a> , 承接<a href="http://mdecourse.github.io/cp2018">計算機程式</a>與網際內容管理課程, 並為協同產品設計實習課程的先修課.</p>
<h4>課程英文名稱</h4>
<p>電腦輔助設計實習:  Introduction to Computer-aided Design and Practice</p>
<p>計算機程式: Introduction to Computer Programming </p>
<p>網際內容管理: Web-based Content Management System</p>
<p>協同產品設計實習: Collaborative Product Design and Practice</p>
<h4>課程規劃</h4>
<p><a href="https://coggle.it/diagram/WzQ9tjCAbqepqWPI/t/%E9%9B%BB%E8%85%A6%E8%BC%94%E5%8A%A9%E8%A8%AD%E8%A8%88%E5%AF%A6%E7%BF%92/7ff3697b0db297209138e7f4ea4d3966eff611b8d3d228fc6aeda2fb112eaf50">2018 Fall 電腦輔助設計實習課程規劃心智圖</a> (under scrum1 At mde)</p>
<p><a href="/downloads/intro_cad.pdf">Intro_cad.pdf</a></p>
<p><a href="/downloads/Kinematics%20of Machines.pdf">kinematics_of_machines.pdf</a></p>
<p><a href="/downloads/robot_kinematics_and_dynamics.pdf">robot_kinematics_and_dynamics.pdf</a></p><h2>Curves and Surfaces</h2>
<p><a href="/downloads/intro_curves_surfaces.pdf">Introduction to curves and surfaces.pdf</a></p>
<p><a href="/downloads/intro_curves.pdf">Introduction to curves.pdf</a></p>
<p><a href="/downloads/mit_intro_cad.pdf">mit intro to CAD.pdf</a></p>
<p>Open-source, cross-platform NURBS: <a href="https://github.com/pboyer/verb">https://github.com/pboyer/verb</a> </p>
<p><a href="http://verbnurbs.com/">http://verbnurbs.com/</a> </p>
<p><a href="https://mattdesl.svbtle.com/drawing-lines-is-hard">https://mattdesl.svbtle.com/drawing-lines-is-hard</a> </p>
<p><a href="https://pomax.github.io/bezierinfo/">https://pomax.github.io/bezierinfo/</a> </p>
<p><a href="https://github.com/Ciechan/Drawing-Bezier-Curves-JS">https://github.com/Ciechan/Drawing-Bezier-Curves-JS</a> </p>
<p><a href="http://ciechanowski.me/blog/2014/02/18/drawing-bezier-curves/">http://ciechanowski.me/blog/2014/02/18/drawing-bezier-curves/</a> </p>
<h2>最佳化設計</h2>
<p>Mechanical Design Optimization Using Advanced Optimization Techniques</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4471-2748-2">https://link.springer.com/book/10.1007/978-1-4471-2748-2</a> </p>
<p>Optimization Methods for Engineering Design</p>
<p><a href="http://apmonitor.com/me575/uploads/Main/optimization_book.pdf">http://apmonitor.com/me575/uploads/Main/optimization_book.pdf</a>  or <a href="/downloads/optimization_book.pdf">local</a></p>
<p><a href="https://github.com/williamhunter/topy">https://github.com/williamhunter/topy</a> </p>
<p><a href="http://www.analyzemath.com/calculus.html#Calculus_Problems">http://www.analyzemath.com/calculus.html#Calculus_Problems</a></p>
<p>以 <a href="https://en.wikipedia.org/wiki/Differential_evolution">Differential Evolution</a> algorithm 解題:</p>
<p>以總面積 80 cm^2 的鐵皮所能焊出最大容量的方形容器:</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">// 必須在演算過程中, 設法限制各變數的上下限!
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;math.h&gt;
#include &lt;memory.h&gt;
#include &lt;time.h&gt;
 
// 最大族群數, NP
#define MAXPOP  5000
// 最大向量維度, D
#define MAXDIM  35
// MAXIMAPROBLEM =1 最大化 0 最小化
#define MAXIMAPROBLEM 1
// 最大化時 PENALITY 必須為負值, 否則為正值
#define PENALITY -1000
/*
#define MAXIMAPROBLEM 0
#define PENALITY 1000
*/
 
/*------Constants for rnd_uni()--------------------------------------------*/
 
#define IM1 2147483563
#define IM2 2147483399
#define AM (1.0/IM1)
#define IMM1 (IM1-1)
#define IA1 40014
#define IA2 40692
#define IQ1 53668
#define IQ2 52774
#define IR1 12211
#define IR2 3791
#define NTAB 32
#define NDIV (1+IMM1/NTAB)
#define EPS 1.2e-7
#define RNMX (1.0-EPS)
 
/*------------------------Globals---------------------------------------*/
 
long  rnd_uni_init;                 /* serves as a seed for rnd_uni()   */
double c[MAXPOP][MAXDIM], d[MAXPOP][MAXDIM];
double (*pold)[MAXPOP][MAXDIM], (*pnew)[MAXPOP][MAXDIM], (*pswap)[MAXPOP][MAXDIM];
 
/*---------Function declarations----------------------------------------*/
 
void  assignd(int D, double a[], double b[]);
double rnd_uni(long *idum);    /* uniform pseudo random number generator */
double extern evaluate(int D, double tmp[], long *nfeval); /* obj. funct. */
 
/*---------Function definitions-----------------------------------------*/
// 指定向量 b 為 a
void  assignd(int D, double a[], double b[])
{
   int j;
   for (j=0; j&lt;D; j++)
   {
      a[j] = b[j];
   }
}
 
// 產生 0 ~ 1 間的亂數
double rnd_uni(long *idum)
{
  long j;
  long k;
  static long idum2=123456789;
  static long iy=0;
  static long iv[NTAB];
  double temp;
 
  if (*idum &lt;= 0)
  {
    if (-(*idum) &lt; 1) *idum=1;
    else *idum = -(*idum);
    idum2=(*idum);
    for (j=NTAB+7;j&gt;=0;j--)
    {
      k=(*idum)/IQ1;
      *idum=IA1*(*idum-k*IQ1)-k*IR1;
      if (*idum &lt; 0) *idum += IM1;
      if (j &lt; NTAB) iv[j] = *idum;
    }
    iy=iv[0];
  }
  k=(*idum)/IQ1;
  *idum=IA1*(*idum-k*IQ1)-k*IR1;
  if (*idum &lt; 0) *idum += IM1;
  k=idum2/IQ2;
  idum2=IA2*(idum2-k*IQ2)-k*IR2;
  if (idum2 &lt; 0) idum2 += IM2;
  j=iy/NDIV;
  iy=iv[j]-idum2;
  iv[j] = *idum;
  if (iy &lt; 1) iy += IMM1;
  if ((temp=AM*iy) &gt; RNMX) return RNMX;
  else return temp;
 
}/*------End of rnd_uni()--------------------------*/
 
// 將上下限轉為全域變數
double inibound_h;      /* upper parameter bound              */
double inibound_l;      /* lower parameter bound              */
// 與機構合成相關的全域變數
// 宣告一個座標結構
struct Coord {
    double x;
    double y;
  // 這裡保留 double z;
};
 
main(int argc, char *argv[])
{
   char  chr;             /* y/n choice variable                */
   char  *strat[] =       /* strategy-indicator                 */
   {
            "",
            "DE/best/1/exp",
            "DE/rand/1/exp",
            "DE/rand-to-best/1/exp",
            "DE/best/2/exp",
            "DE/rand/2/exp",
            "DE/best/1/bin",
            "DE/rand/1/bin",
            "DE/rand-to-best/1/bin",
            "DE/best/2/bin",
            "DE/rand/2/bin"
   };
 
   int   i, j, L, n;      /* counting variables                 */
   int   r1, r2, r3, r4;  /* placeholders for random indexes    */
   int   r5;              /* placeholders for random indexes    */
   int   D;               /* Dimension of parameter vector      */
   int   NP;              /* number of population members       */
   int   imin;            /* index to member with lowest energy */
   int   refresh;         /* refresh rate of screen output      */
   int   strategy;        /* choice parameter for screen output */
   int   gen, genmax, seed;   
 
   long  nfeval;          /* number of function evaluations     */
 
   double trial_cost;      /* buffer variable                    */
   // 將上下限轉為全域變數, 可能要根據各變數加以設定
   //double inibound_h;      /* upper parameter bound              */
   //double inibound_l;      /* lower parameter bound              */
   double tmp[MAXDIM], best[MAXDIM], bestit[MAXDIM]; /* members  */
   double cost[MAXPOP];    /* obj. funct. values                 */
   double cvar;            /* computes the cost variance         */
   double cmean;           /* mean cost                          */
   double F,CR;            /* control variables of DE            */
   double cmin;            /* help variables                     */
 
   FILE  *fpin_ptr;
   FILE  *fpout_ptr;
 
// 計算執行過程所需時間起點, 需要導入 time.h
  clock_t start = clock();
 
/*------Initializations----------------------------*/
 
// 將結果寫入 out.dat
 fpout_ptr = fopen("out.dat","w");          /* open output file for reading,    */
// 目前已經採用 strategy 3 可以得到最佳結果
  strategy = 3;
  genmax = 2000;
  refresh = 100;
  // 配合機構尺寸合成, 每一個體有 9 個機構尺寸值與 5 個通過點角度值
  D = 2;
  NP = 200;
  inibound_h = 50.;
  inibound_l = 0.;
/*得到最佳解
  F = 0.85;
CR 必須介於 0 to 1. 之間
  CR = 1.;
*/
  F = 0.85;
  CR = 1.;
  seed = 3;
 
 //fclose(fpin_ptr);
 
/*-----Checking input variables for proper range----------------------------*/
 
  if (D &gt; MAXDIM)
  {
     printf("\nError! D=%d &gt; MAXDIM=%d\n",D,MAXDIM);
     exit(1);
  }
  if (D &lt;= 0)
  {
     printf("\nError! D=%d, should be &gt; 0\n",D);
     exit(1);
  }
  if (NP &gt; MAXPOP)
  {
     printf("\nError! NP=%d &gt; MAXPOP=%d\n",NP,MAXPOP);
     exit(1);
  }
  if (NP &lt;= 0)
  {
     printf("\nError! NP=%d, should be &gt; 0\n",NP);
     exit(1);
  }
  if ((CR &lt; 0) || (CR &gt; 1.0))
  {
     printf("\nError! CR=%f, should be ex [0,1]\n",CR);
     exit(1);
  }
  if (seed &lt;= 0)
  {
     printf("\nError! seed=%d, should be &gt; 0\n",seed);
     exit(1);
  }
  if (refresh &lt;= 0)
  {
     printf("\nError! refresh=%d, should be &gt; 0\n",refresh);
     exit(1);
  }
  if (genmax &lt;= 0)
  {
     printf("\nError! genmax=%d, should be &gt; 0\n",genmax);
     exit(1);
  }
  if ((strategy &lt; 0) || (strategy &gt; 10))
  {
     printf("\nError! strategy=%d, should be ex {1,2,3,4,5,6,7,8,9,10}\n",strategy);
     exit(1);
  }
  if (inibound_h &lt; inibound_l)
  {
     printf("\nError! inibound_h=%f &lt; inibound_l=%f\n",inibound_h, inibound_l);
     exit(1);
  }
 
/*-----Initialize random number generator-----------------------------*/
 
 rnd_uni_init = -(long)seed;  /* initialization of rnd_uni() */
 nfeval       =  0;  /* reset number of function evaluations */
 
/*------Initialization------------------------------------------------*/
/*------Right now this part is kept fairly simple and just generates--*/
/*------random numbers in the range [-initfac, +initfac]. You might---*/
/*------want to extend the init part such that you can initialize-----*/
/*------each parameter separately.------------------------------------*/
 
   for (i=0; i&lt;NP; i++)
   {
      for (j=0; j&lt;D; j++) /* spread initial population members */
      {
        c[i][j] = inibound_l + rnd_uni(&amp;rnd_uni_init)*(inibound_h - inibound_l);
      }
      cost[i] = evaluate(D,c[i],&amp;nfeval); /* obj. funct. value */
   }
   cmin = cost[0];
   imin = 0;
   for (i=1; i&lt;NP; i++)
   {
     if(MAXIMAPROBLEM == 1)
     {
       // 改為最大化
        if (cost[i]&gt;cmin)
        {
          cmin = cost[i];
          imin = i;
        }
      }
      else
      {
        // 最小化問題
        if (cost[i]&lt;cmin)
        {
          cmin = cost[i];
          imin = i;
        }
      }
   }
 
   assignd(D,best,c[imin]);            /* save best member ever          */
   assignd(D,bestit,c[imin]);          /* save best member of generation */
 
   pold = &amp;c; /* old population (generation G)   */
   pnew = &amp;d; /* new population (generation G+1) */
 
/*=======================================================================*/
/*=========Iteration loop================================================*/
/*=======================================================================*/
 
   gen = 0;                          /* generation counter reset */
   while ((gen &lt; genmax) /*&amp;&amp; (kbhit() == 0)*/) /* remove comments if conio.h */
   {                                            /* is accepted by compiler    */
      gen++;
      imin = 0;
 
      for (i=0; i&lt;NP; i++)         /* Start of loop through ensemble  */
      {
     do                        /* Pick a random population member */
     {                         /* Endless loop for NP &lt; 2 !!!     */
       r1 = (int)(rnd_uni(&amp;rnd_uni_init)*NP);
     }while(r1==i);            
 
     do                        /* Pick a random population member */
     {                         /* Endless loop for NP &lt; 3 !!!     */
       r2 = (int)(rnd_uni(&amp;rnd_uni_init)*NP);
     }while((r2==i) || (r2==r1));
 
     do                        /* Pick a random population member */
     {                         /* Endless loop for NP &lt; 4 !!!     */
       r3 = (int)(rnd_uni(&amp;rnd_uni_init)*NP);
     }while((r3==i) || (r3==r1) || (r3==r2));
 
     do                        /* Pick a random population member */
     {                         /* Endless loop for NP &lt; 5 !!!     */
       r4 = (int)(rnd_uni(&amp;rnd_uni_init)*NP);
     }while((r4==i) || (r4==r1) || (r4==r2) || (r4==r3));
 
     do                        /* Pick a random population member */
     {                         /* Endless loop for NP &lt; 6 !!!     */
       r5 = (int)(rnd_uni(&amp;rnd_uni_init)*NP);
     }while((r5==i) || (r5==r1) || (r5==r2) || (r5==r3) || (r5==r4));
 
/*=======EXPONENTIAL CROSSOVER============================================================*/
 
/*-------DE/best/1/exp--------------------------------------------------------------------*/
/*-------Our oldest strategy but still not bad. However, we have found several------------*/
/*-------optimization problems where misconvergence occurs.-------------------------------*/
     if (strategy == 1) /* strategy DE0 (not in our paper) */
     {
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D);
       L = 0;
       do
       {                       
         tmp[n] = bestit[n] + F*((*pold)[r2][n]-(*pold)[r3][n]);
         n = (n+1)%D;
         L++;
       }while((rnd_uni(&amp;rnd_uni_init) &lt; CR) &amp;&amp; (L &lt; D));
     }
/*-------DE/rand/1/exp-------------------------------------------------------------------*/
/*-------This is one of my favourite strategies. It works especially well when the-------*/
/*-------"bestit[]"-schemes experience misconvergence. Try e.g. F=0.7 and CR=0.5---------*/
/*-------as a first guess.---------------------------------------------------------------*/
     else if (strategy == 2) /* strategy DE1 in the techreport */
     {
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D);
       L = 0;
       do
       {                       
         tmp[n] = (*pold)[r1][n] + F*((*pold)[r2][n]-(*pold)[r3][n]);
         n = (n+1)%D;
         L++;
       }while((rnd_uni(&amp;rnd_uni_init) &lt; CR) &amp;&amp; (L &lt; D));
     }
/*-------DE/rand-to-best/1/exp-----------------------------------------------------------*/
/*-------This strategy seems to be one of the best strategies. Try F=0.85 and CR=1.------*/
/*-------If you get misconvergence try to increase NP. If this doesn't help you----------*/
/*-------should play around with all three control variables.----------------------------*/
     else if (strategy == 3) /* similiar to DE2 but generally better */
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
       L = 0;
       do
       {                       
         tmp[n] = tmp[n] + F*(bestit[n] - tmp[n]) + F*((*pold)[r1][n]-(*pold)[r2][n]);
         n = (n+1)%D;
         L++;
       }while((rnd_uni(&amp;rnd_uni_init) &lt; CR) &amp;&amp; (L &lt; D));
     }
/*-------DE/best/2/exp is another powerful strategy worth trying--------------------------*/
     else if (strategy == 4)
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
       L = 0;
       do
       {                           
         tmp[n] = bestit[n] + 
              ((*pold)[r1][n]+(*pold)[r2][n]-(*pold)[r3][n]-(*pold)[r4][n])*F;
         n = (n+1)%D;
         L++;
       }while((rnd_uni(&amp;rnd_uni_init) &lt; CR) &amp;&amp; (L &lt; D));
     }
/*-------DE/rand/2/exp seems to be a robust optimizer for many functions-------------------*/
     else if (strategy == 5)
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
       L = 0;
       do
       {                           
         tmp[n] = (*pold)[r5][n] + 
              ((*pold)[r1][n]+(*pold)[r2][n]-(*pold)[r3][n]-(*pold)[r4][n])*F;
         n = (n+1)%D;
         L++;
       }while((rnd_uni(&amp;rnd_uni_init) &lt; CR) &amp;&amp; (L &lt; D));
     }
 
/*=======Essentially same strategies but BINOMIAL CROSSOVER===============================*/
 
/*-------DE/best/1/bin--------------------------------------------------------------------*/
     else if (strategy == 6) 
     {
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
           for (L=0; L&lt;D; L++) /* perform D binomial trials */
           {
         if ((rnd_uni(&amp;rnd_uni_init) &lt; CR) || L == (D-1)) /* change at least one parameter */
         {                       
           tmp[n] = bestit[n] + F*((*pold)[r2][n]-(*pold)[r3][n]);
         }
         n = (n+1)%D;
           }
     }
/*-------DE/rand/1/bin-------------------------------------------------------------------*/
     else if (strategy == 7) 
     {
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
           for (L=0; L&lt;D; L++) /* perform D binomial trials */
           {
         if ((rnd_uni(&amp;rnd_uni_init) &lt; CR) || L == (D-1)) /* change at least one parameter */
         {                       
           tmp[n] = (*pold)[r1][n] + F*((*pold)[r2][n]-(*pold)[r3][n]);
         }
         n = (n+1)%D;
           }
     }
/*-------DE/rand-to-best/1/bin-----------------------------------------------------------*/
     else if (strategy == 8) 
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
           for (L=0; L&lt;D; L++) /* perform D binomial trials */
           {
         if ((rnd_uni(&amp;rnd_uni_init) &lt; CR) || L == (D-1)) /* change at least one parameter */
         {                       
           tmp[n] = tmp[n] + F*(bestit[n] - tmp[n]) + F*((*pold)[r1][n]-(*pold)[r2][n]);
         }
         n = (n+1)%D;
           }
     }
/*-------DE/best/2/bin--------------------------------------------------------------------*/
     else if (strategy == 9)
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
           for (L=0; L&lt;D; L++) /* perform D binomial trials */
           {
         if ((rnd_uni(&amp;rnd_uni_init) &lt; CR) || L == (D-1)) /* change at least one parameter */
         {                       
           tmp[n] = bestit[n] + 
              ((*pold)[r1][n]+(*pold)[r2][n]-(*pold)[r3][n]-(*pold)[r4][n])*F;
         }
         n = (n+1)%D;
           }
     }
/*-------DE/rand/2/bin--------------------------------------------------------------------*/
     else
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
           for (L=0; L&lt;D; L++) /* perform D binomial trials */
           {
         if ((rnd_uni(&amp;rnd_uni_init) &lt; CR) || L == (D-1)) /* change at least one parameter */
         {                       
           tmp[n] = (*pold)[r5][n] + 
              ((*pold)[r1][n]+(*pold)[r2][n]-(*pold)[r3][n]-(*pold)[r4][n])*F;
         }
         n = (n+1)%D;
           }
     }
 
 
/*=======Trial mutation now in tmp[]. Test how good this choice really was.==================*/
 
     trial_cost = evaluate(D,tmp,&amp;nfeval);  /* Evaluate new vector in tmp[] */
   if(MAXIMAPROBLEM == 1)
   {
    // 改為最大化
       if (trial_cost &gt;= cost[i])   /* improved objective function value ? */
       {                                  
          cost[i]=trial_cost;         
          assignd(D,(*pnew)[i],tmp);
          if (trial_cost&gt;cmin)          /* Was this a new minimum? */
          {                               /* if so...*/
             cmin=trial_cost;           /* reset cmin to new low...*/
             imin=i;
             assignd(D,best,tmp);           
          }                           
       }                            
       else
       {
          assignd(D,(*pnew)[i],(*pold)[i]); /* replace target with old value */
       }
    }
    else
    {
          // 最小化問題
       if (trial_cost &lt;= cost[i])   /* improved objective function value ? */
       {                                  
          cost[i]=trial_cost;         
          assignd(D,(*pnew)[i],tmp);
          if (trial_cost&lt;cmin)          /* Was this a new minimum? */
          {                               /* if so...*/
             cmin=trial_cost;           /* reset cmin to new low...*/
             imin=i;
             assignd(D,best,tmp);           
          }                           
       }                            
       else
       {
          assignd(D,(*pnew)[i],(*pold)[i]); /* replace target with old value */
       }
    }
 
      }   /* End mutation loop through pop. */
 
      assignd(D,bestit,best);  /* Save best population member of current iteration */
 
      /* swap population arrays. New generation becomes old one */
 
      pswap = pold;
      pold  = pnew;
      pnew  = pswap;
 
/*----Compute the energy variance (just for monitoring purposes)-----------*/
 
      cmean = 0.;          /* compute the mean value first */
      for (j=0; j&lt;NP; j++)
      {
         cmean += cost[j];
      }
      cmean = cmean/NP;
 
      cvar = 0.;           /* now the variance              */
      for (j=0; j&lt;NP; j++)
      {
         cvar += (cost[j] - cmean)*(cost[j] - cmean);
      }
      cvar = cvar/(NP-1);
 
 
/*----Output part----------------------------------------------------------*/
 
      if (gen%refresh==1)   /* display after every refresh generations */
      { /* ABORT works only if conio.h is accepted by your compiler */
    printf("\n\n                         PRESS ANY KEY TO ABORT"); 
    printf("\n\n\n Best-so-far cost funct. value=%-15.10g\n",cmin);
 
    for (j=0;j&lt;D;j++)
    {
      printf("\n best[%d]=%-15.10g",j,best[j]);
    }
    printf("\n\n Generation=%d  NFEs=%ld   Strategy: %s    ",gen,nfeval,strat[strategy]);
    printf("\n NP=%d    F=%-4.2g    CR=%-4.2g   cost-variance=%-10.5g\n",
               NP,F,CR,cvar);
      }
 
      fprintf(fpout_ptr,"%ld   %-15.10g\n",nfeval,cmin);
   }
/*=======================================================================*/
/*=========End of iteration loop=========================================*/
/*=======================================================================*/
 
/*-------Final output in file-------------------------------------------*/
 
 
   fprintf(fpout_ptr,"\n\n\n Best-so-far obj. funct. value = %-15.10g\n",cmin);
 
   for (j=0;j&lt;D;j++)
   {
     fprintf(fpout_ptr,"\n best[%d]=%-15.10g",j,best[j]);
   }
   fprintf(fpout_ptr,"\n\n Generation=%d  NFEs=%ld   Strategy: %s    ",gen,nfeval,strat[strategy]);
   fprintf(fpout_ptr,"\n NP=%d    F=%-4.2g    CR=%-4.2g    cost-variance=%-10.5g\n",
           NP,F,CR,cvar); 
 
  fclose(fpout_ptr);
 
  /* Code you want timed here */
  printf("Time elapsed: %f\n", ((double)clock() - start) / CLOCKS_PER_SEC);
   return(0);
}
 
/*-----------End of main()------------------------------------------*/
 
// 適應函式 fittness function (cost function)
double evaluate(int D, double tmp[], long *nfeval)
{
   double result=0, surface = 80.0, z, volume, penality;
   (*nfeval)++;
   z = (surface-tmp[0]*tmp[1])/(2.0*(tmp[0]+tmp[1]));
   volume = tmp[0]*tmp[1]*z;
 
  if(volume &lt;= 0){
    return PENALITY;
  }
// 只限制長度與寬度必須大於 0
  if(tmp[0] &lt;= inibound_l){
    return PENALITY;
  }
 
  if(tmp[1] &lt;= inibound_l){
    return PENALITY;
  }
/*
  if((tmp[0] &lt;= inibound_l)|| (tmp[0] &gt;inibound_h)){
    return PENALITY;
  }
 
  if((tmp[1] &lt;= inibound_l) || (tmp[1] &gt;inibound_h)){
    return PENALITY;
  }
  */
  // volume must &gt;0 and max volume
  // 目前為最小化問題
   //return 1+1/(volume*volume);
  return volume;
}
 </pre>
<p>Python <a href="https://en.wikipedia.org/wiki/Differential_evolution">Differential Evolution</a> algorithm:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random

class Chromosome(object):

    """
    just copy the idea of genetic algorithm, pretty similar..
    """
    def __init__(self, n):
        """
        int n, dimension of question
        """
        # dimension
        self.n = n
        # the gene
        self.v = [0] * n
        # the fitness value
        self.f = 0

    def assign(self, obj):
        """
        Chromosome obj

        copy all attribute from obj to itself
        """
        self.n = obj.n
        self.v = obj.v[:]
        self.f = obj.f


class DiffertialEvolution(object):

    def __init__(self,Func, pType, strategy, D, NP, F, CR, lower, upper, maxGen, report):
        # if pType = 1 it is maximization  otherwise is minimization problem
        self.pType = pType
        # strategy 1~10, choice what strategy to generate new member in temporary
        self.strategy = strategy
        # dimesion of quesiton
        self.D = D
        # population size
        # To start off NP = 10*D is a reasonable choice. Increase NP if misconvergence
        self.NP = NP
        # weight factor
        # F is usually between 0.5 and 1 (in rare cases &gt; 1)
        self.F = F
        # crossover possible
        # CR in [0,1]
        self.CR = CR
        # lower bound array
        self.lb = lower[:]
        # upper bound array
        self.ub = upper[:]
        # maximum generation
        self.maxGen = maxGen
        # how many generation report once
        self.rpt = report
        # object function, or enviorment
        self.f = Func
        # check parameter is set properly
        self.checkParameter()

        # generation pool, depend on population size
        self.pop = [Chromosome(D) for i in range(NP)]
        # last generation best member
        self.lastgenbest = Chromosome(D)
        # current best member
        self.currentbest = Chromosome(D)
        # the generation count
        self.gen = 0
        # the vector
        self.r1 = 0
        self.r2 = 0
        self.r3 = 0
        self.r4 = 0
        self.r5 = 0

    def checkParameter(self):
        """
        check parameter is set properly
        """
        if (type(self.D) is not int) and self.D &lt;= 0:
            raise Exception('D shoud be integer and larger than 0')
        if (type(self.NP) is not int) and self.NP &lt;= 0:
            raise Exception('NP shoud be integer and larger than 0')
        if self.CR &lt; 0 or self.CR &gt; 1:
            raise Exception('CR should be [0,1]')
        if self.maxGen &lt;= 0:
            raise Exception('generation should larger than 0')
        if self.rpt &lt;= 0 or self.rpt &gt; self.maxGen:
            raise Exception('report should be larger than 0 and less than max genration')
        if self.strategy &lt; 1 or self.strategy &gt; 10:
            raise Exception('strategy should be [1,10]')
        for lower, upper in zip(self.lb, self.ub):
            if lower &gt; upper:
                raise Exception('upper bound should be larger than lower bound')

    def init(self):
        """
        init population
        """
        for i in range(self.NP):
            for j in range(self.D):
                self.pop[i].v[j] = self.lb[j] + random.random()*(self.ub[j] - self.lb[j])
            self.pop[i].f = self.evalute(self.pop[i])

    def evalute(self, p):
        """
        evalute the member in enviorment
        """
        return self.f(p.v)

    def findBest(self):
        """
        find member that have minimum fitness value from pool
        """
        if self.pType == 1:
            return max(self.pop, key=lambda chrom:chrom.f)
        else:
            return min(self.pop, key=lambda chrom:chrom.f)

    def generateRandomVector(self, i):
        """
        generate new vector
        """
        while True:
            self.r1 = int(random.random() * self.NP)
            if not (self.r1 == i):
                break

        while True:
            self.r2 = int(random.random() * self.NP)
            if not ((self.r2 == i) or (self.r2 == self.r1)):
                break

        while True:
            self.r3 = int(random.random() * self.NP)
            if not ((self.r3 == i) or (self.r3 == self.r1) or (self.r3 == self.r2)):
                break

        while True:
            self.r4 = int(random.random() * self.NP)
            if not ((self.r4 == i) or (self.r4 == self.r1) or (self.r4 == self.r2) or (self.r4 == self.r3)):
                break

        while True:
            self.r5 = int(random.random() * self.NP)
            if not ((self.r5 == i) or (self.r5 == self.r1) or (self.r5 == self.r2) or (self.r5 == self.r3) or (self.r5 == self.r4)):
                break

    def recombination(self, i):
        """
        use new vector, recombination the new one member to tmp
        """
        tmp = Chromosome(self.D)

        if self.strategy == 1:
            tmp.assign(self.pop[i])
            n = int(random.random() * self.D)
            L = 0
            while True:
                tmp.v[n] = self.lastgenbest.v[n] + self.F*(self.pop[self.r2].v[n] - self.pop[self.r3].v[n])
                n = (n + 1) % self.D
                L += 1
                if not ((random.random() &lt; self.CR) and (L &lt; self.D)):
                    break

        elif self.strategy == 2:
            tmp.assign(self.pop[i])
            n = int(random.random() * self.D)
            L = 0
            while True:
                tmp.v[n] = self.pop[self.r1].v[n] + self.F*(self.pop[self.r2].v[n] - self.pop[self.r3].v[n])
                n = (n + 1) % self.D
                L += 1
                if not ((random.random() &lt; self.CR) and (L &lt; self.D)):
                    break

        elif (self.strategy == 3):
            tmp.assign(self.pop[i])
            n = int(random.random() * self.D)
            L = 0
            while True:
                tmp.v[n] = tmp.v[n] + self.F*(self.lastgenbest.v[n] - tmp.v[n]) + self.F*(self.pop[self.r1].v[n] - self.pop[self.r2].v[n])
                n = (n + 1) % self.D
                L += 1
                if not ((random.random() &lt; self.CR) and (L &lt; self.D)):
                    break

        elif (self.strategy == 4):
            tmp.assign(self.pop[i])

            n = int(random.random() * self.D)

            L = 0
            while True:
                tmp.v[n] = self.lastgenbest.v[n] + (self.pop[self.r1].v[n] + self.pop[self.r2].v[n] - self.pop[self.r3].v[n] - self.pop[self.r4].v[n]) * self.F
                n = (n + 1) % self.D
                L += 1
                if not ((random.random() &lt; self.CR) and (L &lt; self.D)):
                    break

        elif (self.strategy == 5):
            tmp.assign(self.pop[i])
            n = int(random.random() * self.D)
            L = 0
            while True:
                tmp.v[n] = self.pop[self.r5].v[n] + (self.pop[self.r1].v[n] + self.pop[self.r2].v[n] - self.pop[self.r3].v[n] - self.pop[self.r4].v[n]) * self.F
                n = (n + 1) % self.D
                L += 1
                if not ((random.random() &lt; self.CR) and (L &lt; self.D)):
                    break

        elif (self.strategy == 6):
            tmp.assign(self.pop[i])
            n = int(random.random() * self.D)
            for L in range(self.D):
                if ((random.random() &lt; self.CR) or L == (self.D - 1)):
                    tmp.v[n] = self.lastgenbest.v[n] + self.F*(self.pop[self.r2].v[n] - self.pop[self.r3].v[n])
                n = (n + 1) % self.D

        elif (self.strategy == 7):
            tmp.assign(self.pop[i])
            n = int(random.random() * self.D)
            for L in range(self.D):
                if ((random.random() &lt; self.CR) or L == (self.D - 1)):
                    tmp.v[n] = self.pop[self.r1].v[n] + self.F*(self.pop[self.r2].v[n] - self.pop[self.r3].v[n])

                n = (n + 1) % self.D

        elif (self.strategy == 8):
            tmp.assign(self.pop[i])
            n = int(random.random() * self.D)
            for L in range(self.D):
                if ((random.random() &lt; self.CR) or L == (self.D - 1)):
                    tmp.v[n] = tmp.v[n] + self.F*(self.lastgenbest.v[n] - tmp.v[n]) + self.F*(self.pop[self.r1].v[n] - self.pop[self.r2].v[n])

                n = (n + 1) % self.D

        elif (self.strategy == 9):
            tmp.assign(self.pop[i])
            n = int(random.random() * self.D)
            for L in range(self.D):
                if ((random.random() &lt; self.CR) or L == (self.D - 1)):
                    tmp.v[n] = self.lastgenbest.v[n] + (self.pop[self.r1].v[n] + self.pop[self.r2].v[n] - self.pop[self.r3].v[n] - self.pop[self.r4].v[n]) * self.F

                n = (n + 1) % self.D

        else:
            tmp.assign(self.pop[i])
            n = int(random.random() * self.D)
            for L in range(self.D):
                if ((random.random() &lt; self.CR) or L == (self.D - 1)):
                    tmp.v[n] = self.pop[self.r5].v[n] + (self.pop[self.r1].v[n] + self.pop[self.r2].v[n] - self.pop[self.r3].v[n] - self.pop[self.r4].v[n]) * self.F
                n = (n + 1) % self.D
        return tmp

    def report(self):
        """
        report current generation status
        """
        if self.gen == 0:
            print("DiffertialEvolution results - init pop")
        elif self.gen == self.maxGen:
            print("Final DiffertialEvolution results at", self.gen, "generations")
        else:
            print("DiffertialEvolution results after", self.gen, "generations")
        print("Function : %.6f" % (self.currentbest.f))
        for i, v in enumerate(self.currentbest.v, start=1):
            print("Var", i, ":", v)

    def overbound(self, member):
        """
        check the member's chromosome that is out of bound?
        """
        for i in range(self.D):
            if member.v[i] &gt; self.ub[i] or member.v[i] &lt; self.lb[i]:
                return True
        return False

    def run(self):
        """
        run the algorithm...
        """
        # initial step
        # generation 0
        self.gen = 0
        # init the member's chromsome
        self.init()
        # find the best one(smallest fitness value)
        tmp = self.findBest()
        # copy to lastgenbest
        self.lastgenbest.assign(tmp)
        # copy to currentbest
        self.currentbest.assign(tmp)
        # report status
        self.report()
        # end initial step

        # the evolution journey is beggin...
        for self.gen in range(1, self.maxGen + 1):
            for i in range(self.NP):
                # generate new vector
                self.generateRandomVector(i)
                # use the vector recombine the member to temporary
                tmp = self.recombination(i)
                # check the one is out of bound?
                if self.overbound(tmp):
                    # if it is, then ignore
                    continue
                # is not out of bound, that mean it's quilify of enviorment
                # then evalute the one
                tmp.f = self.evalute(tmp)
                # if temporary one is better than origin(fitness value is larger or smaller)
                # pType is 1, the problem is maximization type
                if self.pType == 1:
                    if tmp.f &gt;= self.pop[i].f:
                        # copy the temporary one to origin member
                        self.pop[i].assign(tmp)
                        # check the temporary one is better than the currentbest
                        if tmp.f &gt; self.currentbest.f:
                            # copy the temporary one to currentbest
                            self.currentbest.assign(tmp)
                else:
                    if tmp.f &lt;= self.pop[i].f:
                        # copy the temporary one to origin member
                        self.pop[i].assign(tmp)
                        # check the temporary one is better than the currentbest
                        if tmp.f &lt; self.currentbest.f:
                            # copy the temporary one to currentbest
                            self.currentbest.assign(tmp)
            # copy the currentbest to lastgenbest
            self.lastgenbest.assign(self.currentbest)
            # if report generation is set, report
            if self.rpt != 0:
                if self.gen % self.rpt == 0:
                    self.report()
        # the evolution journey is done, report the final status
        self.report()

#fittness function (cost function)
def evaluate(designVariablel):
    surface = 80.0
    # if pType is 1, the penality is negative (maximization problem)
    # if pType is 0, the penality is positive (minimization problem)
    penality = -1000

    z = (surface-designVariablel[0]*designVariablel[1])/(2.0*(designVariablel[0]\
         +designVariablel[1]))
    volume = designVariablel[0]*designVariablel[1]*z
  
    if(volume &lt;= 0):
        return penality

    # box length and width need to be larger than 0
    if(designVariablel[0] &lt;= 0):
        return penality

    if(designVariablel[1] &lt;= 0):
        return penality
    return volume
#volume = DiffertialEvolution((self,Func, max, strategy, D, NP, F, CR, lower, upper, maxGen, report)
volume = DiffertialEvolution(evaluate, 1, 3, 2, 100, 0.6, 0.85, [0, 0], [50, 50], 100, 10)
volume.run()
</pre>
<p>將上述 Python 程式轉為 Cython 格式:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#import random
from cpython cimport bool
#from array import array
import numpy as np
cimport numpy as np
from libc.stdlib cimport rand, RAND_MAX, srand
from libc.time cimport time

# make true it is random everytime
srand(time(NULL))

cdef double randV():
    return rand()*1.0 / RAND_MAX

cdef class Chromosome(object):
    """
    just copy the idea of genetic algorithm, pretty similar..
    """
    cdef public int n
    cdef public double f
    cdef public np.ndarray v

    def __cinit__(self, int n):
        """
        int n, dimension of question
        """
        # dimension
        self.n = n
        # the gene
        self.v = np.zeros(n)
        # the fitness value
        self.f = 0

    def assign(self, Chromosome obj):
        """
        Chromosome obj
        copy all attribute from obj to itself
        """
        self.n = obj.n
        self.v[:] = obj.v
        self.f = obj.f


cdef class DiffertialEvolution(object):

    cdef:
        int strategy, D, NP, maxGen, rpt, gen, r1, r2, r3, r4, r5
        double F, CR
        np.ndarray lb, ub, pop
        object f
        Chromosome lastgenbest, currentbest

    def __cinit__(self, object Func, int strategy, int D, int NP, double F, double CR, object lower, object upper, int maxGen, int report):
        # strategy 1~10, choice what strategy to generate new member in temporary
        self.strategy = strategy
        # dimesion of quesiton
        self.D = D
        # population size
        # To start off NP = 10*D is a reasonable choice. Increase NP if misconvergence
        self.NP = NP
        # weight factor
        # F is usually between 0.5 and 1 (in rare cases &gt; 1)
        self.F = F
        # crossover possible
        # CR in [0,1]
        self.CR = CR
        # low bound
        self.lb = np.array(lower[:])
        # up bound
        self.ub = np.array(upper[:])
        # maximum generation
        self.maxGen = maxGen
        # how many generation report once
        self.rpt = report
        # object function, or enviorment
        self.f = Func
        # check parameter is set properly
        self.checkParameter()

        # generation pool, depend on population size
        #self.pop = [Chromosome(self.D) for i in range(self.NP)]
        self.pop = np.ndarray((NP,),dtype=np.object)
        for i in range(NP):
            self.pop[i] = Chromosome(self.D)
        # last generation best member
        self.lastgenbest = Chromosome(D)
        # current best member
        self.currentbest = Chromosome(D)
        # the generation count
        self.gen = 0
        # the vector
        self.r1 = 0
        self.r2 = 0
        self.r3 = 0
        self.r4 = 0
        self.r5 = 0

    cdef void checkParameter(self):
        """
        check parameter is set properly
        """
        if (type(self.D) is not int) and self.D &lt;= 0:
            raise Exception('D shoud be integer and larger than 0')
        if (type(self.NP) is not int) and self.NP &lt;= 0:
            raise Exception('NP shoud be integer and larger than 0')
        if self.CR &lt; 0 or self.CR &gt; 1:
            raise Exception('CR should be [0,1]')
        if self.maxGen &lt;= 0:
            raise Exception('generation should larger than 0')
        if self.rpt &lt;= 0 or self.rpt &gt; self.maxGen:
            raise Exception('report should be larger than 0 and less than max genration')
        if self.strategy &lt; 1 or self.strategy &gt; 10:
            raise Exception('strategy should be [1,10]')
        for lower, upper in zip(self.lb, self.ub):
            if lower &gt; upper:
                raise Exception('upper bound should be larger than lower bound')

    cdef void init(self):
        """
        init population
        """
        cdef int i, j

        for i in range(self.NP):
            for j in range(self.D):
                self.pop[i].v[j] = self.lb[j] + randV()*(self.ub[j] - self.lb[j])
            self.pop[i].f = self.evalute(self.pop[i])

    cdef double evalute(self, Chromosome member):
        """
        evalute the member in enviorment
        """
        return self.f(member.v)

    cdef Chromosome findBest(self):
        """
        find member that have minimum fitness value from pool
        """
        return min(self.pop, key=lambda chrom:chrom.f)

    cdef void generateRandomVector(self, i):
        """
        generate new vector
        """
        while True:
            self.r1 = int(randV() * self.NP)
            if not (self.r1 == i):
                break

        while True:
            self.r2 = int(randV() * self.NP)
            if not ((self.r2 == i) or (self.r2 == self.r1)):
                break

        while True:
            self.r3 = int(randV() * self.NP)
            if not ((self.r3 == i) or (self.r3 == self.r1) or (self.r3 == self.r2)):
                break

        while True:
            self.r4 = int(randV() * self.NP)
            if not ((self.r4 == i) or (self.r4 == self.r1) or (self.r4 == self.r2) or (self.r4 == self.r3)):
                break

        while True:
            self.r5 = int(randV() * self.NP)
            if not ((self.r5 == i) or (self.r5 == self.r1) or (self.r5 == self.r2) or (self.r5 == self.r3) or (self.r5 == self.r4)):
                break

    cdef Chromosome recombination(self, int i):
        """
        use new vector, recombination the new one member to tmp
        """
        cdef Chromosome tmp
        cdef int n, L

        tmp = Chromosome(self.D)

        if self.strategy == 1:
            tmp.assign(self.pop[i])
            n = int(randV() * self.D)
            L = 0
            while True:
                tmp.v[n] = self.lastgenbest.v[n] + self.F*(self.pop[self.r2].v[n] - self.pop[self.r3].v[n])
                n = (n + 1) % self.D
                L += 1
                if not ((randV() &lt; self.CR) and (L &lt; self.D)):
                    break

        elif self.strategy == 2:
            tmp.assign(self.pop[i])
            n = int(randV() * self.D)
            L = 0
            while True:
                tmp.v[n] = self.pop[self.r1].v[n] + self.F*(self.pop[self.r2].v[n] - self.pop[self.r3].v[n])
                n = (n + 1) % self.D
                L += 1
                if not ((randV() &lt; self.CR) and (L &lt; self.D)):
                    break

        elif (self.strategy == 3):
            tmp.assign(self.pop[i])
            n = int(randV() * self.D)
            L = 0
            while True:
                tmp.v[n] = tmp.v[n] + self.F*(self.lastgenbest.v[n] - tmp.v[n]) + self.F*(self.pop[self.r1].v[n] - self.pop[self.r2].v[n])
                n = (n + 1) % self.D
                L += 1
                if not ((randV() &lt; self.CR) and (L &lt; self.D)):
                    break

        elif (self.strategy == 4):
            tmp.assign(self.pop[i])
            n = int(randV() * self.D)
            L = 0
            while True:
                tmp.v[n] = self.lastgenbest.v[n] + (self.pop[self.r1].v[n] + self.pop[self.r2].v[n] - self.pop[self.r3].v[n] - self.pop[self.r4].v[n]) * self.F
                n = (n + 1) % self.D
                L += 1
                if not ((randV() &lt; self.CR) and (L &lt; self.D)):
                    break

        elif (self.strategy == 5):
            tmp.assign(self.pop[i])
            n = int(randV() * self.D)
            L = 0
            while True:
                tmp.v[n] = self.pop[self.r5].v[n] + (self.pop[self.r1].v[n] + self.pop[self.r2].v[n] - self.pop[self.r3].v[n] - self.pop[self.r4].v[n]) * self.F
                n = (n + 1) % self.D
                L += 1
                if not ((randV() &lt; self.CR) and (L &lt; self.D)):
                    break

        elif (self.strategy == 6):
            tmp.assign(self.pop[i])
            n = int(randV() * self.D)
            for L in range(self.D):
                if ((randV() &lt; self.CR) or L == (self.D - 1)):
                    tmp.v[n] = self.lastgenbest.v[n] + self.F*(self.pop[self.r2].v[n] - self.pop[self.r3].v[n])
                n = (n + 1) % self.D

        elif (self.strategy == 7):
            tmp.assign(self.pop[i])
            n = int(randV() * self.D)
            for L in range(self.D):
                if ((randV() &lt; self.CR) or L == (self.D - 1)):
                    tmp.v[n] = self.pop[self.r1].v[n] + self.F*(self.pop[self.r2].v[n] - self.pop[self.r3].v[n])
                n = (n + 1) % self.D

        elif (self.strategy == 8):
            tmp.assign(self.pop[i])
            n = int(randV() * self.D)
            for L in range(self.D):
                if ((randV() &lt; self.CR) or L == (self.D - 1)):
                    tmp.v[n] = tmp.v[n] + self.F*(self.lastgenbest.v[n] - tmp.v[n]) + self.F*(self.pop[self.r1].v[n] - self.pop[self.r2].v[n])
                n = (n + 1) % self.D

        elif (self.strategy == 9):
            tmp.assign(self.pop[i])
            n = int(randV() * self.D)
            for L in range(self.D):
                if ((randV() &lt; self.CR) or L == (self.D - 1)):
                    tmp.v[n] = self.lastgenbest.v[n] + (self.pop[self.r1].v[n] + self.pop[self.r2].v[n] - self.pop[self.r3].v[n] - self.pop[self.r4].v[n]) * self.F
                n = (n + 1) % self.D

        else:
            tmp.assign(self.pop[i])
            n = int(randV() * self.D)
            for L in range(self.D):
                if ((randV() &lt; self.CR) or L == (self.D - 1)):
                    tmp.v[n] = self.pop[self.r5].v[n] + (self.pop[self.r1].v[n] + self.pop[self.r2].v[n] - self.pop[self.r3].v[n] - self.pop[self.r4].v[n]) * self.F
                n = (n + 1) % self.D
        return tmp

    cdef void report(self):
        """
        report current generation status
        """
        cdef int i
        cdef double v

        if self.gen == 0:
            print("DiffertialEvolution results - init pop")
        elif self.gen == self.maxGen:
            print("Final DiffertialEvolution results at %d generations"%(self.gen,))
        else:
            print("DiffertialEvolution results after %d generations"%(self.gen,))
        print("Function : %.6f" % (self.currentbest.f))
        for i, v in enumerate(self.currentbest.v.flat, start=1):
            print("Var %d : %.4f"%(i, v))

    cdef bool overbound(self, Chromosome member):
        """
        check the member's chromosome that is out of bound?
        """
        cdef int i

        for i in range(self.D):
            if member.v[i] &gt; self.ub[i] or member.v[i] &lt; self.lb[i]:
                return True
        return False

    cdef void run(self):
        """
        run the algorithm...
        """
        cdef Chromosome tmp
        cdef int i

        # initial step
        # generation 0
        self.gen = 0
        # init the member's chromsome
        self.init()
        # find the best one(smallest fitness value)
        tmp = self.findBest()
        # copy to lastgenbest
        self.lastgenbest.assign(tmp)
        # copy to currentbest
        self.currentbest.assign(tmp)
        # report status
        self.report()
        # end initial step

        # the evolution journey is beggin...
        for self.gen in range(1, self.maxGen + 1):
            for i in range(self.NP):
                # generate new vector
                self.generateRandomVector(i)
                # use the vector recombine the member to temporary
                tmp = self.recombination(i)
                # check the one is out of bound?
                if self.overbound(tmp):
                    # if it is, then abandon it
                    continue
                # is not out of bound, that mean it's quilify of enviorment
                # then evalute the one
                tmp.f = self.evalute(tmp)
                # if temporary one is better than origin(fitness value is smaller)
                if tmp.f &lt;= self.pop[i].f:
                    # copy the temporary one to origin member
                    self.pop[i].assign(tmp)
                    # check the temporary one is better than the currentbest
                    if tmp.f &lt; self.currentbest.f:
                        # copy the temporary one to currentbest
                        self.currentbest.assign(tmp)
            # copy the currentbest to lastgenbest
            self.lastgenbest.assign(self.currentbest)
            # if report generation is set, report
            if self.rpt != 0:
                if self.gen % self.rpt == 0:
                    self.report()
        # the evolution journey is done, report the final status
        self.report()</pre>
<p>使用 Real-coded Genetic algorithm 解題:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import time
import math


class Chromosome(object):

    def __init__(self, n=None):
        self.np = n if n &gt; 0 else 2
        self.f = 0.0
        self.v = [0.0] * n

    def cp(self, obj):
        """
        copy all atribute from another chromsome object
        """
        self.np = obj.np
        self.f = obj.f
        self.v = obj.v[:]

    def get_v(self, i):
        return self.v[i]

    def is_self(self, obj):
        """
        check the object is self?
        """
        return obj is self

    def assign(self, obj):
        if not self.is_self(obj):
            self.cp(obj)


class Genetic(object):

    def __init__(self, func, pType, nParm, nPop, pCross, pMute, pWin, bDelta, upper, lower):
        """
        init(function func)
        """
        self.func=func
        self.pType = pType
        self.nParm=nParm
        self.nPop=nPop
        self.pCross=pCross
        self.pMute=pMute
        self.pWin=pWin
        self.bDelta=bDelta

        self.chrom = [Chromosome(nParm) for i in range(nPop)]
        self.newChrom = [Chromosome(nParm) for i in range(nPop)]
        self.babyChrom = [Chromosome(nParm) for i in range(3)]
        self.chromElite = [Chromosome(nParm)]
        self.chromBest = [Chromosome(nParm)]
        self.maxLimit = upper[:]
        self.minLimit = lower[:]

        self.maxGen = None
        self.gen = None

        self.seed = 0.0
        self.iseed = 470211272.0
        self.mask = 2147483647

    def check(self, i, v):
        """
        If a variable is out of bound,
        replace it with a random value
        """
        if (v &gt; self.maxLimit[i]) or (v &lt; self.minLimit[i]):
            return self.randVal(self.minLimit[i], self.maxLimit[i])
        return v

    def crossOver(self):
        for i in range(0, self.nPop-1, 2):
            # crossover
            if(self.rnd() &lt; self.pCross):
                for s in range(self.nParm):
                    # first baby, half father half mother
                    self.babyChrom[0].v[s] = 0.5 * self.chrom[i].v[s] + 0.5*self.chrom[i+1].v[s];
                    # second baby, three quaters of fater and quater of mother
                    self.babyChrom[1].v[s] = self.check(s, 1.5 * self.chrom[i].v[s] - 0.5*self.chrom[i+1].v[s])
                    # third baby, quater of fater and three quaters of mother
                    self.babyChrom[2].v[s] = self.check(s,-0.5 * self.chrom[i].v[s] + 1.5*self.chrom[i+1].v[s]);

                for j in range(3):
                    self.babyChrom[j].f = self.func(self.babyChrom[j].v)
                # maximization
                if self.pType == 1:
                    
                    if self.babyChrom[1].f &gt; self.babyChrom[0].f:
                        self.babyChrom[0], self.babyChrom[1] = self.babyChrom[1], self.babyChrom[0]

                    if self.babyChrom[2].f &gt; self.babyChrom[0].f:
                        self.babyChrom[2], self.babyChrom[0] = self.babyChrom[0], self.babyChrom[2]

                    if self.babyChrom[2].f &gt; self.babyChrom[1].f:
                        self.babyChrom[2], self.babyChrom[1] = self.babyChrom[1], self.babyChrom[2]

                else:
                    
                    if self.babyChrom[1].f &lt; self.babyChrom[0].f:
                        self.babyChrom[0], self.babyChrom[1] = self.babyChrom[1], self.babyChrom[0]

                    if self.babyChrom[2].f &lt; self.babyChrom[0].f:
                        self.babyChrom[2], self.babyChrom[0] = self.babyChrom[0], self.babyChrom[2]

                    if self.babyChrom[2].f &lt; self.babyChrom[1].f:
                        self.babyChrom[2], self.babyChrom[1] = self.babyChrom[1], self.babyChrom[2]

                # replace first two baby to parent, another one will be
                self.chrom[i].assign(self.babyChrom[0])
                self.chrom[i+1].assign(self.babyChrom[1])

    def delta(self, y):
        r = float(self.gen) / self.maxGen;
        return y*self.rnd()*math.pow(1.0-r, self.bDelta)

    def fitness(self):
        for j in range(self.nPop):
            self.chrom[j].f = self.func(self.chrom[j].v)

        self.chromBest[0].assign(self.chrom[0])

        for j in range(self.nPop):
            if self.pType == 1:
                if(self.chrom[j].f &gt; self.chromBest[0].f):
                    self.chromBest[0].assign(self.chrom[j])
            else:
                if(self.chrom[j].f &lt; self.chromBest[0].f):
                    self.chromBest[0].assign(self.chrom[j])
        if self.pType == 1:
            if(self.chromBest[0].f &gt; self.chromElite[0].f):
                self.chromElite[0].assign(self.chromBest[0])
        else:
            if(self.chromBest[0].f &lt; self.chromElite[0].f):
                self.chromElite[0].assign(self.chromBest[0])

    def initialPop(self):
        for j in range(self.nPop):
            for i in range(self.nParm):
                self.chrom[j].v[i] = self.randVal(self.minLimit[i], self.maxLimit[i])

    def mutate(self):
        for i in range(self.nPop):
            if self.rnd() &lt; self.pMute:
                s = self.random(self.nParm)
                if (self.random(2) == 0):
                    self.chrom[i].v[s] += self.delta(self.maxLimit[s]-self.chrom[i].v[s])
                else:
                    self.chrom[i].v[s] -= self.delta(self.chrom[i].v[s]-self.minLimit[s])

    def report(self):
        if self.gen == 0:
            print("Genetik results - Initial population")
        elif self.gen == self.maxGen:
            print("Final Genetik results at", self.gen, "generations")
        else:
            print("Genetik results after", self.gen, "generations")

        print("Function : %.6f" % (self.chromElite[0].f))
        for i, p in enumerate(self.chromElite[0].v):
            print("Var", i+1, ":", p)

    def select(self):
        """
        roulette wheel selection
        """
        for i in range(self.nPop):
            j = self.random(self.nPop)
            k = self.random(self.nPop)
            self.newChrom[i].assign(self.chrom[j])
            if self.pType == 1:
                if(self.chrom[k].f &gt; self.chrom[j].f) and (self.rnd() &gt; self.pWin):
                    self.newChrom[i].assign(self.chrom[k])
            else:
                if(self.chrom[k].f &lt; self.chrom[j].f) and (self.rnd() &lt; self.pWin):
                    self.newChrom[i].assign(self.chrom[k])
        # in this stage, newChrom is select finish
        # now replace origin chrom
        for i in range(self.nPop):
            self.chrom[i].assign(self.newChrom[i])

        # select random one chrom to be best chrom, make best chrom still exist
        j = self.random(self.nPop);
        self.chrom[j].assign(self.chromElite[0])

    def run(self, mxg, rp):
        """
        // **** Init and run GA for maxGen times
        // **** mxg : maximum generation
        // **** rp  : report cycle, 0 for final report or
        // ****       report each mxg modulo rp
        """
        self.maxGen = mxg
        self.rpt = rp

        self.randomize()
        self.initialPop()
        self.chrom[0].f = self.func(self.chrom[0].v)
        self.chromElite[0].assign(self.chrom[0])

        self.gen = 0
        self.fitness()
        self.report()

        for self.gen in range(1, self.maxGen + 1):
            self.select()
            self.crossOver()
            self.mutate()
            self.fitness()
            if rp != 0:
                if self.gen % self.rpt == 0:
                    self.report()
        self.report()

    def newSeed(self):
        if(self.seed == 0.0):
            self.seed=self.iseed
        else:
            self.seed *= 16807.0
            self.seed = math.fmod(self.seed, self.mask)

    def rnd(self):
        self.newSeed()
        return self.seed/self.mask

    def randomize(self):
        self.seed = time.time()

    def random(self, k):
        return int(self.rnd()*k)

    def randVal(self, low, high):
        number_types = (int, float)
        if isinstance(low, number_types) and isinstance(high, number_types):
            return self.rnd()*(high-low)+low
        raise ValueError
        
#fittness function (cost function)
def evaluate(designVariablel):
    surface = 80.0
    # if pType is 1, the penality is negative (maximization problem)
    # if pType is 0, the penality is positive (minimization problem)
    penality = -1000

    z = (surface-designVariablel[0]*designVariablel[1])/(2.0*(designVariablel[0]\
         +designVariablel[1]))
    volume = designVariablel[0]*designVariablel[1]*z
  
    if(volume &lt;= 0):
        return penality

    # box length and width need to be larger than 0
    if(designVariablel[0] &lt;= 0):
        return penality

    if(designVariablel[1] &lt;= 0):
        return penality
    #return 1+1/(volume*volume)
    return volume

#volume = Genetic(self, func, pType, nParm, nPop, pCross, pMute, pWin, bDelta, upper, lower):
volume = Genetic(evaluate, 1, 2, 1000, 0.95, 0.05, 0.95, 5, [0, 0], [50, 50])
volume.run(1000, 50)
</pre>
<p></p>
<h2>雲端 CAD</h2>
<p><span>Dec. 26 2015</span></p>
<h4><span>Onshape</span></h4>
<p>屬於二十一世紀的電腦輔助機械設計軟體:<span> </span><a href="http://www.onshape.com/">http://www.onshape.com</a></p>
<p>西元 2000 年, 當時的 PTC 公司在著名的 Pro/Engineer 套件中加入 Pro/Web.Link, 當時的 Javascript 技術在 Java 強力橫掃程式界的時候, 還是得透過呼叫 Java 程式庫, 才能夠運行, 但是能夠在嵌入式 Internet Explorer 與 Firefox 瀏覽器中運行的半調子 Engineer to Engineer 二次開發技術, 仍然讓人眼睛為之一亮.</p>
<p>十幾年過去, 採用 Javascript 技術的 Pro/Web.Link 仍然停留在原地, 沒給隨後改名為 Creo Parametric 的參數化模組, 帶來令人振奮的應用, 但是 Javascript 技術自從 2009 年 node.js 發表以來, 就不斷在全球資訊網的前後端環境嚴密整合下, 持續發光發熱, 加上 HTML5 (2010)、WebGL (2009) 與 Git (2005) 技術的推波助瀾, 終於讓 Onshape:<span> </span><a href="http://www.onshape.com/">http://www.onshape.com</a><span> </span>團隊決定自 2012 年開始, 利用這些相關技術 (結合 Javascript V8 與 NoSQL) 打造一套全瀏覽器的雲端電腦輔助機械設計軟體.</p>
<p>Onshpae 的推出, 終於讓二十一世紀的機械設計工程師感受到平版與手機時代的到來, 面對全球無縫整合的產品開發流程, 任何人都可以隨時隨地在有網路連線的地方, 用任何裝置參與協同.</p>
<p>Onshape 的可貴, 不僅解決協同產品開發團隊間, 軟體版次分歧與維護的問題, 而且徹底改變過去產品生命週期管理上, MCAD (Mechanical Computer Aided Design) 軟體套件無法全雲端運作, 所帶來的簽出入時間差異困擾, 讓協同團隊人員, 能夠即時線上協同, 關注同一份設計資料 ,而且整個團隊, 在特定的產品設計專案上, 每個零件與組立圖, 在不同的工作屬性下, 保證只有一份資料.</p>
<p>在此同時, Onshape 團隊也意識到全球自造時代 (Self-manufacturing Era) 將會是二十一世紀最重要的產品設計開發模式之一, 因此套件公開推出時, 允許使用者透過免費方案, 將設計內容公開者, 就可以擁有 5GB 的容量空間, 相信此舉會讓過去數以百萬計的標準零件庫迅速納入旗下, 成為全球各方人員搭配組合新產品的重要來源之一.</p>
<p>尤有甚者, 全雲端全瀏覽器的 MCAD, 將會帶動隨後全球各類 CAX 應用的虛實整合與平行分散運算, 讓網路上閒置的運算資源降到最低.</p>
<p>總而言之, Onshape 的推出, 讓沉悶已久的電腦輔助機械設計界, 重新看到新的契機, 全球協同產品開發不再只是口號, 相信過去幾十年來作威作福的半調子 MCAD &amp; PLM 套件開發者與代理商, 可以深刻記取教訓, 因為真正屬於二十一世紀的電腦輔助機械設計軟體, 已經來了.</p>
<h4>機器人定義</h4>
<p>Word robot was coined by a Czech novelist Karel Capek in a 1920 play titled Rassum's Universal Robots (RUR), Robot in Czech is a word for worker or servant</p>
<p>Definition of robot (可程式化之多功能機械稱為機器人):</p>
<p>1) Any machine made by by one of our members: Robot Institute of America</p>
<p>2) A robot is a reprogrammable, multifunctional manipulator designed to move material, parts, tools or specialized devices through variable programmed motions for the performance of a variety of tasks: Robot Institute of America, 1979</p>
<h4>機電資整合課程教育目標</h4>
<p><a href="https://eprints.qut.edu.au/6167/1/6167.pdf">Infomechatronics</a> Course Objectives (<a href="/downloads/INFOMECHATRONICS.pdf">infomechatronics.pdf</a>)</p>
<ul>
<li>To produce an engineering graduate with broad knowledge and skills across the three engineering disciplines of Information Technology, Electrical &amp; Electronic and Mechanical &amp; Manufacturing Engineering who meet the needs of industry with respect to the design, fabrication and service of computer controlled industrial machinery and consumer products.</li>
<li>To provide a broad-based academic training program aimed at producing future industry managers who can be effective in research and technology whilst leading industry in an innovative, efficient and socially responsible way.</li>
<li>To provide, prior to entry to the work force, a course of study in engineering science and technology with adequate awareness of the importance of a multi-disciplinary approach to the optimal design and fabrication of computer controlled machinery.</li>
<li>To develop good communication, leadership, managerial, and life long learning skills.</li>
<li>To develop in graduates a high degree of competence and confidence within their chosen areas of study that will facilitate their ready acceptance into work force in commerce, industry &amp; government.</li>
<li>To develop in graduates a sound knowledge and understanding of the fundamentals of their discipline so that they can adapt to scientific, technological and social changes.</li>
<li>To develop the capability for critical thinking and analysis to apply the knowledge gained from their course of study to the solution of real life problems</li>
<li>To instill a sensitivity to and understanding of culture and gender related issues as they relate to professional and ethical practices</li>
</ul>
<p><!-- 暫時不用
<p><canvas id="cango_gear" width="700" height="400"></canvas></p>
<p>
<script type="application/lua">
js = require "js"
window = js.global
Array = js.global.Array
canvas = window.document:getElementById("cango_gear")

-- 將 lua table 轉為 new JavaScript Object 的方法
-- e.g. Object{mykey="myvalue"}
function Object(t)
    local o = js.new(js.global.Object)
    for k, v in pairs(t) do
        assert(type(k) == "string" or js.typeof(k) == "symbol", "JavaScript only has string and symbol keys")
        o[k] = v
    end
    return o
end

-- javascript constructor
cgo = js.new(window.Cango, "cango_gear")
--local path = js.new(window.Path)
local shape = js.new(window.Shape)
-- Javascript 變數
shapedefs = window.shapeDefs
-- 角度轉為徑度
deg = math.pi/180

function cangoGear(m, n, pa)
    -- pr 為節圓半徑
    pr = n*m/2 -- gear Pitch radius
    data = js.new(window.createGearTooth, m, n, pa)
    gearTooth = js.new(window.Path, data, Object{
      fillColor= "#ddd0dd",
      border= true,
      strokeColor= "#606060" })
    gearTooth:rotate(180/n) -- rotate gear 1/2 tooth to mesh
    gear = gearTooth:dup()
    for i = 1, n-1 do
        newTooth = gearTooth:dup()
        newTooth:rotate(360*i/n)
        gear:appendPath(newTooth)
    end

    -- 建立軸孔
    hr = 0.6*pr -- diameter of gear shaft
    shaft = js.new(window.Path, shapedefs:circle(hr))
    gear:appendPath(shaft)
    return gear
end

n1 = 13
n2 = 24
n3 = 21
reduced_ratio = 0.5
-- 使用 80% 的畫布寬度
m = 0.8*(canvas.width)/((n1+n2+n3)*reduced_ratio)
cx = (canvas.width)/2
cy = (canvas.height)/2
-- 設定共同的壓力角
pa = 25
pr1 = n1*m/2
pr2 = n2*m/2
pr3 = n3*m/2
-- 建立 gear
gear1 = cangoGear(m, n1, pa)
gear2 = cangoGear(m, n2, pa)
gear3 = cangoGear(m, n3, pa)

deg = math.pi/180
rotate_speed = 12*deg

function draw()
    cgo:clearCanvas()

    gear1.transform:translate(cx-(pr1+pr2)*reduced_ratio, cy)
    gear1.transform:scale(reduced_ratio)
    gear1.transform:rotate(0)
    gear1:rotate(rotate_speed)
    cgo:render(gear1)
    
    gear2.transform:translate(cx, cy)
    gear2.transform:scale(reduced_ratio)
    gear2.transform:rotate(180+(360/n2/2))
    gear2:rotate(-(rotate_speed)*n1/n2)
    cgo:render(gear2)
    
    gear3.transform:translate(cx+(pr2+pr3)*reduced_ratio, cy)
    gear3.transform:scale(reduced_ratio)
    gear3.transform:rotate(180+(360/n3/2)+(180+(360/n2/2))*n2/n3)
    gear3:rotate((rotate_speed*n1/n2)*(n2/n3))
    cgo:render(gear3)
    print(gear1:toString())
end

--draw()
window:setInterval(draw, 2)
</script>
--></p>
<p><img alt="" height="367" src="/images/three_gears.png" width="790"/></p>
<h2>大學</h2>
<h4>二十一世紀大學</h4>
<p>二十一世紀, 在網路科技的推波助瀾下, 許多行業與組織都產生了本質上的變化, 大學, 這個經常被稱為象牙塔的最後防線, 也終於必須因應全球化知識經濟的快速發展, 而做出相當程度的進化, 否則難逃被淘汰的命運.</p>
<p>從許多文獻的觀察可以得知, 二十一世紀的大學, 必須讓團隊中特定比例的成員, 擁抱知識創業的趨勢.</p>
<p>在此, 我們認為, 至少 70% 的大學成員必須俱備知識創業的能力與作為, 其餘的成員則仍能一如既往, 按照本身的認知, 從事任何自己有興趣的教學與研究, 而無需受到是否真正達到所謂知識的精進或創業獲利的約束.</p>
<p>Intellectual Entrepreneurship (知識創業)</p>
<p>Intellectual Entrepreneurship is a philosophy and vision of education viewing academics as "innovators" and "agents of change." It focuses on creating cross-disciplinary and multi-institutional collaborations designed to produce intellectual advancements (知識進展) with a capacity to provide real solutions (真正的解決方案) to society's problems and needs. Intellectual Entrepreneurship is academic engagement for the purpose of changing lives.</p>
<p>Intellectual Entrepreneurship moves the mission of institutions of higher learning from "advancing the frontiers of knowledge" (推進知識前緣) and "preparing tomorrow's leaders" (培育未來領導人) to also "serving as engines of economic and social development." (成為經濟與社會發展的引擎) In the process, the role of faculty member and student evolves from that of "intellectual provocateur" (知識激發者)to becoming what might be called an "intellectual entrepreneur." (知識創業者) Intellectual Entrepreneurship includes a readiness to seek out opportunities, undertake the responsibility associated with each and tolerate the uncertainty that comes with initiating genuine innovation. Intellectual Entrepreneurship changes the model and metaphor of higher education from one of "apprenticeship-certification-entitlement" (學徒-認証-授權) to one of "discovery-ownership-accountability." (發現-擁有-負責)</p>
<p>Intellectual Entrepreneurship is premised on the belief that intellect is not limited to the academy and entrepreneurship is not restricted to or synonymous with business. Entrepreneurship is a process of cultural innovation. (創業是一種文化創新的過程) While the creation of material wealth is one expression of entrepreneurship, at a more profound level entrepreneurship is an attitude for engaging the world. Intellectual entrepreneurs, both inside and outside universities, take risks and seize opportunities (承擔風險並緊握機會), discover and create knowledge (發現並創造知識), innovate (創新) , collaborate (協同) and solve problems in any number of social realms (解決社會範疇上的問題): corporate, non-profit, government, and education (企業, 非營利, 政府與教育單位).</p>
<p>Intellectual entrepreneurs understand that genuine collaboration between universities and the public is tantamount to more than increased "access" to the academy's intellectual assets. It is more than "knowledge transfer"--the exportation of neatly wrapped solutions rolling off the campus conveyer belt. Collaboration demands mutual humility and respect, joint ownership of learning and co-creation of an unimagined potential for innovation--qualities that move universities well beyond the typical elitist sense of "service." Knowledge, after all, involves the integration of theory, practice and production (知識終究包括理論, 實踐與生產的整合).</p>
<p>參考資料:</p>
<ul>
<li><a href="https://www.educause.edu/ir/library/pdf/ERM1010.pdf">https://www.educause.edu/ir/library/pdf/ERM1010.pdf</a>  or <a href="/downloads/Innovating%20the 21stCentury University.pdf">Innovating the 21st Century University.pdf</a></li>
<li><a href="http://www.huffingtonpost.com/otto-scharmer/u-lab-reinventing-the-21s_b_5669425.html">http://www.huffingtonpost.com/otto-scharmer/u-lab-reinventing-the-21s_b_5669425.html</a></li>
<li><a href="https://upcommons.upc.edu/bitstream/handle/2099/5970/2006-01_eng_van_ginkel.pdf">https://upcommons.upc.edu/bitstream/handle/2099/5970/2006-01_eng_van_ginkel.pdf</a> </li>
<li><a href="https://agenda.weforum.org/2015/05/5-ways-universities-have-already-changed-in-the-21st-century/">https://agenda.weforum.org/2015/05/5-ways-universities-have-already-changed-in-the-21st-century/</a></li>
<li><a href="https://www.nie.edu.sg/docs/default-source/te21_docs/te21_executive-summary_14052010---updated.pdf">https://www.nie.edu.sg/docs/default-source/te21_docs/te21_executive-summary_14052010---updated.pdf</a> </li>
<li><a href="http://www.ut-ie.com/">http://www.ut-ie.com/</a><span> </span>(知識創業)</li>
</ul>
<h4>機械工程系課程參考</h4>
<p>Computer Aided Design:</p>
<p style="padding-left: 30px;"><a href="https://www.meche.engineering.cmu.edu/education/undergraduate-education/">https://www.meche.engineering.cmu.edu/education/undergraduate-education/</a> </p>
<p style="padding-left: 30px;"><a href="https://www.andrew.cmu.edu/course/24-681/">https://www.andrew.cmu.edu/course/24-681/</a> </p>
<p><a href="https://www.meche.engineering.cmu.edu/education/undergraduate-education/index.html"></a>Introduction to CAD/CAE Tools:</p>
<p style="padding-left: 30px;"><a href="http://www.andrew.cmu.edu/course/24-688/">http://www.andrew.cmu.edu/course/24-688/</a> </p>
<h1>工具</h1>
<p>可攜程式環境:</p>
<p><a href="https://drive.google.com/file/d/1Pkkjg8RX3pkZkjWEBlQBggw11u5YSn5i/view?usp=sharing">p37</a> 為  1GB 可攜程式開發套件, 解開後放入隨身碟即可使用.</p>
<p><a href="https://drive.google.com/file/d/1_lisI3UVmYAEtM3wiSZ96QxDYrb0uV7n/view?usp=sharing">p37_adv</a> 為 15 GB 的程式開發套件.</p>
<p><a href="https://drive.google.com/file/d/12BLN4daAPlO1KjCTDFi1kqJZ6f5k7Y5k/view?usp=sharing">Qt</a> 則為 20GB 的程式開發套件.</p>
<p>Geometirc Modeling Kernel</p>
<p><a href="https://en.wikipedia.org/wiki/Parasolid">Parasolid</a><span> </span>- 由<span> </span><a href="https://en.wikipedia.org/wiki/Shape_Data_Limited">https://en.wikipedia.org/wiki/Shape_Data_Limited</a><span> </span>開發, 目前在<span> </span><a href="https://en.wikipedia.org/wiki/Siemens">Siemens</a><span> </span>旗下.</p>
<p><a href="https://en.wikipedia.org/wiki/ACIS">ACIS</a><span> </span>- 由<span> </span><a href="https://en.wikipedia.org/wiki/Spatial_Corp">https://en.wikipedia.org/wiki/Spatial_Corp</a><span> </span>開發, 源自<span> </span><a href="https://en.wikipedia.org/wiki/Romulus_(modelling_kernel)">https://en.wikipedia.org/wiki/Romulus_(modelling_kernel)</a>, 目前在<span> </span><a href="https://en.wikipedia.org/wiki/Dassault_Syst%C3%A8mes">Dassault</a><span> </span>旗下.</p>
<p><a href="https://en.wikipedia.org/wiki/ShapeManager">ShapeManager</a><span> </span>- 2001 年從<span> </span><a href="https://en.wikipedia.org/wiki/ACIS">ACIS</a><span> </span>分出, 由 AutoDesk 公司開發, 用於 Inventor.</p>
<p>參考資料:</p>
<p><a href="https://en.wikipedia.org/wiki/Geometric_modeling_kernel">https://en.wikipedia.org/wiki/Geometric_modeling_kernel</a> </p><h2>Solvespace</h2>
<p><a href="http://solvespace.com">http://solvespace.com</a> </p>
<p><a href="/downloads/solvespace_doc.pdf">Solvespace Documentation.pdf</a></p>
<p>利用 conda 安裝 Solvespace: <a href="https://anaconda.org/freecad/solvespace">https://anaconda.org/freecad/solvespace</a> </p>
<p>Solvespace 前身 <a href="http://cq.cx/sketchflat.pl">Sketchflat</a> 原始碼: <a href="/downloads/sketchflat.7z">sketchflat.7z</a></p>
<p><a href="/downloads/delta_printer_solvespace.7z">delta_printer_solvespace.7z</a></p>
<p><a href="/downloads/delta_printer_v2.7z">delta_printer_v2.7z</a></p>
<p><iframe allowfullscreen="allowfullscreen" frameborder="0" height="475" mozallowfullscreen="mozallowfullscreen" src="https://player.vimeo.com/video/161012508" webkitallowfullscreen="webkitallowfullscreen" width="640"></iframe></p>
<p><a href="https://vimeo.com/161012508">Slasher assembly (solvespace)</a> from <a href="https://vimeo.com/user4043940">Phoenix Kayo</a> on <a href="https://vimeo.com">Vimeo</a>.</p>
<p>參考資料:</p>
<p><a href="http://mde.tw/2017springcd/blog/midterm-collaboration-evaluation.html">http://mde.tw/2017springcd/blog/midterm-collaboration-evaluation.html</a> </p>
<p>平面多連桿機構模擬:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import math
import time
# 利用 matplotlib 程式庫畫出 contour 輪廓
import matplotlib.pyplot as plt
 
class Coord(object):
    def __init__(self,x,y):
        self.x = x
        self.y = y
 
    def __sub__(self,other):
        # This allows you to substract vectors
        return Coord(self.x-other.x,self.y-other.y)
 
    def __repr__(self):
        # Used to get human readable coordinates when printing
        return "Coord(%f,%f)"%(self.x,self.y)
 
    def length(self):
        # Returns the length of the vector
        return math.sqrt(self.x**2 + self.y**2)
 
    def angle(self):
        # Returns the vector's angle
        return math.atan2(self.y,self.x)
 
def normalize(coord):
    return Coord(
        coord.x/coord.length(),
        coord.y/coord.length()
        )
 
def perpendicular(coord):
    # Shifts the angle by pi/2 and calculate the coordinates
    # using the original vector length
    return Coord(
        coord.length()*math.cos(coord.angle()+math.pi/2),
        coord.length()*math.sin(coord.angle()+math.pi/2)
        )
 
 
# 點類別
class Point(object):
    # 起始方法
    def __init__(self, x, y):
        self.x = x
        self.y = y
 
    # 加入 Eq 方法
    def Eq(self, pt):
        self.x = pt.x
        self.y = pt.y
 
    # 加入 setPoint 方法
    def setPoint(self, px, py):
        self.x = px
        self.y = py
 
    # 加上 distance(pt) 方法, 計算點到 pt 的距離
    def distance(self, pt):
        self.pt = pt
        x = self.x - self.pt.x
        y = self.y - self.pt.y
        return math.sqrt(x * x + y * y)
 
 
# Line 類別物件
class Line(object):
 
    # 起始方法
    def __init__(self, p1, p2):
        self.p1 = p1
        self.p2 = p2
        # 直線的第一點, 設為線尾
        self.Tail = self.p1
        # 直線組成的第二點, 設為線頭
        self.Head = self.p2
        # 直線的長度屬性
        self.length = math.sqrt(math.pow(self.p2.x-self.p1.x, 2)+math.pow(self.p2.y-self.p1.y,2))
 
    # setPP 以指定頭尾座標點來定義直線
    def setPP(self, p1, p2):
        self.p1 = p1
        self.p2 = p2
        self.Tail = self.p1
        self.Head = self.p2
        self.length = math.sqrt(math.pow(self.p2.x-self.p1.x, 2)+math.pow(self.p2.y-self.p1.y,2))
 
    # setRT 方法 for Line, 應該已經確定 Tail 點, 然後以 r, t 作為設定 Head 的參考
    def setRT(self, r, t):
        self.r = r
        self.t = t
        x = self.r * math.cos(self.t)
        y = self.r * math.sin(self.t)
        self.Tail.Eq(self.p1)
        self.Head.setPoint(self.Tail.x + x,self.Tail.y + y)
 
    # getR 方法 for Line
    def getR(self):
        # x 分量與 y 分量
        x = self.p1.x - self.p2.x
        y = self.p1.y - self.p2.y
        return math.sqrt(x * x + y * y)
 
    # 根據定義 atan2(y,x), 表示 (x,y) 與 正 x 軸之間的夾角, 介於 pi 與 -pi 間
    def getT(self):
        x = self.p2.x - self.p1.x
        y = self.p2.y - self.p1.y
        if (math.fabs(x) &lt; math.pow(10,-100)):
            if(y &lt; 0.0):
                return (-math.pi/2)
            else:
                return (math.pi/2)
        else:
            return math.atan2(y, x)
 
    # setTail 方法 for Line
    def setTail(self, pt):
        self.pt = pt
        self.Tail.Eq(pt)
        self.Head.setPoint(self.pt.x + self.x, self.pt.y + self.y)
 
    # getHead 方法 for Line
    def getHead(self):
        return self.Head
 
    def getTail(self):
        return self.Tail
 
 
class Link(Line):
    def __init__(self, p1, p2):
        self.p1 = p1
        self.p2 = p2
        self.length = math.sqrt(math.pow((self.p2.x - self.p1.x), 2) + math.pow((self.p2.y - self.p1.y), 2))
 
 
class Triangle(object):
    def __init__(self, p1, p2, p3):
        self.p1 = p1
        self.p2 = p2
        self.p3 = p3
 
    def getLenp3(self):
        p1 = self.p1
        ret = p1.distance(self.p2)
        return ret
 
    def getLenp1(self):
        p2 = self.p2
        ret = p2.distance(self.p3)
        return ret
 
    def getLenp2(self):
        p1 = self.p1
        ret = p1.distance(self.p3)
        return ret
 
    # 角度
    def getAp1(self):
        ret = math.acos(((self.getLenp2() * self.getLenp2() + self.getLenp3() * self.getLenp3()) - self.getLenp1() * self.getLenp1()) / (2* self.getLenp2() * self.getLenp3()))
        return ret
 
    def getAp2(self):
        ret =math.acos(((self.getLenp1() * self.getLenp1() + self.getLenp3() * self.getLenp3()) - self.getLenp2() * self.getLenp2()) / (2* self.getLenp1() * self.getLenp3()))
        return ret
 
    def getAp3(self):
        ret = math.acos(((self.getLenp1() * self.getLenp1() + self.getLenp2() * self.getLenp2()) - self.getLenp3() * self.getLenp3()) / (2* self.getLenp1() * self.getLenp2()))
        return ret
 
    # ends Triangle def
    # 透過三個邊長定義三角形
    def setSSS(self, lenp3, lenp1, lenp2):
        self.lenp3 = lenp3
        self.lenp1 = lenp1
        self.lenp2 = lenp2
        self.ap1 = math.acos(((self.lenp2 * self.lenp2 + self.lenp3 * self.lenp3) - self.lenp1 * self.lenp1) / (2* self.lenp2 * self.lenp3))
        self.ap2 = math.acos(((self.lenp1 * self.lenp1 + self.lenp3 * self.lenp3) - self.lenp2 * self.lenp2) / (2* self.lenp1 * self.lenp3))
        self.ap3 = math.acos(((self.lenp1 * self.lenp1 + self.lenp2 * self.lenp2) - self.lenp3 * self.lenp3) / (2* self.lenp1 * self.lenp2))
 
    # 透過兩個邊長與夾角定義三角形
    def setSAS(self, lenp3, ap2, lenp1):
        self.lenp3 = lenp3
        self.ap2 = ap2
        self.lenp1 = lenp1
        self.lenp2 = math.sqrt((self.lenp3 * self.lenp3 + self.lenp1 * self.lenp1) - 2* self.lenp3 * self.lenp1 * math.cos(self.ap2))
        #等於 SSS(AB, BC, CA)
 
    def setSaSS(self, lenp2, lenp3, lenp1):
        self.lenp2 = lenp2
        self.lenp3 = lenp3
        self.lenp1 = lenp1
        if(self.lenp1 &gt; (self.lenp2 + self.lenp3)):
        #CAB 夾角為 180 度, 三點共線且 A 介於 BC 之間
            ret = math.pi
        else :
            # CAB 夾角為 0, 三點共線且 A 不在 BC 之間
            if((self.lenp1 &lt; (self.lenp2 - self.lenp3)) or (self.lenp1 &lt; (self.lenp3 - self.lenp2))):
                ret = 0.0
            else :
            # 透過餘絃定理求出夾角 CAB 
                ret = math.acos(((self.lenp2 * self.lenp2 + self.lenp3 * self.lenp3) - self.lenp1 * self.lenp1) / (2 * self.lenp2 * self.lenp3))
        return ret
 
    # 取得三角形的三個邊長值
    def getSSS(self):
        temp = []
        temp.append( self.getLenp1() )
        temp.append( self.getLenp2() )
        temp.append( self.getLenp3() )
        return temp
 
    # 取得三角形的三個角度值
    def getAAA(self):
        temp = []
        temp.append( self.getAp1() )
        temp.append( self.getAp2() )
        temp.append( self.getAp3() )
        return temp
 
    # 取得三角形的三個角度與三個邊長
    def getASASAS(self):
        temp = []
        temp.append(self.getAp1())
        temp.append(self.getLenp1())
        temp.append(self.getAp2())
        temp.append(self.getLenp2())
        temp.append(self.getAp3())
        temp.append(self.getLenp3())
        return temp
 
    #2P 2L return mid P
    def setPPSS(self, p1, p3, lenp1, lenp3):
        temp = []
        self.p1 = p1
        self.p3 = p3
        self.lenp1 = lenp1
        self.lenp3 = lenp3
 
        #bp3 is the angle beside p3 point, cp3 is the angle for line23, p2 is the output
        line31 = Line(p3, p1)
        self.lenp2 = line31.getR()
        #self.lenp2 = self.p3.distance(self.p1)
        #這裡是求角3
        ap3 = math.acos(((self.lenp1 * self.lenp1 + self.lenp2 * self.lenp2) - self.lenp3 * self.lenp3) / (2 * self.lenp1 * self.lenp2))
        #ap3 = math.acos(((self.lenp1 * self.lenp1 + self.lenp3 * self.lenp3) - self.lenp2 * self.lenp2) / (2 * self.lenp1 * self.lenp3))
        bp3 = line31.getT()
        cp3 = bp3 - ap3
        temp.append(p3.x + self.lenp1*math.cos(cp3))#p2.x
        temp.append(p3.y + self.lenp1*math.sin(cp3))#p2.y
        return temp
 
# 以上為相關函式物件的定義區
# 全域變數
midpt = Point(0, 0)
tippt = Point(0, 0)
contour = []
 
# 幾何位置輸入變數
x=10
y=10
r=10
 
# 其他輸入變數
theta = 0
degree = math.pi/180.0
dx = 2
dy = 4
 
#set p1.p2.p3.p4 position
p1 =  Point(150,100)
p2 =  Point(150,200)
p3 =  Point(300,300)
p4 =  Point(350,100)
 
#create links
line1 =  Link(p1,p2)
line2 =  Link(p2,p3)
line3 =  Link(p3,p4)
line4 =  Link(p1,p4)
line5 =  Link(p2,p4)
 
link2_len = p2.distance(p3)
link3_len = p3.distance(p4)
 
triangle1 =  Triangle(p1,p2,p4)
triangle2 =  Triangle(p2,p3,p4)
 
def simulate():
    global theta, midpt, oldpt
    theta += dx
    p2.x = p1.x + line1.length*math.cos(theta*degree)
    p2.y = p1.y - line1.length*math.sin(theta*degree)
    p3.x, p3.y = triangle2.setPPSS(p2,p4,link2_len,link3_len)
    # 計算垂直單位向量
    a = Coord(p3.x, p3.y)
    b = Coord(p2.x, p2.y)
    normal = perpendicular(normalize(a-b))
    midpt.x = (p2.x + p3.x)/2
    midpt.y = (p2.y + p3.y)/2
    tippt.x = midpt.x + 150*normal.x
    tippt.y = midpt.y + 150*normal.y
    # 印出座標點
    #print(round(tippt.x, 2), round(tippt.y, 2))
    if theta &lt; 360:
        contour.append((round(tippt.x, 2), round(tippt.y, 2)))
 
for i in range(180):
    simulate()
# 印出 contour 
#print(contour)
 
x_list = [x for (x, y) in contour]
y_list = [y for (x, y) in contour]
 
plt.xlabel('x coordinate')
plt.ylabel('y coordinate')
 
plt.plot(x_list, y_list)
plt.show()</pre>
<h3>程式庫範例</h3>
<p><a href="/downloads/Implementation of an Open Source Planar Linkage Mechanism Simulation and Dimensional Synthesis System.pdf">Implementation of an Open Source Planar Linkage Mechanism Simulation and Dimensional Synthesis System.pdf</a></p>
<p><a href="/downloads/sgcs_2_1.7z">sgcs_2_1.7z</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from math import pi, cos, sin, sqrt, acos
import matplotlib.pyplot as plt
 
radian = 180/pi
degree = pi/180
 
#PLAP
def plap(ax, ay, ac, bac, bx, by, pos):
    if pos == 0:
        cx= ac*cos(bac - acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ax 
        cy= ac*sin(bac - acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ay
    else:
        cx= ac*cos(bac + acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ax 
        cy= ac*sin(bac + acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ay
    return cx, cy
 
#PLLP
def pllp(ax, ay, ac, cb, bx, by, pos):
    if pos == 0:
        cx =  -((ay - by)*(-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 - sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx)) + (ac**2 - ax**2 - ay**2 + bx**2 + by**2 - cb**2)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))/(2*(ax - bx)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
        cy =  (-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(-ax + bx))/(2*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
    else:
        cx =  -((ay - by)*(-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx)) + (ac**2 - ax**2 - ay**2 + bx**2 + by**2 - cb**2)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))/(2*(ax - bx)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
        cy =  (-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx))/(2*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
    return cx, cy

def crank_rocker(angle, p1x, p1y, p2x, p2y, len1, len2, len3, len4, len5):
    p4x, p4y = plap(p1x, p1y, len1, angle, p2x, p2y, 0)
    #print("cx=", cx, "cy=", cy)
    p5x, p5y = pllp(p4x, p4y, len2, len3, p2x, p2y, 0)
    #print("dx=", dx, "dy=", dy)
    p3x, p3y = pllp(p4x, p4y, len4, len5, p5x, p5y, 0)
    #print("ex=", ex, "ey=", ey)
    return p3x, p3y
    
#主程式
Xval  = []
Yval  = []
inc = 5

for i in range(0, 360+inc, inc):
    try:
        p3x, p3y = crank_rocker(i*degree, 0, 0, 90, 0, 35, 70, 70, 40, 40)
        Xval += [p3x]
        Yval += [p3y]
        print(i, ":", round(p3x, 4), round(p3y, 4))
    except:
        pass
print ("Solve Completed")

plt.plot(Xval, Yval)
plt.xlabel('x coordinate')
plt.ylabel('y coordinate')
#plt.title("Involute - "+str(degree)+" deg")
plt.show()</pre>
<p></p>
<h2>Onshape</h2>
<p><a href="https://www.onshape.com/">https://www.onshape.com/</a> </p>
<h2>Solidworks</h2>
<p>取得安裝檔案</p>
<h2>V-rep</h2>
<p>參考資料:</p>
<p><a href="http://lab.kmol.info/2017fall/blog/kmol-2017-fall-event-driven-programming-design.html">http://lab.kmol.info/2017fall/blog/kmol-2017-fall-event-driven-programming-design.html</a> </p>
<p><a href="http://mde.tw/2017springcd/blog/vrep-introduction.html">http://mde.tw/2017springcd/blog/vrep-introduction.html</a> </p>
<p>One-link Robot Velocity Control</p>
<p>One-link manipulator Python3 remote API program:</p>
<p>Joint Properties -</p>
<p>Torque/Force Mode.</p>
<p>Moter enabled with Maximum torque setup and zero target velocity.</p>
<p>Joint ObjectName: Revolute_joint</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import sys
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
while True:
    choice = input("(e to exit, p to pause and enter to exec)&gt;")
    if choice == "e":
        print("exiting")
        vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
        break
    elif choice == "p":
        vrep.simxPauseSimulation(clientID, vrep.simx_opmode_oneshot_wait)
    else:
        vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot_wait)</pre>
<p>One-link Robot Position Control</p>
<p>One-link manipulator Python3 remote API program:</p>
<p>Joint Properties -</p>
<p>Torque/Force Mode.</p>
<p>Moter enabled with Maximum torque setup and zero target velocity.</p>
<p>Joint ObjectName: Revolute_joint</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import sys, math
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
deg = math.pi/180
 
#errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
def setJointPosition(incAngle, steps):
    for i  in range(steps):
        errorCode=vrep.simxSetJointPosition(clientID, Revolute_joint_handle, i*incAngle*deg, vrep.simx_opmode_oneshot_wait)
 
# 每步 10 度, 轉兩圈
setJointPosition(10, 72)
# 每步 1 度, 轉兩圈
#setJointPosition(1, 720)
# 每步 0.1  度, 轉720 步
#setJointPosition(0.1, 720)
 
'''
三軸同動時
simxPauseCommunication(clientID,1);
simxSetJointPosition(clientID,joint1Handle,joint1Value,simx_opmode_oneshot);
simxSetJointPosition(clientID,joint2Handle,joint2Value,simx_opmode_oneshot);
simxSetJointPosition(clientID,joint3Handle,joint3Value,simx_opmode_oneshot);
simxPauseCommunication(clientID,0);</pre>
<p>Fourbar Linkage Velocity Control</p>
<p>the First Joint properties -</p>
<p>Torque/Force mode with motor enabled and target velocity 120 deg/s and maximum torque 50 N*m.</p>
<p>Joint ObjectName: Revolute_joint</p>
<p>All other joints with Torque/Force mode without motor enabled.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import sys
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
while True:
    choice = input("(e to exit, p to pause and enter to exec)&gt;")
    if choice == "e":
        print("exiting")
        vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
        break
    elif choice == "p":
        vrep.simxPauseSimulation(clientID, vrep.simx_opmode_oneshot_wait)
    else:
        vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot_wait)</pre>
<p>Fourbar Linkage Position Control</p>
<p>V-rep Fourbar linkage remote API program:</p>
<p>the First Joint properties -</p>
<p>Passive mode with Hybrid operation.</p>
<p>Position control (PID) with proportional parameter 0.1 without I and D controls.</p>
<p>Joint ObjectName: Revolute_joint</p>
<p>All other joints properties -</p>
<p>Inverse kinematics mode with Hybrid operation.</p>
<p>Position control (PID) with proportional parameter 0.1 without I and D controls.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep, math
import sys
# child threaded script: 
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
deg = math.pi/180
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
#errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
def setJointPosition(incAngle, steps):
    for i  in range(steps):
        errorCode=vrep.simxSetJointPosition(clientID, Revolute_joint_handle, i*incAngle*deg, vrep.simx_opmode_oneshot_wait)
 
# 每步 10 度, 轉兩圈
setJointPosition(10,72)</pre>
<p><span>與上述四連桿位置控制流程相同, 但是由 Python3 remote API 程式負責控制 V-rep 的模擬啟動與模擬終止.</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep, math
import sys
# child threaded script: 
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
#啟動模擬
vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
deg = math.pi/180
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
#errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
def setJointPosition(incAngle, steps):
    for i  in range(steps):
        errorCode=vrep.simxSetJointPosition(clientID, Revolute_joint_handle, i*incAngle*deg, vrep.simx_opmode_oneshot_wait)
    #終止模擬
    vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
 
# 每步 10 度, 轉兩圈
setJointPosition(10, 72)</pre>
<p><span>兩軸同動資料傳送:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import sys, math
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
errorCode0,Revolute_joint_handle0=vrep.simxGetObjectHandle(clientID,'Revolute_joint0',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
deg = math.pi/180
 
#vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot)
 
for i in range(36):
    vrep.simxSynchronous(clientID,True)
    vrep.simxPauseCommunication(clientID,True)
    vrep.simxSetJointPosition(clientID, Revolute_joint_handle, 10*deg, vrep.simx_opmode_oneshot)
    vrep.simxSetJointPosition(clientID, Revolute_joint_handle0, 10*deg, vrep.simx_opmode_oneshot)
    vrep.simxPauseCommunication(clientID, False)
    vrep.simxSynchronous(clientID, False)
 
    vrep.simxSynchronous(clientID,True)
    vrep.simxPauseCommunication(clientID,True)
    vrep.simxSetJointPosition(clientID, Revolute_joint_handle, -10*deg, vrep.simx_opmode_oneshot)
    vrep.simxSetJointPosition(clientID, Revolute_joint_handle0, -10*deg, vrep.simx_opmode_oneshot)
    vrep.simxPauseCommunication(clientID, False)
    vrep.simxSynchronous(clientID, False)</pre>
<h2>Git</h2>
<p><a href="https://git-scm.com/">https://git-scm.com/</a> </p>
<p><a href="https://git-scm.com/book/zh-tw/v2">https://git-scm.com/book/zh-tw/v2</a> </p>
<p><a href="https://github.com/">https://github.com/</a> </p>
<p><a href="http://www.globallegalchronicle.com/microsofts-7-5-billion-acquisition-of-github/">http://www.globallegalchronicle.com/microsofts-7-5-billion-acquisition-of-github/</a> </p>
<p>git 常用指令</p>
<p>git add .</p>
<p>新增所有改版內容</p>
<p>git commit -m "提交訊息, 用來辨識版本"</p>
<p>在近端提交改版內容</p>
<p>git push</p>
<p>將近端改版內容推送到遠端</p>
<p>git pull</p>
<p>拉下遠端新版本內容, 在 fossil scm 使用 fossil update</p>
<p>git log</p>
<p>查驗 git 提交推送紀錄</p>
<p>git status</p>
<p>查驗狀態</p>
<p>git 新增提交推送的身分綁定</p>
<p>以 scrum1@mde.tw 註冊帳號為 scrum-1 為例:</p>
<p>git config --global user.name "scrum-1"</p>
<p>git config --global user.email "scrum1@mde.tw"</p>
<p>若網路直接連線過慢, 可以透過 proxy 執行 git</p>
<p>git config --global http.proxy http://proxy.kmol.info:3128</p>
<p>以上的 git config 會將設定存入 Y:/home/.gitconfig 檔案中</p>
<p>刪除近端與遠端的 Git 分支.</p>
<p>To delete a local branch</p>
<p>git branch -D the_local_branch</p>
<p>To remove a remote branch</p>
<p>git push origin :the_remote_branch</p>
<p>or</p>
<p>git push origin --delete the_remote_branch</p>
<h2>Leo Editor</h2>
<p><a href="http://www.leoeditor.com/">http://www.leoeditor.com/</a> </p>
<h2>SCiTE</h2>
<p><a href="https://www.scintilla.org/SciTE.html">https://www.scintilla.org/SciTE.html</a> </p>
<p>利用 SciTE 執行 Pelican 網誌 Markdown 轉為 html:</p>
<p>SciTEUser.properties 設定</p>
<p>以下的設定, 是將近端與遠端<span> </span><a href="https://github.com/getpelican/pelican">Pelican</a><span> </span>轉檔指令, 設為 Pelican-blog 與 Github-blog 下拉式功能表, 位於 Tools-Go 下方, 唯一的限制是, 當執行這兩個指令時,<span> </span><a href="http://www.scintilla.org/SciTE.html">SciTE</a><span> </span>必須處於開啟 content 目錄之外的 local_publishconf.py 檔案, 因為<span> </span><a href="http://www.scintilla.org/SciTE.html">SciTE</a><span> </span>會以開啟檔案所在目錄, 執行所設定的<span> </span><a href="https://github.com/getpelican/pelican">Pelican</a><span> </span>指令.</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">import Properties\python
import _platform
import _config
 
#~ #  1142  Pelican-blog
command.name.42.*=Pelican-blog
command.42.*="pelican content -o blog -s local_publishconf.py"
#command.subsystem.42.*=2
#command.quiet.42.*=1
command.shortcut.42.*=Ctrl+Shift+P
 
#~ #  1143 Github-blog
command.name.43.*=Github-blog
command.43.*="pelican content -o blog -s publishconf.py"
#command.subsystem.42.*=2
#command.quiet.42.*=1
command.shortcut.43.*=Ctrl+Shift+G</pre>
<div></div>
<div>啟動 IPv4 或 IPv6 www 伺服器
<p>當<span> </span><a href="https://github.com/getpelican/pelican">Pelican</a><span> </span>轉檔指令執行結束後,<span> </span><a href="http://www.scintilla.org/SciTE.html">SciTE</a><span> </span>會在輸出區列出執行結束訊息, 若轉檔過程發生錯誤, 也會一併顯示. 之後為了檢視轉換完成的近端簡報或網誌檔案, 必須將原先位於<span> </span><a href="http://leoeditor.com/">Leo Editor</a><span> </span>button 區的按鈕 Python3 程式移出, 分別存為 .py 檔案.</p>
<p>由於原先的<span> </span><a href="http://leoeditor.com/">Leo Editor</a><span> </span>button 位於 users 目錄中執行, 因此轉出的 .py 檔案也存入 users 目錄中, 程式內容如下:</p>
<p>users/ipv4_www_server.py 程式檔</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#ipv4_www_server.py 存入 users 目錄
import os
import subprocess
import threading
import http.server, ssl
 
def domake():
    # build directory
    os.chdir("./../")
    server_address = ('localhost', 5443)
    httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print(os.getcwd())
    print("5443 https server started")
    httpd.serve_forever()
 
# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</pre>
<p><span>users/ipv6_www_server.py 程式檔</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#ipv6_www_server.py 存入 users 目錄
import os
import subprocess
import threading
import socket
import http.server, ssl
 
class HTTPServerV6(http.server.HTTPServer):
    address_family = socket.AF_INET6
 
def domake():
    # build directory
    os.chdir("./../")
    ipv6_address = '::1'
    server_address = (ipv6_address, 6443)
    #httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd = HTTPServerV6(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("6443 https server started")
    httpd.serve_forever()
 
# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</pre>
<p></p>
</div>
<h2>TinyCC</h2>
<p><a href="https://bellard.org/tcc/">https://bellard.org/tcc/</a> </p>
<h2>CMSimfly</h2>
<p><a href="https://github.com/chiamingyen/cmsimfly">https://github.com/chiamingyen/cmsimfly</a></p>
<h1>實習操作</h1>
<p><a href="/downloads/RobotKinematics.pdf">機械手臂運動學</a> (Robot manipulator kinematics)</p>
<p><a href="/downloads/RobotKinematicsII.pdf">RobotKinematicsII.pdf</a></p>
<p><a href="/downloads/Kinematics of Machines.pdf">Machines and Mechanism.pdf</a></p>
<p><a href="https://sajidnisar.github.io/posts/python_kinematics_dh">https://sajidnisar.github.io/posts/python_kinematics_dh</a> </p>
<p>何謂正向運動學 (Forward kinematics)?</p>
<p><span>何謂</span>逆向運動學 (Inverse kinematics)?</p>
<h4>Onshape Document Links</h4>
<p><span>Here is a list of Onshape document links that we reference in our curriculum (<strong>LP</strong> for “Lesson Plan”, <strong>HW</strong> for “Homework”). It might be beneficial for the students to see the final model in case they get stuck during the exercises.</span></p>
<p><a href="/downloads/basics_of_mechanical_engineering.pdf">basics_of_mechanical_engineering.pdf</a></p>
<p><a href="/downloads/Managing your Onshape Account.pdf">Managing your Onshape Account.pdf</a></p>
<p><a href="/downloads/How to Use the College Curriculum.pdf">How to Use the College Curriculum.pdf</a></p>
<p><a href="/downloads/College Curriculum Outline.pdf">College Curriculum Outline.pdf</a></p>
<p><a href="/downloads/Public Document Links.pdf">Public Document Links.pdf</a></p>
<h2>OnshapeWeek 1</h2>
<p><a href="/downloads/1-1-Lesson Plan.pdf">1-1-Lesson Plan.pdf</a></p>
<p><a href="/downloads/1-2-Homework.pdf">1-2-Homework.pdf</a></p>
<p><a href="/downloads/1-3-Assessment.pdf">1-3-Assessment.pdf</a></p>
<p><a href="/downloads/1-3-Assessment (Answers).pdf">1-3-Assessment (Answers).pdf</a></p>
<p><strong><span>LP: </span></strong><span>College - Casting Fixture Demo</span></p>
<p><span><a href="https://cad.onshape.com/documents/57092e16e4b0b7d723cf1127/w/436e8c84e0076428ce162d7f/e/3fc169118c16ca90beee0f70">https://cad.onshape.com/documents/57092e16e4b0b7d723cf1127/w/436e8c84e0076428ce162d7f/e/3fc169118c16ca90beee0f70</a> </span></p>
<p><strong><span>LP: </span></strong><span>College - Sketch-Based Modeling </span></p>
<p><span><a href="https://cad.onshape.com/documents/e499c16fe529b1b8a3859bfa/w/0b66b0a7d92360b486939300/e/fb726ff7d818375ee7e0de76">https://cad.onshape.com/documents/e499c16fe529b1b8a3859bfa/w/0b66b0a7d92360b486939300/e/fb726ff7d818375ee7e0de76</a> </span></p>
<p><strong><span>LP: </span></strong><span>College - Week 1</span></p>
<p><span><a href="https://cad.onshape.com/documents/9bafe70c19d844329890ef98/w/97ea5e00fc97edcff17adc05/e/35f8dd8999d69d2c35f05146">https://cad.onshape.com/documents/9bafe70c19d844329890ef98/w/97ea5e00fc97edcff17adc05/e/35f8dd8999d69d2c35f05146</a></span></p>
<p><strong><span>HW:</span></strong><span> College - Pre-made Sketches</span></p>
<p><span><a href="https://cad.onshape.com/documents/06aebdf92d8bcb7e898a67ff/w/8e655f093932843575ed2b5d/e/4f9d406193e90df25a5e7588">https://cad.onshape.com/documents/06aebdf92d8bcb7e898a67ff/w/8e655f093932843575ed2b5d/e/4f9d406193e90df25a5e7588</a> </span></p>
<p><strong><span>HW: </span></strong><span>College - Week 1 Homework</span></p>
<p><span><a href="https://cad.onshape.com/documents/c28554e4f648233ed223b53d/w/1df334f6179810c3d0af44a0/e/0ad0d33e9882deb1c2dcd530">https://cad.onshape.com/documents/c28554e4f648233ed223b53d/w/1df334f6179810c3d0af44a0/e/0ad0d33e9882deb1c2dcd530</a> </span></p>
<hr/>
<h4><span> 學習要點</span></h4>
<ol>
<li><span>建立 Onshape 帳號 - 請利用學校 gmail 建立教育版帳號</span></li>
<li><span>3D 環境導航 (navigate)</span></li>
<li><span>說明基於草圖 (sketch-based)的建模</span></li>
<li><span>介紹 4 個基本特徵 (features)（擠出(extrude)，旋轉(revolve)，掃描(sweep)，和斷面混成(loaf)）</span></li>
<li><span>從 2D 過渡到 3D</span></li>
<li><span>介紹基本草圖</span></li>
<li><span>附錄A：鍵盤快捷鍵 (keyboard shotcuts)，滑鼠和觸控平面手勢 (touchpad gestures)，檢視工具</span></li>
<li><span>附錄B：導航說明檔，建立帳號，訂閱計劃 (subscription plans)</span></li>
<li><span>圓柱薄殼 (cylinder shell) - 繪圖界面與可視化/檢視的介紹</span></li>
<li><span>針對既有草圖的模型 - 接續建立特徵</span></li>
<li><span>現存公用模型 (public models) - 如何搜尋並復製到工作區 (workspace)</span></li>
</ol><h3>Onshape1-1</h3>
<h4>英文單字查詢</h4>
<p>若碰到英文單字, 請查詢 <a href="https://www.merriam-webster.com">https://www.merriam-webster.com</a> , 例如:</p>
<p><a href="https://www.merriam-webster.com/dictionary/navigate">https://www.merriam-webster.com/dictionary/navigate</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/intransitive">https://www.merriam-webster.com/dictionary/intransitive</a> verb</p>
<p><a href="https://www.merriam-webster.com/dictionary/sketch">https://www.merriam-webster.com/dictionary/sketch</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/transition">https://www.merriam-webster.com/dictionary/transition</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/appendix">https://www.merriam-webster.com/dictionary/appendix</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/supplementary">https://www.merriam-webster.com/dictionary/supplementary</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/subscription">https://www.merriam-webster.com/dictionary/subscription</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/cylinder">https://www.merriam-webster.com/dictionary/cylinder</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/appurtenant">https://www.merriam-webster.com/dictionary/appurtenant</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/visualization">https://www.merriam-webster.com/dictionary/visualization</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/feature">https://www.merriam-webster.com/dictionary/feature</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/prominent">https://www.merriam-webster.com/dictionary/prominent</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/characteristic">https://www.merriam-webster.com/dictionary/characteristic</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/protuberant">https://www.merriam-webster.com/dictionary/protuberant</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/conspicuous">https://www.merriam-webster.com/dictionary/conspicuous</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/curriculum">https://www.merriam-webster.com/dictionary/curriculum</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/platform">https://www.merriam-webster.com/dictionary/platform</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/declaration">https://www.merriam-webster.com/dictionary/declaration</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/logarithm">https://www.merriam-webster.com/dictionary/logarithm</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/integer">https://www.merriam-webster.com/dictionary/integer</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/entity">https://www.merriam-webster.com/dictionary/entity</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/contrast">https://www.merriam-webster.com/dictionary/contrast</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/attribute">https://www.merriam-webster.com/dictionary/attribute</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/scrape">https://www.merriam-webster.com/dictionary/scrape</a> </p>
<p>只要逐一閱讀 Onshape 教學文件,  從各單字的英英字典查詢中, 找出用來解釋這些單字的相關單字, 並用心了解各單字的字意與用法, 假以時日, 就能更順暢直接閱讀各種英文資料.</p>
<h4>開始學習 Onshape</h4>
<p>Onshape 是一套純雲端 MCAD (Mechanical Computer Aided Design) 套件, 可以利用電腦中的瀏覽器, 手機或平板中的 App, 就可以執行 2D/3D 零組件設計繪圖.</p>
<p>有關 Onshape 如何建立零組件, 請參考:</p>
<p><a href="https://www.onshape.com/cad-blog/under-the-hood-how-does-onshape-really-work">https://www.onshape.com/cad-blog/under-the-hood-how-does-onshape-really-work</a> </p>
<h4>Onshape 是一套雲端應用程式</h4>
<p>雲端應用的特性是: 用多少運算資源, 才開啟多少運算資源, 可最佳化且不至超載.</p>
<p>Onshape is like any other large-scale modern cloud application – a collection of servers and services. They can run on machines optimized for their purposes; and the number of instances can be optimized so that they are always busy, but not overloaded, to make efficient use of resources.</p>
<h4>認證伺服器</h4>
<p>Some servers that handle things (such as user authentication and authorization, and finding and listing documents) process lots of requests, but do not do much “real work” themselves. They forward complex requests to other servers. Others know what is “inside” a document, and keep modeling sessions in memory, resulting in long-lasting sessions for modeling with documents.</p>
<h4>幾何運算伺服器</h4>
<p>Onshape 的幾何模擬核心採用 Parasolid</p>
<p>Onshape 採用 D-Cubed 解繪圖過程中的幾何約束條件</p>
<p>Others, the admittedly unimaginatively named “geometry servers,” do all the math – these are optimized for computation power. These servers are the ones that reconstruct geometry from feature lists and FeatureScript, solve for instance positions in assemblies, and compute graphical tessellations. They make use of the venerable geometric modeling kernel Parasolid and constraint solver D-Cubed – both well-tested by many years of use in many CAD systems – which we license from Siemens PLM.</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="https://en.wikipedia.org/wiki/Geometric_constraint_solving">https://en.wikipedia.org/wiki/Geometric_constraint_solving</a> </p>
<p style="padding-left: 30px;"><a href="/downloads/A Geometric Constraint Solver.pdf">A geometric constraint solver.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Geometric Constraint Solving in Parametric CAD.pdf">Geometric Constraint Solving in Parametric CAD.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/1996_Solving  Geometric Constraints by Homotopy.pdf">1996_Solving  Geometric Constraints by Homotopy.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Geometric_constraint_solver_These-Moussaoui_Nov_2016.pdf">Geometric_constraint_solver_These-Moussaoui_Nov_2016.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Decomposition of Geometric Constraint Systems - a Survey.pdf">Decomposition of Geometric Constraint Systems - a Survey.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://www.pyslvs.com/content/">https://www.pyslvs.com/content/</a> </p>
<p style="padding-left: 30px;"><a href="http://www.pyslvs.com/downloads/Implementation%20of%20an%20Open%20Source%20Planar%20Linkage%20Mechanism%20Simulation%20and%20Dimensional%20Synthesis%20System.pdf">Implementation of an Open Source Planar Linkage Mechanism Simulation and Dimensional Synthesis System.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/pyslvs_demo/blob/master/triangle/triangle_foubar._point_track.py">https://github.com/mdecourse/pyslvs_demo/blob/master/triangle/triangle_foubar._point_track.py</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/pyslvs_demo/blob/master/sgcs/sgcs_2_1.py">https://github.com/mdecourse/pyslvs_demo/blob/master/sgcs/sgcs_2_1.py</a> </p>
<p style="padding-left: 30px;"><a href="https://computergraphics.stackexchange.com/questions/3651/solving-a-set-of-geometry-constraints-whats-that-method-called">https://computergraphics.stackexchange.com/questions/3651/solving-a-set-of-geometry-constraints-whats-that-method-called</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/chiamingyen/PythonCAD_py3">https://github.com/chiamingyen/PythonCAD_py3</a> </p>
<p style="padding-left: 30px;"><a href="http://geosolver.sourceforge.net/">http://geosolver.sourceforge.net/</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/cmerrill/sketchsolve">https://github.com/cmerrill/sketchsolve</a> </p>
<p style="padding-left: 30px;"><a href="https://bitbucket.org/geoplexity/frontier">https://bitbucket.org/geoplexity/frontier</a> </p>
<p style="padding-left: 30px;"><a href="https://en.wikipedia.org/wiki/Parasolid">https://en.wikipedia.org/wiki/Parasolid</a></p>
<p style="padding-left: 30px;"><a href="https://www.plm.automation.siemens.com/global/en/products/plm-components/parasolid.html">https://www.plm.automation.siemens.com/global/en/products/plm-components/parasolid.html</a> </p>
<p style="padding-left: 30px;"><a href="/downloads/PlantGL - A Python-based geometric library for 3D plant modelling at different scales.pdf">PlantGL - A Python-based geometric library for 3D plant modelling at different scales.pdf</a></p>
<p>MCAD 分類</p>
<p style="padding-left: 30px;"><a href="http://www.tecnetinc.com/Worst%20to%20Best%20CAD%20Systems!%20-1.html">1987-2017</a></p>
<p style="padding-left: 30px;">mid-range MCAD: <a href="https://www.autodesk.com/products/inventor">AutoDesk Inventor</a>, <a href="https://www.solidworks.com/">Solidworks</a>, <a href="https://solidedge.siemens.com/en/">Solid Edge</a>, <a href="http://www.ironcad.com/">IronCAD</a>, <a href="https://www.zwsoft.com/">ZWCAD</a></p>
<p style="padding-left: 30px;">high-end MCAD: <a href="https://www.plm.automation.siemens.com/global/en/products/nx/">NX</a>, <a href="https://www.ptc.com/en/products/cad/creo/">Creo</a>, <a href="https://www.3ds.com/products-services/catia/">Catia</a></p>
<p style="padding-left: 30px;">cloud MCAD: <a href="https://www.onshape.com">Onshape</a>, <a href="https://www.autodesk.com/products/fusion-360">Fusion 360</a> (Hybrid)</p>
<p>Machine Learning</p>
<p style="padding-left: 30px;"><a href="/downloads/Scikit-learn - Machine Learning in Python.pdf">Scikit-learn - Machine Learning in Python.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/scikit-learn/scikit-learn">https://github.com/scikit-learn/scikit-learn</a> </p>
<p style="padding-left: 30px;"><a href="http://scikit-learn.org">http://scikit-learn.org</a> </p>
<h2>OnshapeWeek 2</h2>
<p><a href="/downloads/2-1-Lesson Plan.pdf">2-1-Lesson Plan.pdf</a></p>
<p><a href="/downloads/2-2-Homework.pdf">2-2-Homework.pdf</a></p>
<p><a href="/downloads/2-3-Assessment.pdf">2-3-Assessment.pdf</a></p>
<p><a href="/downloads/2-3-Assessment (Answers).pdf">2-3-Assessment (Answers).pdf</a></p>
<p><strong><span>LP: </span></strong><span>College - Clock</span></p>
<p><span><a href="https://cad.onshape.com/documents/57a4a3a2e4b0a16f2a0c90bd/w/ece3b9b944dc0d1aea87f726/e/9e2433ad093f8152215de0e5">https://cad.onshape.com/documents/57a4a3a2e4b0a16f2a0c90bd/w/ece3b9b944dc0d1aea87f726/e/9e2433ad093f8152215de0e5</a> </span></p>
<p><strong><span>LP and HW: </span></strong><span>College - Week 2</span></p>
<p><span><a href="https://cad.onshape.com/documents/570c509de4b0b585da448d8c/w/a187923b0b25e8418f1d75b9/e/fb779d9a569edde8b30114ee">https://cad.onshape.com/documents/570c509de4b0b585da448d8c/w/a187923b0b25e8418f1d75b9/e/fb779d9a569edde8b30114ee</a></span></p>
<hr/>
<h4><span>學習要點</span></h4>
<ol>
<li><span>簡介"設計意圖" (design intent)</span></li>
<li><span>設定尺寸 (dimensions) 與約束 (constraints)</span></li>
<li><span>自動推理 (automatic inferencing)</span></li>
<li><span>繪製精確的零件 (accurate part)</span></li>
<li><span>草圖繪製練習</span></li>
<li><span>運用與建立平面 (planes)</span></li>
<li><span>建立圓角 (fillets) 與倒角 (chamfers)</span></li>
<li><span>使用多個 (multiple) 草圖區域 (sketch regions)</span></li>
<li><span>基本零件</span></li>
<li><span>繪製時鐘模型 - 用於設計意圖教學</span></li>
<li><span>各種簡單的幾何形狀 (geometric shapes) </span></li>
</ol>
<p>Design Intent is the practice of developing your project’s objectives and requirements even before working on your design.</p>
<p>設計意圖指在設計進行前, 必須完成之專案目的與需求確認</p>
<p>The more complex the geometry, the more we need to think about how we want to design the parts before just going ahead and making it.</p>
<p>幾何外型越複雜, 越需要在零件設計之前做好設計意圖的確認</p>
<h4><span>英文單字</span></h4>
<p><a href="https://www.merriam-webster.com/dictionary/entity">https://www.merriam-webster.com/dictionary/entity</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/precise">https://www.merriam-webster.com/dictionary/precise</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/dip">https://www.merriam-webster.com/dictionary/dip</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/primarily">https://www.merriam-webster.com/dictionary/primarily</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/intent">https://www.merriam-webster.com/dictionary/intent</a> </p>
<p> <a href="https://www.merriam-webster.com/dictionary/enclose">https://www.merriam-webster.com/dictionary/enclose</a> </p>
<p><a href="https://www.merriam-webster.com/dictionary/purposeful">https://www.merriam-webster.com/dictionary/purposeful</a> </p><h2>OnshapeWeek 3</h2>
<p><a href="/downloads/3-1-Lesson Plan.pdf">3-1-Lesson Plan.pdf</a></p>
<p><a href="/downloads/3-2-Homework.pdf">3-2-Homework.pdf</a></p>
<p><a href="/downloads/3-3-Assessment.pdf">3-3-Assessment.pdf</a></p>
<p><a href="/downloads/3-3-Assessment (Answers).pdf">3-3-Assessment (Answers).pdf</a></p>
<p><strong><span>LP: </span></strong><span>College - Boolean Operations</span></p>
<p><span><a href="https://cad.onshape.com/documents/5787b5d9e4b050a40b9da3f2/w/95a28f9e1a1782c93ffcf4ac/e/99eeec404fea49295eba8539">https://cad.onshape.com/documents/5787b5d9e4b050a40b9da3f2/w/95a28f9e1a1782c93ffcf4ac/e/99eeec404fea49295eba8539</a></span></p>
<p><strong><span>LP</span></strong><span>: College - Boolean Intersect</span></p>
<p><span><a href="https://cad.onshape.com/documents/fdaafc5a94e4406f29799a5b/w/cc6c7f69c96de92051c8a6a1/e/3af775362a71e1faa6bc4445">https://cad.onshape.com/documents/fdaafc5a94e4406f29799a5b/w/cc6c7f69c96de92051c8a6a1/e/3af775362a71e1faa6bc4445</a> </span></p>
<p><strong><span>LP: </span></strong><span>College - Linear Part Pattern </span></p>
<p><span><a href="https://cad.onshape.com/documents/57a4b2b7e4b04351c9601824/w/c006b121241bbbc9f2f9f6cb/e/0e59d4bd96c87cae6124a92a">https://cad.onshape.com/documents/57a4b2b7e4b04351c9601824/w/c006b121241bbbc9f2f9f6cb/e/0e59d4bd96c87cae6124a92a</a> </span></p>
<p><strong><span>LP: </span></strong><span>College - Circular Part Pattern</span></p>
<p><span><a href="https://cad.onshape.com/documents/57a4b2d4e4b04351c9601864/w/ff908d7bbce7afeed1ac9871/e/1fc57a418efdd5ca0b4600c5">https://cad.onshape.com/documents/57a4b2d4e4b04351c9601864/w/ff908d7bbce7afeed1ac9871/e/1fc57a418efdd5ca0b4600c5</a></span></p>
<p><strong><span>LP: </span></strong><span>College - Week 3 (“Cantilever Clamp” Part Studio)</span></p>
<p><span><a href="https://cad.onshape.com/documents/56f5c963e4b00c5ed10c717f/w/131859f16f9a995fc9895acc/e/c343c081da32fcb3bb7f0e2e">https://cad.onshape.com/documents/56f5c963e4b00c5ed10c717f/w/131859f16f9a995fc9895acc/e/c343c081da32fcb3bb7f0e2e</a> </span></p>
<p><strong><span>HW: </span></strong><span>College - Week 3 Homework</span></p>
<p><span><a href="https://cad.onshape.com/documents/7b5553135cdf6caafa9a6946/w/549bd8008ce6e8a13dc6b6cf/e/27159315ac3670adb78c8eec">https://cad.onshape.com/documents/7b5553135cdf6caafa9a6946/w/549bd8008ce6e8a13dc6b6cf/e/27159315ac3670adb78c8eec</a> </span></p>
<p><span> </span></p>
<p><span> </span></p>
<h2>OnshapeWeek 4</h2>
<p><a href="/downloads/4-1-Lesson Plan.pdf">4-1-Lesson Plan.pdf</a></p>
<p><a href="/downloads/4-2-Homework.pdf">4-2-Homework.pdf</a></p>
<p><a href="/downloads/4-3-Assessment.pdf">4-3-Assessment.pdf</a></p>
<p><a href="/downloads/4-3-Assessment (Answers).pdf">4-3-Assessment (Answers).pdf</a></p>
<p><strong><span>LP: </span></strong><span>College - Week 3 (“Cantilever Clamp” Assembly)</span></p>
<p><span><a href="https://cad.onshape.com/documents/56f5c963e4b00c5ed10c717f/w/131859f16f9a995fc9895acc/e/c343c081da32fcb3bb7f0e2e">https://cad.onshape.com/documents/56f5c963e4b00c5ed10c717f/w/131859f16f9a995fc9895acc/e/c343c081da32fcb3bb7f0e2e</a> </span></p>
<p><strong><span>LP: </span></strong><span>College - Assembled Vise</span></p>
<p><span><a href="https://cad.onshape.com/documents/56f66af8e4b00c5ed10c8de5/w/4b4754abd47ac94d28ed28a1/e/a94e71506e52d57b06a002ce">https://cad.onshape.com/documents/56f66af8e4b00c5ed10c8de5/w/4b4754abd47ac94d28ed28a1/e/a94e71506e52d57b06a002ce</a> </span></p>
<p><strong><span>HW: </span></strong><span>College - Week 4</span></p>
<p><span><a href="https://cad.onshape.com/documents/3dfea8a48b63966179b186fb/w/862e37d0732da731dfd01eff/e/317d93354922ee3e4db59e79">https://cad.onshape.com/documents/3dfea8a48b63966179b186fb/w/862e37d0732da731dfd01eff/e/317d93354922ee3e4db59e79</a> </span></p>
<p><span> </span></p>
<p><span> </span></p>
<h2>OnshapeWeek 5</h2>
<p><a href="/downloads/5-1-Lesson Plan.pdf">5-1-Lesson Plan.pdf</a></p>
<p><a href="/downloads/College - Week 5 - Part 1 Dwg.pdf">College - Week 5 - Part 1 Dwg.pdf</a></p>
<p><a href="/downloads/College - Week 5 - Part 2 Dwg.pdf">College - Week 5 - Part 2 Dwg.pdf</a></p>
<p><a href="/downloads/College - Week 5 - Part 3 Dwg.pdf">College - Week 5 - Part 3 Dwg.pdf</a></p>
<p><a href="/downloads/College - Week 5 - Part 4 Dwg.pdf">College - Week 5 - Part 4 Dwg.pdf</a></p>
<p><a href="/downloads/College - Week 5 - Part 5 Drawing - Week 2.pdf">College - Week 5 - Part 5 Drawing - Week 2.pdf</a></p>
<p><a href="/downloads/5-2-Homework.pdf">5-2-Homework.pdf</a></p>
<p><a href="/downloads/Week 5 Homework Q1.pdf">Week 5 Homework Q1.pdf</a></p>
<p><a href="/downloads/Week 5 Homework Q2 - End Hinge Dwg.pdf">Week 5 Homework Q2 - End Hinge Dwg.pdf</a></p>
<p><a href="/downloads/Week 5 Homework Q2 - Long Arm Dwg.pdf">Week 5 Homework Q2 - Long Arm Dwg.pdf</a></p>
<p><a href="/downloads/Week 5 Homework Q2 - Short Arm Dwg.pdf">Week 5 Homework Q2 - Short Arm Dwg.pdf</a></p>
<p><a href="/downloads/Week 5 Homework Q2 - Threaded Hinge Dwg.pdf">Week 5 Homework Q2 - Threaded Hinge Dwg.pdf</a></p>
<p><a href="/downloads/Week 5 Homework Q3.pdf">Week 5 Homework Q3.pdf</a></p>
<p><a href="/downloads/5-3-Assessment .pdf">5-3-Assessment .pdf</a></p>
<p><a href="/downloads/5-3-Assessment (Answers).pdf">5-3-Assessment (Answers).pdf</a></p>
<p><strong><span>LP: </span></strong><span>College - Week 5</span></p>
<p><span><a href="https://cad.onshape.com/documents/020fe0bde2dec1bf6f852379/w/63c455d4d5a1376cbf8d6a5f/e/27ef743a8c6e7ea214132c0b">https://cad.onshape.com/documents/020fe0bde2dec1bf6f852379/w/63c455d4d5a1376cbf8d6a5f/e/27ef743a8c6e7ea214132c0b</a> </span></p>
<p><strong><span>HW: </span></strong><span>College - Week 5 Homework</span></p>
<p><span><a href="https://cad.onshape.com/documents/460bf1fa05de52578c3d3ddd/w/3c7ab94e26d9cfbf9c707615/e/25b07b0a1aff8e9b9cadcd59">https://cad.onshape.com/documents/460bf1fa05de52578c3d3ddd/w/3c7ab94e26d9cfbf9c707615/e/25b07b0a1aff8e9b9cadcd59</a> </span></p>
<p><span> </span></p>
<p><span> </span></p>
<h2>OnshapeWeeks 6-8</h2>
<p><a href="/downloads/6-0-Special Instructions for Week 6.pdf">6-0-Special Instructions for Week 6.pdf</a></p>
<p><a href="/downloads/6-1-Lesson Plan (Student A).pdf">6-1-Lesson Plan (Student A).pdf</a></p>
<p><a href="/downloads/6-1-Lesson Plan (Student B).pdf">6-1-Lesson Plan (Student B).pdf</a></p>
<p><a href="/downloads/Speaker_small.STEP">Speaker_small.STEP</a></p>
<p><a href="/downloads/Speaker_large.STEP">Speaker_large.STEP</a></p>
<p><a href="/downloads/6-2-Homework.pdf">6-2-Homework.pdf</a></p>
<p><a href="/downloads/6-3-Assessment.pdf">6-3-Assessment.pdf</a></p>
<p><a href="/downloads/6-3-Assessment (Answers).pdf">6-3-Assessment (Answers).pdf</a></p>
<hr/>
<p><a href="/downloads/7-1-Lesson Plan.pdf">7-1-Lesson Plan.pdf</a></p>
<p><a href="/downloads/7-2-Homework.pdf">7-2-Homework.pdf</a></p>
<p><a href="/downloads/7-3-Assessment.pdf">7-3-Assessment.pdf</a></p>
<p><a href="/downloads/7-3-Assessment (Answers).pdf">7-3-Assessment (Answers).pdf</a></p>
<hr/>
<p><a href="/downloads/8-1-Lesson Plan.pdf">8-1-Lesson Plan.pdf</a></p>
<p><a href="/downloads/8-2-Homework.pdf">8-2-Homework.pdf</a></p>
<p><a href="/downloads/8-3-Assessment.pdf">8-3-Assessment.pdf</a></p>
<p><a href="/downloads/8-3-Assessment (Answers).pdf">8-3-Assessment (Answers).pdf</a></p>
<p><span>College - Bluetooth Speaker</span></p>
<p><span><a href="https://cad.onshape.com/documents/a698f9126f4e875c16ad8968/w/9724465b8fc7953cf33bdf04/e/d26e14ad0455fde3d4f013ed">https://cad.onshape.com/documents/a698f9126f4e875c16ad8968/w/9724465b8fc7953cf33bdf04/e/d26e14ad0455fde3d4f013ed</a> </span></p>
<p><strong><span>HW: </span></strong><span>College - Week 6 Homework</span></p>
<p><span><a href="https://cad.onshape.com/documents/1fbde283058f127d8798a39c/w/5d28e2ad003fcd5abe6716e8/e/720532d29c32a2f194d413a0">https://cad.onshape.com/documents/1fbde283058f127d8798a39c/w/5d28e2ad003fcd5abe6716e8/e/720532d29c32a2f194d413a0</a></span></p>
<p><span> </span></p>
<p><span> </span></p>
<h2>OnshapeWeeks 9-12</h2>
<p><a href="/downloads/9-1-Lesson Plan.pdf">9-1-Lesson Plan.pdf</a></p>
<p><a href="/downloads/9-2-Homework.pdf">9-2-Homework.pdf</a></p>
<p><a href="/downloads/9-3-Assessment.pdf">9-3-Assessment.pdf</a></p>
<p><a href="/downloads/9-3-Assessment (Answers).pdf">9-3-Assessment (Answers).pdf</a></p>
<hr/>
<p><a href="/downloads/10-1-Lesson Plan.pdf">10-1-Lesson Plan.pdf</a></p>
<p><a href="/downloads/Electric Motor.zip">Electric Motor.zip</a> (SolidWorks files)</p>
<p><a href="/downloads/10-2-Homework.pdf">10-2-Homework.pdf</a></p>
<p><a href="/downloads/10-3-Assessment.pdf">10-3-Assessment.pdf</a></p>
<p><a href="/downloads/10-3-Assessment (Answers).pdf">10-3-Assessment (Answers).pdf</a></p>
<hr/>
<p><a href="/downloads/11-1-Lesson Plan.pdf">11-1-Lesson Plan.pdf</a></p>
<p><img alt="" height="100" src="/images/Onshape.png" width="100"/></p>
<p><a href="/downloads/11-2-Homework.pdf">11-2-Homework.pdf</a></p>
<p><a href="/downloads/11-3-Assessment.pdf">11-3-Assessment.pdf</a></p>
<p><a href="/downloads/11-3-Assessment (Answers).pdf">11-3-Assessment (Answers).pdf</a></p>
<hr/>
<p><a href="/downloads/12-1-Lesson Plan.pdf">12-1-Lesson Plan.pdf</a></p>
<p><a href="/downloads/12-2-Homework.pdf">12-2-Homework.pdf</a></p>
<p><a href="/downloads/12-3-Assessment.pdf">12-3-Assessment.pdf</a></p>
<p><a href="/downloads/12-3-Assessment (Answers).pdf">12-3-Assessment (Answers).pdf</a></p>
<p><a href="/downloads/Mini_Chopper_PO_example.pdf">Mini_Chopper_PO_example.pdf</a></p>
<p><a href="/downloads/Course Wrap-Up.pdf">Course Wrap-Up.pdf</a></p>
<p><span>College - Mini Chopper</span></p>
<p><span><a href="https://cad.onshape.com/documents/160e67bd4f8c8c97d9543ac0/w/5367d8cc3fe60c57c5e28b91/e/857782f106546f7b44433273">https://cad.onshape.com/documents/160e67bd4f8c8c97d9543ac0/w/5367d8cc3fe60c57c5e28b91/e/857782f106546f7b44433273</a> </span></p>
<p><strong><span>HW: </span></strong><span>College - Week 10 Homework</span></p>
<p><span><a href="https://cad.onshape.com/documents/808c7aed719a892f8ff3d8f9/w/11e0a51e4c6e3148d5d89c45/e/fe3b9019fc9e051990830726">https://cad.onshape.com/documents/808c7aed719a892f8ff3d8f9/w/11e0a51e4c6e3148d5d89c45/e/fe3b9019fc9e051990830726</a> </span></p>
<p><strong><span>HW: </span></strong><span>College - Week 11 Homework</span></p>
<p><span><a href="https://cad.onshape.com/documents/3fa393fac2ba5807ebae1d61/w/ecfbcd14db253e714128a69f/e/3f352a87833fd9e59496e700">https://cad.onshape.com/documents/3fa393fac2ba5807ebae1d61/w/ecfbcd14db253e714128a69f/e/3f352a87833fd9e59496e700</a> </span></p>
<p></p>
<p><a href="/downloads/RobotKinematics.pdf"></a></p>
<h1>應用範例</h1>
<p>學習電腦輔助設計實習的目的在利用數位科技技術解決問題, 所謂數位科技技術包括程式套件、網路與資料庫等元件的組合.</p>
<p>基本流程為:</p>
<ol>
<li>如何取得、傳輸並處理資料?</li>
<li>如何儲存資料?</li>
<li>如何呈現資料?</li>
</ol>
<p>處理資料的過程依賴數學模型、演算法與資料結構</p>
<p>取得與傳輸資料則依賴網路</p>
<p>至於資料的呈現則涵蓋 2D/3D 動態與靜態格式處理</p>
<ol>
<li>Tinkercad Circuit - Arduino 控制卡與電子致動與感測元件線路的模擬</li>
<li>網頁資料解讀與任務派送 - 計算機程式對特定格式資料的分析後, 依照循環與亂數流程進行分配</li>
<li>V-rep - 利用各種程式介面與延伸程式的設計, 讓使用者設計、控制並模擬各種機器人模型</li>
<li>輔助設計套件 - 利用計算機圖學與視窗介面, 讓使用者完成設想中的機械零組件設計, 並進行功能模擬</li>
</ol>
<h2>Tinkercad</h2>
<p>註冊 AutoDesk TinkerCAD 帳號</p>
<p>為了在實體 Arduino Uno 控制板連線操作之前, 可以利用網際 Auduino 控制板與電子元件系統進行模擬, 請各學員至<span> </span><a href="https://www.tinkercad.com/">https://www.tinkercad.com</a><span> </span>登記帳號, 登入後選擇左上角的 TinkerCAD 標誌連結後, 選擇 Circuits 進入電路設計與模擬, 操作畫面如下圖所示:</p>
<p><img alt="" height="373" src="/images/circuits_on_tinkercad.png" width="700"/></p>
<p><span>接著選擇 Arudino Uno 控制板與 Servo Motor, 然後接上電源與地線, 並將控制訊號接到 Auduino Uno 控制板的 PWM pin 9, 利用 Code Editor 納入下列 Arduino 程式, 再利用 upload and run 將程式編譯後上傳到虛擬的 Arduino Uno 控制板上執行, 就可以模擬 Servo Motor 持續左右各旋轉 180 度. 操作畫面如下圖所示: </span></p>
<p><span><img alt="" height="373" src="/images/arduino_uno_servo_on_tinkercad.png" width="700"/></span></p>
<p>實體 Arduino Servo Motor Control</p>
<p>完成上述以 TinkerCAD 模擬伺服馬達的接線與程式執行之後, 接著操作實體 Arduino 控制板與 Servo Motor 的控制, 首先利用電腦驅動 Arduino 控制板, 然後再利用板子上的脈衝寬度調變 (PWM, Pulse Width Modulation) 訊號控制伺服馬達, 之後再利用傳動機構與資訊控制介面, 製作所需的機電資整合系統. 電子電機系統除了可以方便感測各種物理化學量外, 還能夠快速傳遞感測與命令訊號, 而機械系統則透過機構元件的組合, 扮演傳遞功率致動或抵抗外力撞擊與疲勞破壞的角色, 至於資訊系統則用來整合各種資訊, 用更友善的人機介面, 讓使用者更有效能地運用機電資系統產品.</p>
<p><a href="https://mde1a1.kmol.info/2017fall/raw/arduino-1.8.5-windows.zip?name=4aee6f20d04156a10d1739e40f54cda7ef1b0e0e">arduino-1.8.4-windows.zip</a><span> </span>下載 (或直至<span> </span><a href="https://www.arduino.cc/en/Main/Software">https://www.arduino.cc/en/Main/Software</a><span> </span>下載)</p>
<p>控制台 - 硬體與音效 - 裝置管理員 利用解開的 arduino driver 程式驅動 Arduino Uno 控制板, 並取得 COM 對應號碼, 例如: COM7, 之後的 Arduino 編譯後可以透過此 COM 埠號將程式上傳到控制板上執行.</p>
<p>MG996R 伺服馬達</p>
<p>棕色線 GND</p>
<p>紅色線 V+5V</p>
<p>橘色線 PWM</p>
<p>控制程式:</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;Servo.h&gt;
Servo myservo;  // 建立一個 servo 物件，最多可建立 12個 servo

int pos = 0;    // 設定 Servo 位置的變數

void setup() {
  myservo.attach(9);  // 將 servo 物件連接到 pin 9
}

void loop() {
  // 正轉 180度
  for (pos = 0; pos &lt;= 180; pos += 1) // 從 0 度旋轉到 180 度，每次 1 度 
  {     
    myservo.write(pos);               // 告訴 servo 走到 'pos' 的位置
    delay(15);                        // 等待 15ms 讓 servo 走到指定位置
  }

// 反轉 180度
  for (pos = 180; pos &gt;= 0; pos -= 1) // 從 180 度旋轉到 0 度，每次 1 度 
  { 
    myservo.write(pos);               // 告訴 servo 走到 'pos' 的位置

delay(15);                        // 等待 15ms 讓 servo 走到指定位置
  }
}</pre>
<p>參考資料:</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4302-3241-4">Beginning Arduino</a></p>
<p><a href="/downloads/iot_arduino.pdf">iot_arduino.pdf</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4302-3778-5">Beginning Arduino Programming</a></p>
<p><a href="http://www.playrobot.com/20kgf-cm/1150-standard-servo-mg996r.html">http://www.playrobot.com/20kgf-cm/1150-standard-servo-mg996r.html</a></p>
<p><a href="http://www.playrobot.com/freedownload/Arduino_Happy%20Learning_DEMO.pdf">http://www.playrobot.com/freedownload/Arduino_Happy%20Learning_DEMO.pdf</a></p>
<p><a href="http://atceiling.blogspot.tw/2017/03/arduino.html">http://atceiling.blogspot.tw/2017/03/arduino.html</a></p>
<p>Python, Arduino and VPython:</p>
<p><a href="http://www.toptechboy.com/arduino-lessons/">http://www.toptechboy.com/arduino-lessons/</a></p>
<p><a href="https://create.arduino.cc/projecthub/chanhj/magnetic-levitation-8c3ad0">Arduino Magnetic Levitation System</a></p>
<p><a href="http://www.instructables.com/id/Magnetic-Levitation/">http://www.instructables.com/id/Magnetic-Levitation/</a><span> </span>(<a href="https://www.amazon.com/Electromagnet-Solenoid-Electric-Mechanical-Experimental/dp/B008OENGU0/">電磁鐵1</a>,<span> </span><a href="http://goods.ruten.com.tw/item/show?21620739232041">電磁鐵2</a>)</p>
<p><a href="http://embeddedlaboratory.blogspot.tw/2017/04/design-gui-in-python-using-pyqt5.html">Arduino and PyQt5</a></p>
<p><a href="http://embeddedlaboratory.blogspot.tw/search/label/Arduino">http://embeddedlaboratory.blogspot.tw/search/label/Arduino</a></p>
<p><a href="http://electronut.in/plotting-real-time-data-from-arduino-using-python/">Arduino and Matplotlib</a></p>
<p>無碳刷直流馬達運作原理:</p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/bCEiOnuODac" width="560"></iframe></p>
<p>步進馬達運作原理:</p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/eyqwLiowZiU" width="560"></iframe></p>
<p>伺服馬達運作原理:</p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/hg3TIFIxWCo" width="560"></iframe></p>
<p>伺服馬達與步進馬達差異:</p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/x48ggHZDFLY" width="560"></iframe></p>
<p>開放迴路與封閉迴路控制步進馬達差異:</p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Y5YPtglO1yE" width="560"></iframe></p>
<h2>解讀網頁內容</h2>
<p>Onshape 教學影片</p>
<p><a href="https://www.onshape.com/video">https://www.onshape.com/video</a><span> </span>為 Onshpae 官方網站所提供的教學影片區, 請各班以每人兩個影片的方式進行分配, 分別以中文說明影片內容操作過程, 並上傳到個人的 Vimeo 與 Youtube 影片區.</p>
<p>預計分配的影片:</p>
<p><a href="https://www.onshape.com/videos/topic/tech-tips">https://www.onshape.com/videos/topic/tech-tips</a></p>
<p><a href="https://www.onshape.com/videos/topic/intro-to-cad">https://www.onshape.com/videos/topic/intro-to-cad</a></p>
<p><a href="https://www.onshape.com/videos/topic/tutorials">https://www.onshape.com/videos/topic/tutorials</a></p>
<p><a href="https://www.onshape.com/videos/topic/essential-training">https://www.onshape.com/videos/topic/essential-training</a></p>
<p><a href="https://www.onshape.com/videos/topic/drawings">https://www.onshape.com/videos/topic/drawings</a></p>
<p>請各組討論:</p>
<p>如何分配影片?如何集合管理各學員所上傳的教學操作影片?</p>
<p>利用 Python3, urllib 與 bs4 解讀上述網頁內容, 取出各影片的連結, 然後放入數列中:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from urllib.request import urlopen
from bs4 import BeautifulSoup

file = urlopen("https://www.onshape.com/videos/topic/intro-to-cad")
#print(file.read().decode())

soup = BeautifulSoup(file, 'html.parser')

links = []
for link in soup.find_all('a', href=True):
    if 'videos' in link['href']:
        if 'https' in link['href']:
            #print(link['href'])
            links.append(link['href'])
result = list(set(links))
for i in range(len(result)):
    print(i+1, result[i])</pre>
<p><span>納入上述所有影片網頁連結, 利用程式取出各影片的連結字串:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 從 urllib 模組中導入 urlopen
from urllib.request import urlopen
# 從 bs4 模組中導入 BeautirulSoup
from bs4 import BeautifulSoup

# 將要取出影片連結的網站 url,  放入數列中, 取名為 sources
sources = ['https://www.onshape.com/videos/topic/tech-tips', 'https://www.onshape.com/videos/topic/intro-to-cad', 'https://www.onshape.com/videos/topic/tutorials', 'https://www.onshape.com/videos/topic/essential-training', 'https://www.onshape.com/videos/topic/drawings']

#tech-tips (60)
#intro-to-cad (26)
#tutorials (14)
#essential-training (6)
#drawings (5)

# 按照網頁中的影片數計算, 共有 111 部影片, 但分類中可能重複
print(60+26+14+6+5)

# 設 links 變數與空數列對應
links = []
# 利用 for 迴圈一一取出各網頁的 html 後, 進行解讀
# 只取出有 videos 與 https 連結的資料, 但避開 all 與 topic 類別連結
for url in sources:
    file = urlopen(url)
    # 因為 urlopen 出來的資料為二位元檔案, 若要讀出列印
    # 必須要先 decode() 為字串
    #print(file.read().decode())
    # 使用 html 解讀各連結的網頁內容
    soup = BeautifulSoup(file, 'html.parser')
    # 利用 Beautifulsoup 物件中的 find_all 方法尋找 anchor
    for link in soup.find_all('a', href=True):
        # 從各 anchor 資料篩選所需的影片連結
        if ('videos' or 'https') in link['href']:
            if 'all' not in link['href']:
                if 'topic' not in link['href']:
                    links.append(link['href'])
                    
# 為避免列出重複資料, 將數列轉為集合後, 再轉回數列
result = list(set(links))
# 逐一列出所取得的影片連結
for i in range(len(result)):
    print(i+1, result[i])</pre>
<p>以上述程式為基礎, 從取得的影片數列, 每位學員由亂數產生的影片順序, 前後各取一個影片作為分配, 結果如下:</p>
<p>甲班 Onshape 影片分配名單:</p>
<ul>
<li>40223109</li>
<li><a href="https://www.onshape.com/videos/first-look-at-onshape">https://www.onshape.com/videos/first-look-at-onshape</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-part-mobile">https://www.onshape.com/videos/lets-make-a-part-mobile</a></li>
<li>40423160</li>
<li><a href="https://www.onshape.com/videos/lets-make-an-assembly">https://www.onshape.com/videos/lets-make-an-assembly</a></li>
<li><a href="https://www.onshape.com/videos/lets-import-a-drawing">https://www.onshape.com/videos/lets-import-a-drawing</a></li>
<li>40423219</li>
<li><a href="https://www.onshape.com/videos/lets-collaborate">https://www.onshape.com/videos/lets-collaborate</a></li>
<li><a href="https://www.onshape.com/videos/split-face">https://www.onshape.com/videos/split-face</a></li>
<li>40423246</li>
<li><a href="https://www.onshape.com/videos/creating-custom-features-06-15-17">https://www.onshape.com/videos/creating-custom-features-06-15-17</a></li>
<li><a href="https://www.onshape.com/videos/getting-started-with-openbom-in-onshape">https://www.onshape.com/videos/getting-started-with-openbom-in-onshape</a></li>
<li>40523101</li>
<li><a href="https://www.onshape.com/videos/furniture-industry">https://www.onshape.com/videos/furniture-industry</a></li>
<li><a href="https://www.onshape.com/videos/assembly-mates">https://www.onshape.com/videos/assembly-mates</a></li>
<li>40523102</li>
<li><a href="https://www.onshape.com/videos/collaboration-simultaneous-editing">https://www.onshape.com/videos/collaboration-simultaneous-editing</a></li>
<li><a href="https://www.onshape.com/videos/understanding-full-cloud-cad-and-onshape">https://www.onshape.com/videos/understanding-full-cloud-cad-and-onshape</a></li>
<li>40523104</li>
<li><a href="https://www.onshape.com/videos/intro-assemblies-and-subassemblies">https://www.onshape.com/videos/intro-assemblies-and-subassemblies</a></li>
<li><a href="https://www.onshape.com/videos/assembly-design-case-study">https://www.onshape.com/videos/assembly-design-case-study</a></li>
<li>40523105</li>
<li><a href="https://www.onshape.com/videos/working-with-existing-cad-files">https://www.onshape.com/videos/working-with-existing-cad-files</a></li>
<li><a href="https://www.onshape.com/videos/using-mate-connectors">https://www.onshape.com/videos/using-mate-connectors</a></li>
<li>40523106</li>
<li><a href="https://www.onshape.com/videos/essentials-multipart">https://www.onshape.com/videos/essentials-multipart</a></li>
<li><a href="https://www.onshape.com/videos/3-ways-collaborate">https://www.onshape.com/videos/3-ways-collaborate</a></li>
<li>40523107</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-part">https://www.onshape.com/videos/lets-make-a-part</a></li>
<li><a href="https://www.onshape.com/videos/assemble-an-arbor-press">https://www.onshape.com/videos/assemble-an-arbor-press</a></li>
<li>40523108</li>
<li><a href="https://www.onshape.com/videos/direct-editing-with-variables">https://www.onshape.com/videos/direct-editing-with-variables</a></li>
<li><a href="https://www.onshape.com/videos/machine-part-design-case-study">https://www.onshape.com/videos/machine-part-design-case-study</a></li>
<li>40523109</li>
<li><a href="https://www.onshape.com/videos/edit-history-and-versioning">https://www.onshape.com/videos/edit-history-and-versioning</a></li>
<li><a href="https://www.onshape.com/videos/advanced-assembly-motion-06-22-17">https://www.onshape.com/videos/advanced-assembly-motion-06-22-17</a></li>
<li>40523111</li>
<li><a href="https://www.onshape.com/videos/sketching-basics-onshape">https://www.onshape.com/videos/sketching-basics-onshape</a></li>
<li><a href="https://www.onshape.com/videos/advanced-modeling-tools-and-workflows">https://www.onshape.com/videos/advanced-modeling-tools-and-workflows</a></li>
<li>40523112</li>
<li><a href="https://www.onshape.com/videos/merging-branches">https://www.onshape.com/videos/merging-branches</a></li>
<li><a href="https://www.onshape.com/videos/drawings">https://www.onshape.com/videos/drawings</a></li>
<li>40523113</li>
<li><a href="https://www.onshape.com/videos/creating-versions">https://www.onshape.com/videos/creating-versions</a></li>
<li><a href="https://www.onshape.com/videos/onshape-direct-editing-04-17-15">https://www.onshape.com/videos/onshape-direct-editing-04-17-15</a></li>
<li>40523114</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-sprocket">https://www.onshape.com/videos/lets-make-a-sprocket</a></li>
<li><a href="https://www.onshape.com/videos/managing-custom-properties-06-27-17">https://www.onshape.com/videos/managing-custom-properties-06-27-17</a></li>
<li>40523115</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-pipe-flange">https://www.onshape.com/videos/lets-make-a-pipe-flange</a></li>
<li><a href="https://www.onshape.com/videos/onshape-teams">https://www.onshape.com/videos/onshape-teams</a></li>
<li>40523116</li>
<li><a href="https://www.onshape.com/videos/fillet-and-chamfer">https://www.onshape.com/videos/fillet-and-chamfer</a></li>
<li><a href="https://www.onshape.com/videos/essentials-documents-ui">https://www.onshape.com/videos/essentials-documents-ui</a></li>
<li>40523117</li>
<li><a href="https://www.onshape.com/videos/mixing-units-and-fractions">https://www.onshape.com/videos/mixing-units-and-fractions</a></li>
<li><a href="https://www.onshape.com/videos/designing-fixtures">https://www.onshape.com/videos/designing-fixtures</a></li>
<li>40523118</li>
<li><a href="https://www.onshape.com/videos/lofting-in-onshape">https://www.onshape.com/videos/lofting-in-onshape</a></li>
<li><a href="https://www.onshape.com/videos/multipart-design">https://www.onshape.com/videos/multipart-design</a></li>
<li>40523119</li>
<li><a href="https://www.onshape.com/videos/creating-weldments">https://www.onshape.com/videos/creating-weldments</a></li>
<li><a href="https://www.onshape.com/videos/3-examples-of-using-the-onshape-app">https://www.onshape.com/videos/3-examples-of-using-the-onshape-app</a></li>
<li>40523120</li>
<li><a href="https://www.onshape.com/videos/lets-import-an-assembly">https://www.onshape.com/videos/lets-import-an-assembly</a></li>
<li><a href="https://www.onshape.com/videos/onshape-mobile">https://www.onshape.com/videos/onshape-mobile</a></li>
<li>40523121</li>
<li><a href="https://www.onshape.com/videos/design-in-context">https://www.onshape.com/videos/design-in-context</a></li>
<li><a href="https://www.onshape.com/videos/feedback-tool">https://www.onshape.com/videos/feedback-tool</a></li>
<li>40523122</li>
<li><a href="https://www.onshape.com/videos/software-overview-and-user-interface-tour">https://www.onshape.com/videos/software-overview-and-user-interface-tour</a></li>
<li><a href="https://www.onshape.com/videos/revolve">https://www.onshape.com/videos/revolve</a></li>
<li>40523123</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-nut">https://www.onshape.com/videos/lets-make-a-nut</a></li>
<li><a href="https://www.onshape.com/videos/using-supplier-models">https://www.onshape.com/videos/using-supplier-models</a></li>
<li>40523124</li>
<li><a href="https://www.onshape.com/videos/tips-and-tricks-for-the-loft-command-06-20-17">https://www.onshape.com/videos/tips-and-tricks-for-the-loft-command-06-20-17</a></li>
<li><a href="https://www.onshape.com/videos/import-export">https://www.onshape.com/videos/import-export</a></li>
<li>40523125</li>
<li><a href="https://www.onshape.com/videos/measure-tool">https://www.onshape.com/videos/measure-tool</a></li>
<li><a href="https://www.onshape.com/videos/shell-and-draft">https://www.onshape.com/videos/shell-and-draft</a></li>
<li>40523126</li>
<li><a href="https://www.onshape.com/videos/plastic-design-and-consumer-product-case-study">https://www.onshape.com/videos/plastic-design-and-consumer-product-case-study</a></li>
<li><a href="https://www.onshape.com/videos/android">https://www.onshape.com/videos/android</a></li>
<li>40523127</li>
<li><a href="https://www.onshape.com/videos/medical-device-case-study">https://www.onshape.com/videos/medical-device-case-study</a></li>
<li><a href="https://www.onshape.com/videos/assemble-gears">https://www.onshape.com/videos/assemble-gears</a></li>
<li>40523128</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-drawing">https://www.onshape.com/videos/lets-make-a-drawing</a></li>
<li><a href="https://www.onshape.com/videos/designing-linkages-in-context">https://www.onshape.com/videos/designing-linkages-in-context</a></li>
<li>40523129</li>
<li><a href="https://www.onshape.com/videos/documents-and-tabs">https://www.onshape.com/videos/documents-and-tabs</a></li>
<li><a href="https://www.onshape.com/videos/lets-import-a-part">https://www.onshape.com/videos/lets-import-a-part</a></li>
<li>40523130</li>
<li><a href="https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate">https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate</a></li>
<li><a href="https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling">https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling</a></li>
<li>40523131</li>
<li><a href="https://www.onshape.com/videos/essentials-assembly-basics">https://www.onshape.com/videos/essentials-assembly-basics</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-frame-guide">https://www.onshape.com/videos/lets-make-a-frame-guide</a></li>
<li>40523132</li>
<li><a href="https://www.onshape.com/videos/sketch-constraints">https://www.onshape.com/videos/sketch-constraints</a></li>
<li><a href="https://www.onshape.com/videos/essentials-part-studios">https://www.onshape.com/videos/essentials-part-studios</a></li>
<li>40523133</li>
<li><a href="https://www.onshape.com/videos/design-intent">https://www.onshape.com/videos/design-intent</a></li>
<li><a href="https://www.onshape.com/videos/secrets-of-the-shift-key">https://www.onshape.com/videos/secrets-of-the-shift-key</a></li>
<li>40523134</li>
<li><a href="https://www.onshape.com/videos/direct-editing-onshape">https://www.onshape.com/videos/direct-editing-onshape</a></li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing">https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing</a></li>
<li>40523135</li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly">https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-u-bolt">https://www.onshape.com/videos/lets-make-a-u-bolt</a></li>
<li>40523136</li>
<li><a href="https://www.onshape.com/videos/basic-part-design">https://www.onshape.com/videos/basic-part-design</a></li>
<li><a href="https://www.onshape.com/videos/compare">https://www.onshape.com/videos/compare</a></li>
<li>40523137</li>
<li><a href="https://www.onshape.com/videos/onshape-documents">https://www.onshape.com/videos/onshape-documents</a></li>
<li><a href="https://www.onshape.com/videos/onshape-drawings-webinar">https://www.onshape.com/videos/onshape-drawings-webinar</a></li>
<li>40523138</li>
<li><a href="https://www.onshape.com/videos/starting-a-design">https://www.onshape.com/videos/starting-a-design</a></li>
<li><a href="https://www.onshape.com/videos/essentials-onshape-mobile">https://www.onshape.com/videos/essentials-onshape-mobile</a></li>
<li>40523139</li>
<li><a href="https://www.onshape.com/videos/loft">https://www.onshape.com/videos/loft</a></li>
<li><a href="https://www.onshape.com/videos/split">https://www.onshape.com/videos/split</a></li>
<li>40523140</li>
<li><a href="https://www.onshape.com/videos/sweep">https://www.onshape.com/videos/sweep</a></li>
<li><a href="https://www.onshape.com/videos/sheet-metal">https://www.onshape.com/videos/sheet-metal</a></li>
<li>40523141</li>
<li><a href="https://www.onshape.com/videos/extrude">https://www.onshape.com/videos/extrude</a></li>
<li><a href="https://www.onshape.com/videos/dimensions-and-constraints">https://www.onshape.com/videos/dimensions-and-constraints</a></li>
<li>40523142</li>
<li><a href="https://www.onshape.com/videos/dimensions-and-constraints">https://www.onshape.com/videos/dimensions-and-constraints</a></li>
<li><a href="https://www.onshape.com/videos/extrude">https://www.onshape.com/videos/extrude</a></li>
<li>40523143</li>
<li><a href="https://www.onshape.com/videos/sheet-metal">https://www.onshape.com/videos/sheet-metal</a></li>
<li><a href="https://www.onshape.com/videos/sweep">https://www.onshape.com/videos/sweep</a></li>
<li>40523144</li>
<li><a href="https://www.onshape.com/videos/split">https://www.onshape.com/videos/split</a></li>
<li><a href="https://www.onshape.com/videos/loft">https://www.onshape.com/videos/loft</a></li>
<li>40523145</li>
<li><a href="https://www.onshape.com/videos/essentials-onshape-mobile">https://www.onshape.com/videos/essentials-onshape-mobile</a></li>
<li><a href="https://www.onshape.com/videos/starting-a-design">https://www.onshape.com/videos/starting-a-design</a></li>
<li>40523146</li>
<li><a href="https://www.onshape.com/videos/onshape-drawings-webinar">https://www.onshape.com/videos/onshape-drawings-webinar</a></li>
<li><a href="https://www.onshape.com/videos/onshape-documents">https://www.onshape.com/videos/onshape-documents</a></li>
<li>40523147</li>
<li><a href="https://www.onshape.com/videos/compare">https://www.onshape.com/videos/compare</a></li>
<li><a href="https://www.onshape.com/videos/basic-part-design">https://www.onshape.com/videos/basic-part-design</a></li>
<li>40523148</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-u-bolt">https://www.onshape.com/videos/lets-make-a-u-bolt</a></li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly">https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly</a></li>
</ul>
<p>乙班 Onshape 影片分配名單:</p>
<ul>
<li>40023139</li>
<li><a href="https://www.onshape.com/videos/first-look-at-onshape">https://www.onshape.com/videos/first-look-at-onshape</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-part-mobile">https://www.onshape.com/videos/lets-make-a-part-mobile</a></li>
<li>40223208</li>
<li><a href="https://www.onshape.com/videos/lets-make-an-assembly">https://www.onshape.com/videos/lets-make-an-assembly</a></li>
<li><a href="https://www.onshape.com/videos/lets-import-a-drawing">https://www.onshape.com/videos/lets-import-a-drawing</a></li>
<li>40371215</li>
<li><a href="https://www.onshape.com/videos/lets-collaborate">https://www.onshape.com/videos/lets-collaborate</a></li>
<li><a href="https://www.onshape.com/videos/split-face">https://www.onshape.com/videos/split-face</a></li>
<li>40371235</li>
<li><a href="https://www.onshape.com/videos/creating-custom-features-06-15-17">https://www.onshape.com/videos/creating-custom-features-06-15-17</a></li>
<li><a href="https://www.onshape.com/videos/getting-started-with-openbom-in-onshape">https://www.onshape.com/videos/getting-started-with-openbom-in-onshape</a></li>
<li>40423159</li>
<li><a href="https://www.onshape.com/videos/furniture-industry">https://www.onshape.com/videos/furniture-industry</a></li>
<li><a href="https://www.onshape.com/videos/assembly-mates">https://www.onshape.com/videos/assembly-mates</a></li>
<li>40423204</li>
<li><a href="https://www.onshape.com/videos/collaboration-simultaneous-editing">https://www.onshape.com/videos/collaboration-simultaneous-editing</a></li>
<li><a href="https://www.onshape.com/videos/understanding-full-cloud-cad-and-onshape">https://www.onshape.com/videos/understanding-full-cloud-cad-and-onshape</a></li>
<li>40423207</li>
<li><a href="https://www.onshape.com/videos/intro-assemblies-and-subassemblies">https://www.onshape.com/videos/intro-assemblies-and-subassemblies</a></li>
<li><a href="https://www.onshape.com/videos/assembly-design-case-study">https://www.onshape.com/videos/assembly-design-case-study</a></li>
<li>40423213</li>
<li><a href="https://www.onshape.com/videos/working-with-existing-cad-files">https://www.onshape.com/videos/working-with-existing-cad-files</a></li>
<li><a href="https://www.onshape.com/videos/using-mate-connectors">https://www.onshape.com/videos/using-mate-connectors</a></li>
<li>40423220</li>
<li><a href="https://www.onshape.com/videos/essentials-multipart">https://www.onshape.com/videos/essentials-multipart</a></li>
<li><a href="https://www.onshape.com/videos/3-ways-collaborate">https://www.onshape.com/videos/3-ways-collaborate</a></li>
<li>40423224</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-part">https://www.onshape.com/videos/lets-make-a-part</a></li>
<li><a href="https://www.onshape.com/videos/assemble-an-arbor-press">https://www.onshape.com/videos/assemble-an-arbor-press</a></li>
<li>40423231</li>
<li><a href="https://www.onshape.com/videos/direct-editing-with-variables">https://www.onshape.com/videos/direct-editing-with-variables</a></li>
<li><a href="https://www.onshape.com/videos/machine-part-design-case-study">https://www.onshape.com/videos/machine-part-design-case-study</a></li>
<li>40423233</li>
<li><a href="https://www.onshape.com/videos/edit-history-and-versioning">https://www.onshape.com/videos/edit-history-and-versioning</a></li>
<li><a href="https://www.onshape.com/videos/advanced-assembly-motion-06-22-17">https://www.onshape.com/videos/advanced-assembly-motion-06-22-17</a></li>
<li>40423241</li>
<li><a href="https://www.onshape.com/videos/sketching-basics-onshape">https://www.onshape.com/videos/sketching-basics-onshape</a></li>
<li><a href="https://www.onshape.com/videos/advanced-modeling-tools-and-workflows">https://www.onshape.com/videos/advanced-modeling-tools-and-workflows</a></li>
<li>40423250</li>
<li><a href="https://www.onshape.com/videos/merging-branches">https://www.onshape.com/videos/merging-branches</a></li>
<li><a href="https://www.onshape.com/videos/drawings">https://www.onshape.com/videos/drawings</a></li>
<li>40523201</li>
<li><a href="https://www.onshape.com/videos/creating-versions">https://www.onshape.com/videos/creating-versions</a></li>
<li><a href="https://www.onshape.com/videos/onshape-direct-editing-04-17-15">https://www.onshape.com/videos/onshape-direct-editing-04-17-15</a></li>
<li>40523203</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-sprocket">https://www.onshape.com/videos/lets-make-a-sprocket</a></li>
<li><a href="https://www.onshape.com/videos/managing-custom-properties-06-27-17">https://www.onshape.com/videos/managing-custom-properties-06-27-17</a></li>
<li>40523204</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-pipe-flange">https://www.onshape.com/videos/lets-make-a-pipe-flange</a></li>
<li><a href="https://www.onshape.com/videos/onshape-teams">https://www.onshape.com/videos/onshape-teams</a></li>
<li>40523205</li>
<li><a href="https://www.onshape.com/videos/fillet-and-chamfer">https://www.onshape.com/videos/fillet-and-chamfer</a></li>
<li><a href="https://www.onshape.com/videos/essentials-documents-ui">https://www.onshape.com/videos/essentials-documents-ui</a></li>
<li>40523206</li>
<li><a href="https://www.onshape.com/videos/mixing-units-and-fractions">https://www.onshape.com/videos/mixing-units-and-fractions</a></li>
<li><a href="https://www.onshape.com/videos/designing-fixtures">https://www.onshape.com/videos/designing-fixtures</a></li>
<li>40523207</li>
<li><a href="https://www.onshape.com/videos/lofting-in-onshape">https://www.onshape.com/videos/lofting-in-onshape</a></li>
<li><a href="https://www.onshape.com/videos/multipart-design">https://www.onshape.com/videos/multipart-design</a></li>
<li>40523209</li>
<li><a href="https://www.onshape.com/videos/creating-weldments">https://www.onshape.com/videos/creating-weldments</a></li>
<li><a href="https://www.onshape.com/videos/3-examples-of-using-the-onshape-app">https://www.onshape.com/videos/3-examples-of-using-the-onshape-app</a></li>
<li>40523210</li>
<li><a href="https://www.onshape.com/videos/lets-import-an-assembly">https://www.onshape.com/videos/lets-import-an-assembly</a></li>
<li><a href="https://www.onshape.com/videos/onshape-mobile">https://www.onshape.com/videos/onshape-mobile</a></li>
<li>40523211</li>
<li><a href="https://www.onshape.com/videos/design-in-context">https://www.onshape.com/videos/design-in-context</a></li>
<li><a href="https://www.onshape.com/videos/feedback-tool">https://www.onshape.com/videos/feedback-tool</a></li>
<li>40523212</li>
<li><a href="https://www.onshape.com/videos/software-overview-and-user-interface-tour">https://www.onshape.com/videos/software-overview-and-user-interface-tour</a></li>
<li><a href="https://www.onshape.com/videos/revolve">https://www.onshape.com/videos/revolve</a></li>
<li>40523213</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-nut">https://www.onshape.com/videos/lets-make-a-nut</a></li>
<li><a href="https://www.onshape.com/videos/using-supplier-models">https://www.onshape.com/videos/using-supplier-models</a></li>
<li>40523214</li>
<li><a href="https://www.onshape.com/videos/tips-and-tricks-for-the-loft-command-06-20-17">https://www.onshape.com/videos/tips-and-tricks-for-the-loft-command-06-20-17</a></li>
<li><a href="https://www.onshape.com/videos/import-export">https://www.onshape.com/videos/import-export</a></li>
<li>40523215</li>
<li><a href="https://www.onshape.com/videos/measure-tool">https://www.onshape.com/videos/measure-tool</a></li>
<li><a href="https://www.onshape.com/videos/shell-and-draft">https://www.onshape.com/videos/shell-and-draft</a></li>
<li>40523216</li>
<li><a href="https://www.onshape.com/videos/plastic-design-and-consumer-product-case-study">https://www.onshape.com/videos/plastic-design-and-consumer-product-case-study</a></li>
<li><a href="https://www.onshape.com/videos/android">https://www.onshape.com/videos/android</a></li>
<li>40523217</li>
<li><a href="https://www.onshape.com/videos/medical-device-case-study">https://www.onshape.com/videos/medical-device-case-study</a></li>
<li><a href="https://www.onshape.com/videos/assemble-gears">https://www.onshape.com/videos/assemble-gears</a></li>
<li>40523218</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-drawing">https://www.onshape.com/videos/lets-make-a-drawing</a></li>
<li><a href="https://www.onshape.com/videos/designing-linkages-in-context">https://www.onshape.com/videos/designing-linkages-in-context</a></li>
<li>40523219</li>
<li><a href="https://www.onshape.com/videos/documents-and-tabs">https://www.onshape.com/videos/documents-and-tabs</a></li>
<li><a href="https://www.onshape.com/videos/lets-import-a-part">https://www.onshape.com/videos/lets-import-a-part</a></li>
<li>40523220</li>
<li><a href="https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate">https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate</a></li>
<li><a href="https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling">https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling</a></li>
<li>40523222</li>
<li><a href="https://www.onshape.com/videos/essentials-assembly-basics">https://www.onshape.com/videos/essentials-assembly-basics</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-frame-guide">https://www.onshape.com/videos/lets-make-a-frame-guide</a></li>
<li>40523224</li>
<li><a href="https://www.onshape.com/videos/sketch-constraints">https://www.onshape.com/videos/sketch-constraints</a></li>
<li><a href="https://www.onshape.com/videos/essentials-part-studios">https://www.onshape.com/videos/essentials-part-studios</a></li>
<li>40523226</li>
<li><a href="https://www.onshape.com/videos/design-intent">https://www.onshape.com/videos/design-intent</a></li>
<li><a href="https://www.onshape.com/videos/secrets-of-the-shift-key">https://www.onshape.com/videos/secrets-of-the-shift-key</a></li>
<li>40523227</li>
<li><a href="https://www.onshape.com/videos/direct-editing-onshape">https://www.onshape.com/videos/direct-editing-onshape</a></li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing">https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing</a></li>
<li>40523229</li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly">https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-u-bolt">https://www.onshape.com/videos/lets-make-a-u-bolt</a></li>
<li>40523230</li>
<li><a href="https://www.onshape.com/videos/basic-part-design">https://www.onshape.com/videos/basic-part-design</a></li>
<li><a href="https://www.onshape.com/videos/compare">https://www.onshape.com/videos/compare</a></li>
<li>40523231</li>
<li><a href="https://www.onshape.com/videos/onshape-documents">https://www.onshape.com/videos/onshape-documents</a></li>
<li><a href="https://www.onshape.com/videos/onshape-drawings-webinar">https://www.onshape.com/videos/onshape-drawings-webinar</a></li>
<li>40523232</li>
<li><a href="https://www.onshape.com/videos/starting-a-design">https://www.onshape.com/videos/starting-a-design</a></li>
<li><a href="https://www.onshape.com/videos/essentials-onshape-mobile">https://www.onshape.com/videos/essentials-onshape-mobile</a></li>
<li>40523233</li>
<li><a href="https://www.onshape.com/videos/loft">https://www.onshape.com/videos/loft</a></li>
<li><a href="https://www.onshape.com/videos/split">https://www.onshape.com/videos/split</a></li>
<li>40523234</li>
<li><a href="https://www.onshape.com/videos/sweep">https://www.onshape.com/videos/sweep</a></li>
<li><a href="https://www.onshape.com/videos/sheet-metal">https://www.onshape.com/videos/sheet-metal</a></li>
<li>40523236</li>
<li><a href="https://www.onshape.com/videos/extrude">https://www.onshape.com/videos/extrude</a></li>
<li><a href="https://www.onshape.com/videos/dimensions-and-constraints">https://www.onshape.com/videos/dimensions-and-constraints</a></li>
<li>40523237</li>
<li><a href="https://www.onshape.com/videos/dimensions-and-constraints">https://www.onshape.com/videos/dimensions-and-constraints</a></li>
<li><a href="https://www.onshape.com/videos/extrude">https://www.onshape.com/videos/extrude</a></li>
<li>40523238</li>
<li><a href="https://www.onshape.com/videos/sheet-metal">https://www.onshape.com/videos/sheet-metal</a></li>
<li><a href="https://www.onshape.com/videos/sweep">https://www.onshape.com/videos/sweep</a></li>
<li>40523239</li>
<li><a href="https://www.onshape.com/videos/split">https://www.onshape.com/videos/split</a></li>
<li><a href="https://www.onshape.com/videos/loft">https://www.onshape.com/videos/loft</a></li>
<li>40523240</li>
<li><a href="https://www.onshape.com/videos/essentials-onshape-mobile">https://www.onshape.com/videos/essentials-onshape-mobile</a></li>
<li><a href="https://www.onshape.com/videos/starting-a-design">https://www.onshape.com/videos/starting-a-design</a></li>
<li>40523241</li>
<li><a href="https://www.onshape.com/videos/onshape-drawings-webinar">https://www.onshape.com/videos/onshape-drawings-webinar</a></li>
<li><a href="https://www.onshape.com/videos/onshape-documents">https://www.onshape.com/videos/onshape-documents</a></li>
<li>40523242</li>
<li><a href="https://www.onshape.com/videos/compare">https://www.onshape.com/videos/compare</a></li>
<li><a href="https://www.onshape.com/videos/basic-part-design">https://www.onshape.com/videos/basic-part-design</a></li>
<li>40523243</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-u-bolt">https://www.onshape.com/videos/lets-make-a-u-bolt</a></li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly">https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly</a></li>
<li>40523244</li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing">https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing</a></li>
<li><a href="https://www.onshape.com/videos/direct-editing-onshape">https://www.onshape.com/videos/direct-editing-onshape</a></li>
<li>40523245</li>
<li><a href="https://www.onshape.com/videos/secrets-of-the-shift-key">https://www.onshape.com/videos/secrets-of-the-shift-key</a></li>
<li><a href="https://www.onshape.com/videos/design-intent">https://www.onshape.com/videos/design-intent</a></li>
<li>40523246</li>
<li><a href="https://www.onshape.com/videos/essentials-part-studios">https://www.onshape.com/videos/essentials-part-studios</a></li>
<li><a href="https://www.onshape.com/videos/sketch-constraints">https://www.onshape.com/videos/sketch-constraints</a></li>
<li>40523248</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-frame-guide">https://www.onshape.com/videos/lets-make-a-frame-guide</a></li>
<li><a href="https://www.onshape.com/videos/essentials-assembly-basics">https://www.onshape.com/videos/essentials-assembly-basics</a></li>
<li>40523249</li>
<li><a href="https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling">https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling</a></li>
<li><a href="https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate">https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate</a></li>
<li>40523250</li>
<li><a href="https://www.onshape.com/videos/lets-import-a-part">https://www.onshape.com/videos/lets-import-a-part</a></li>
<li><a href="https://www.onshape.com/videos/documents-and-tabs">https://www.onshape.com/videos/documents-and-tabs</a></li>
</ul>
<h2>輔助設計套件</h2>
<h4>常見 MCAD 套件</h4>
<p><a href="http://lab.kmol.info/2017fall/blog/kmol-2017-fall-cadp-what-is-computer-aided-design.html">http://lab.kmol.info/2017fall/blog/kmol-2017-fall-cadp-what-is-computer-aided-design.html</a> </p>
<p>一般常見的機械電腦輔助設計套件包括法國<span> </span><a href="https://www.3ds.com/">Dassault</a><span> </span>公司的<span> </span><a href="https://www.3ds.com/products-services/solidworks/">SolidWorks</a><span> </span>與<span> </span><a href="https://www.3ds.com/products-services/catia/">Catia</a>, 美國<span> </span><a href="https://www.autodesk.com.tw/">AutoDesk</a><span> </span>公司的<span> </span><a href="https://www.autodesk.com.tw/products/autocad/">AutoCAD</a><span> </span>與<span> </span><a href="https://www.autodesk.com/products/inventor/overview">Inventor</a>, 德國<span> </span><a href="https://www.siemens.com/tw/zh/home.html">Siemens</a><span> </span>公司的<span> </span><a href="https://www.plm.automation.siemens.com/en/products/solid-edge/">Solid Edge</a><span> </span>與<span> </span><a href="https://www.plm.automation.siemens.com/zh/products/nx/index.shtml">NX</a>, 美國<span> </span><a href="http://www.ptc-taiwan.com/">PTC</a><span> </span>公司的<span> </span><a href="http://www.ptc-taiwan.com/cad">Creo</a>, 以及 2015 年推出的<span> </span><a href="https://www.onshape.com/">Onshape</a></p>
<p>其他 MCAD: 俄羅斯的<span> </span><a href="http://www.tflex.com/resources/tflexcadst/download/">T-Flex</a>, 美國的 <a href="https://altairhyperworks.com/">Hyperworks</a> </p>
<h4>免費學生 MCAD/E 套件</h4>
<p><a href="https://www.onshape.com/products/education?hsCtaTracking=28006f2c-d5c6-46ad-9e1e-32cd73f381d6%7C9ebb58b7-e237-493e-b77d-a789ad661024">Onshape 免費教育版</a>, <a href="https://www.onshape.com/edu/college-curriculum">Onshape 教育課程</a></p>
<p><a href="https://www.autodesk.com/education/free-software/featured">AutoDesk 免費教育版</a> (包括 <a href="https://www.autodesk.com/education/free-software/inventor-professional">Inventor</a> , <a href="https://www.autodesk.com/education/free-software/autocad">AutoCAD</a> 與 <a href="https://www.autodesk.com/products/fusion-360/students-teachers-educators">Fusion 360</a>)</p>
<p><a href="https://www.ptc.com/en/academic-program/products/free-software">PTC Creo student 免費版本</a></p>
<p><a href="https://www.plm.automation.siemens.com/plmapp/education/solid-edge/en_us/free-software/student">Solid Edge student 免費版本</a></p>
<p><a href="https://altairuniversity.com/free-hyperworks-2017-student-edition/">free Hyperworks student edition</a></p>
<p><a href="https://academy.3ds.com/en/software/abaqus-student-edition">Abaqus 免費學生版</a></p>
<p><a href="https://www.ansys.com/academic/free-student-products">Ansys 免費學生版</a></p>
<p><a href="https://www.simscale.com/product/pricing/">Simscale 免費社群帳號</a></p>
<h4>參考資料</h4>
<p>從電腦輔助系統發展至使用者從旁導引, 一直到電腦系統自主控制...</p>
<p><a href="/downloads/cad_history.pdf">CAD History.pdf</a></p>
<p><a href="/downloads/cadbook.pdf">CAD Book.pdf</a></p>
<p><a href="/downloads/intro_computer_aided_design.pdf">Intro_computer_aided_design.pdf</a></p>
<p><a href="/downloads/intro_design.pdf">intro_design.pdf</a></p>
<p><a href="/downloads/CADCAECAM_Review.pdf">CADCAECAM_Review.pdf</a></p>
<p><a href="/downloads/CAD_CAM_Bowyer.pdf">Computer Aided Design and Manufacturing.pdf</a> by <a href="https://en.wikipedia.org/wiki/Adrian_Bowyer">Bowyer</a></p>
<p><a href="/downloads/Introduction_Computing_Geometry.pdf">Introduction_Computing_Geometry.pdf</a></p>
<p><a href="/downloads/A Geometric Interface for Solid Modelling.pdf.crdownload">A Geometric Interface for Solid Modelling.pdf</a> (<a href="http://adrianbowyer.com/inge/djinn/intro.htm">Intro to Djinn</a>)</p>
<p><a href="/downloads/solid_modeling_basics.pdf">Solid Modeling Basics.pdf</a></p>
<p><a href="/downloads/Solid_Modeling.pdf">Solid Modeling.pdf</a></p>
<p><a href="/downloads/Geometric_Modeling_ch1.pdf">Geometric_Modeling_ch1.pdf</a></p>
<p><a href="/downloads/Geometric_Modeling_ch2.pdf">Geometric_Modeling_ch2.pdf</a></p>
<p><a href="/downloads/Geometric_Modeling_ch3.pdf">Geometric_Modeling_ch3.pdf</a></p>
<p><a href="/downloads/Geometric_Modeling_ch4.pdf">Geometric_Modeling_ch4.pdf</a></p>
<p><a href="/downloads/Geometric_Modeling_ch5.pdf">Geometric_Modeling_ch5.pdf</a></p>
<p><a href="/downloads/Geometric_Modeling_ch6-1.pdf">Geometric_Modeling_ch6-1.pdf</a></p>
<p><a href="/downloads/Geometric_Modeling_ch6-2.pdf">Geometric_Modeling_ch6-2.pdf</a></p>
<p><a href="/downloads/Geometric_Modeling_ch7.pdf">Geometric_Modeling_ch7.pdf</a></p>
<p><a href="/downloads/Geometric_Modeling_engr_application.pdf">Geometric_Modeling_engr_applicatio</a><a href="/downloads/Geometric_Modeling_engr_application.pdf">n.pdf</a></p>
<p><a href="/downloads/SvLis.7z">SvLis.7z</a> (<a href="https://github.com/AdrianBowyer/SvLis">https://github.com/AdrianBowyer/SvLis</a>)</p>
<p>Learn Autodesk Inventor 2018 Basics</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-3225-5">https://link.springer.com/book/10.1007/978-1-4842-3225-5</a> </p>
<p>2016 Solid Modeling and Applications - Rapid Prototyping, CAD and CAE Theory</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-319-21822-9">https://link.springer.com/book/10.1007/978-3-319-21822-9</a> </p>
<p>2016 Computer Aided Virtual Manufacturing using Creo Parametric</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-319-23359-8">https://link.springer.com/book/10.1007/978-3-319-23359-8</a> </p>
<p>2015 Space Modeling with Solidworks and NX</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-319-03862-9">https://link.springer.com/book/10.1007/978-3-319-03862-9</a> </p>
<h4>Modelica</h4>
<p style="padding-left: 30px;"><a href="https://www.modelica.org/">https://www.modelica.org/</a> </p>
<p style="padding-left: 30px;"><a href="https://openmodelica.org/">https://openmodelica.org/</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/OpenModelica/OpenModelica">https://github.com/OpenModelica/OpenModelica</a> </p>
<p style="padding-left: 30px;"><a href="/downloads/intro_oomodeling_modelica.pdf">Introduction to object oriented modeling  with modelica.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/dzimmer/PlanarMechanics">https://github.com/dzimmer/PlanarMechanics</a> </p>
<p><a href="/downloads/logical_foundataions_cyber_physical_sys.pdf">Logical Foundations of Cyber Physical Systems.pdf</a></p>
<p><a href="/downloads/highly_automated_vechical_sys.pdf">Highly Automated Vehicle System.pdf</a></p>
<h4>如何進行電腦輔助機械設計專題</h4>
<p>1. 文獻回顧 (Literature Review) 階段 - 了解現存既有的研究成果, 確立專題定位與目標</p>
<p>利用關鍵字搜尋相關文獻, 針對文獻回顧與探討, 初步定位專案性質以及從事專案的目標.</p>
<p>例如, 關鍵字:<span> </span><a href="https://www.google.com.tw/search?q=marble+machine+construction+set">marble machine construction set</a>,<span> </span><a href="https://www.google.com.tw/search?q=linkage+synthesis">linkage synthesis</a>,<span> </span><a href="https://www.google.com.tw/search?q=arduino+mechatronics">arduino mechatronics</a>,<span> </span><a href="https://www.google.com.tw/search?q=arduino+servo+control">arduino servo control</a>,<span> </span><a href="https://www.google.com.tw/search?q=lifter+linkage">lifter linkage</a>,<span> </span><a href="https://mde1a1.kmol.info/2017fall/raw/doing+a+literature+review.pdf?name=566d6dab70c1a7e7458a2c10c667416fea048170">Doing a Literature Review</a></p>
<p>2. 整理可用工具, 擬想何謂機械?何謂設計?何謂電腦輔助?擬想所要解決的問題, 準備開始進行電腦輔助機械設計專題</p>
<p>機械是一種功能明確的器物, 內容包含固體、流體與軟體元件, 彼此精巧配置結合, 可展現特定功能</p>
<p>設計是一種表達, 而且是可以讓人依循, 逐步按照指示, 完成設計者預想的結果, 且表達方法包含文字、口語、2D、3D、數學與實體方法.</p>
<p>文字結合 2D、3D、數學表達方法 - 設計專題報告</p>
<p>利用口語簡報設計專題內容 - 設計專題報告影片</p>
<p>電腦輔助 - 利用電腦的功能協助設計進行</p>
<p>電腦功能 - 設計組態管理、運算、模擬、網路資訊傳輸、展示、協同</p>
<p>例如:</p>
<p>零組件繪圖工具:<span> </span><a href="http://solvespace.com/">Solvespace</a><span> </span>(包含在隨身系統),<span> </span><a href="http://www.onshape.com/">Onshape</a><span> </span>(自行申請帳號),<span> </span><a href="http://www.ptc-taiwan.com/cad/creo">PTC Creo Parametric</a><span> </span>(可從區網下載可攜網路認證版本) ,<span> </span><a href="https://www.autodesk.com/products/inventor/overview">Autodesk Inventor</a><span> </span>(可自行申請免費學生版本或安裝系上提供之網路認證版本),<span> </span><a href="http://www.solidworks.com.cn/">Dassault Solidworks</a><span> </span>(可安裝學校提供之網路認證版本).</p>
<p>協同工具:<span> </span><a href="http://www.onshape.com/">Onshape</a><span> </span>(自行申請帳號),<span> </span><a href="https://a360.autodesk.com/">A360</a><span> </span>(自行申請帳號)</p>
<p>模擬工具:<span> </span><a href="http://www.coppeliarobotics.com/">V-rep</a><span> </span>(包含在隨身系統),<span> </span><a href="https://www.blender.org/">Blender</a><span> </span>(包含在隨身系統),<span> </span><a href="https://www.tinkercad.com/">Tinkercad</a><span> </span>(自行申請帳號)</p>
<p>控制與致動工具:<span> </span><a href="https://www.arduino.cc/">Arduino</a><span> </span>(包含在工具箱中),<span> </span><a href="http://www.instructables.com/id/Arduino-Servo-Motors/">Servo Motor</a><span> </span>(包含在工具箱中)</p>
<p>3D 列印工具:<span> </span><a href="http://atom3dp.com/">Delta Printer</a><span> </span>(由系上實習設備提供)</p>
<p>3. 根據專題定位與目標, 確定所要解決的問題項目, 逐一採模組式, 以協同流程, 透過自學、執行與檢討想像, 由簡入繁, 持續改進各模組的內容與功能, 在可用時間內, 解決各種問題, 終至完成專題, 達成目標.</p>
<p>鋼球循環運動系統設計</p>
<p>機構設計 - 軌道設計、鋼球提升與傳動系統設計、其他零組件設計</p>
<p>致動與控制系統設計 - 電路設計、伺服馬達致動程式設計</p>
<p>監控程式設計 - 以視窗程式啟動系統運作、傳回鋼球通過控制點訊息、計算運行距離與速度</p>
<p>marble lift mechanism</p>
<p>四連桿浮動桿通過三個位置的尺寸合成設計</p>
<p>六連桿尺寸合成</p>
<p>八連桿尺寸合成</p>
<p><a href="http://www.eddiesmind.com/basic-lifting-mechanisms.html">http://www.eddiesmind.com/basic-lifting-mechanisms.html</a></p>
<p>Linkage:<span> </span><a href="http://blog.rectorsquid.com/linkage-mechanism-designer-and-simulator/">http://blog.rectorsquid.com/linkage-mechanism-designer-and-simulator/</a><span> </span>(<a href="https://github.com/rectorsquid/Linkage">Source codes</a>)</p>
<p>LinkageDesigner (an add-on package to Wolfram's Mathematica):<span> </span><a href="http://www.linkagedesigner.com/">http://www.linkagedesigner.com/</a>,<span> </span><a href="https://www.wolfram.com/products/applications/linkagedesigner/">https://www.wolfram.com/products/applications/linkagedesigner/</a></p>
<p><a href="https://github.com/KmolYuan/Pyslvs-PyQt5">https://github.com/KmolYuan/Pyslvs-PyQt5</a></p><h3>Creo</h3>
<p><a href="https://www.ptc.com/en/cad-software-blog/most-important-feature-in-creo-4">The most import feature in Creo 4.0</a></p>
<p><a href="https://www.ptc.com/en/products/cad/creo/whats-new">What's new in Creo 5.0</a></p>
<p><a href="/downloads/Primer_Creo_2.pdf">Primer_Creo_2.pdf</a></p>
<p><a href="/downloads/Creo_Parametric_v2_Advanced_Primer.pdf">Creo_Parametric_v2_Advanced_Primer.pdf</a></p>
<p><a href="/downloads/Creo_Parametric_v2_Sheet_Metal.pdf">Creo_Parametric_v2_Sheet_Metal.pdf</a></p>
<p><a href="/downloads/Creo_Parametric_v2_Mechanism_Design.pdf">Creo_Parametric_v2_Mechanism_Design.pdf</a></p>
<p><a href="/downloads/Creo_Parametric_v3_Helical_Sweeps.pdf">Creo_Parametric_v3_Helical_Sweeps.pdf</a></p>
<p><a href="/downloads/Creo_Parametric_v2_ISDX.pdf">Creo_Parametric_v2_ISDX.pdf</a></p>
<p><a href="/downloads/Creo_Parametric_v2_Pillow_Block.pdf">Creo_Parametric_v2_Pillow_Block.pdf</a></p>
<p><a href="/downloads/Creo_Parametric_v2_Chain_Drive.pdf">Creo_Parametric_v2_Chain_Drive.pdf</a></p>
<p><a href="/downloads/Creo_Parametric_v2_Oil_Cover.pdf">Creo_Parametric_v2_Oil_Cover.pdf</a></p>
<p><a href="/downloads/Creo_Parametric_v2_Sensitivity_Feasibility.pdf">Creo_Parametric_v2_Sensitivity_Feasibility.pdf</a></p>
<p><a href="/downloads/Creo_Parametric_v2_Minimize_Volume.pdf">Creo_Parametric_v2_Minimize_Volume.pdf</a></p>
<p>參考資料</p>
<p><a href="http://engr.bd.psu.edu/METBD_306_m/METBD_306_m/main_306.html">http://engr.bd.psu.edu/METBD_306_m/METBD_306_m/main_306.html</a> (使用 Excel 與 MathCAD 輔助設計運算)</p>
<p></p>
<h2>Kinematics</h2>
<p>2013  21st Century Kinematics:</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4471-4510-3">https://link.springer.com/book/10.1007/978-1-4471-4510-3</a> </p>
<h2>Dynamics</h2>
<p>2003 Rigid Body Dynamics of Mechanism</p>
<p><a href="https://link.springer.com/book/10.1007/978-3-662-09769-4">https://link.springer.com/book/10.1007/978-3-662-09769-4</a> </p>
<p></p>
<h2>PythonCAD</h2>
<p>R37 使用 PyGTK</p>
<p>R38 使用 PyQt</p>
<p><a href="http://download2.polytechnic.edu.na/pub4/sourceforge/p/project/py/pythoncad/">http://download2.polytechnic.edu.na/pub4/sourceforge/p/project/py/pythoncad/</a> </p>
<p>以下版本使用 Python3 與 PyQt5:</p>
<p><a href="https://github.com/chiamingyen/PythonCAD_py3">https://github.com/chiamingyen/PythonCAD_py3</a> </p>
<p>以下資料為 R37 對應版本參考用:</p>
<p>This introduces you into the basic concepts of a CAD system.</p>
<h4>Entities</h4>
<p>Entities are graphical objects in a CAD system. Typical entities which are supported by most CAD systems are: points, lines and circular and elliptical arcs. More complex and CAD specific entities include polylines, texts, dimensioning, hatches and splines. Attributes</p>
<p>Every entity has certain attributes such as its color, line type and line width.</p>
<h4>Layers</h4>
<p>A basic concept of computer aided drafting is the use of layers to organize a drawing. Every entity of a drawing is on exactly one layer and a layer can contain lots of entities. Typically entities with a common 'function' or common attributes are put on the same layer. E.g. you might want to put all axes in a drawing on a layer named 'axes' (see Figure 1). Layers can have attributes (color, line width, line style). Each entity can have its own attributes or have its attributes defined by the layer it is placed on. In the latter case you can change for example the color of all 'axes' entities by changing the color of the layer 'axes'.</p>
<p>In manual drafting, a similar approach was used. Different building systems, such as wiring and air conditioning were often drawn on separate transparent sheet of paper. These sheets were then overlaid on one another to produce final drawings.</p>
<h4>Blocks</h4>
<p>A Block is a group of entities. Blocks can be inserted into the same graphic more than once with different Attributes and different locations, scaling factors and rotation angles (see Figure 2). Such an instance of a block is usually called an Insert. Inserts have attributes just like entities and layers. An Entity that is part of an Insert can have its own attributes or share the attributes of the Insert. Once created, Inserts are still linked to the Block they instantiate. The power of inserts is, that you can modify the Block once and all Inserts will be updated accordingly.</p>
<h4>Drafting in CAD</h4>
<p>In many ways, CAD is similar to traditional drafting. When drawing a plan or a view of an object on a paper, you would use tools such as a ruler to draw lines. In CAD systems there is a variety of tools available to achieve the same goal. The big advantage of a CAD system is the fact that you can change every entity of your drawing easily after you've created it. This might be the most difficult thing to learn when moving from paper to CAD. When working with a CAD system you will very often create lines that won't be on the final printout or which don't have the correct length and need to be trimmed later (see Figure 3). A common mistake of CAD beginners is wanting to create the final drawing right away.</p>
<h4>Coordinate Systems</h4>
<p>A good understanding of how coordinates work is absolutely crucial if you are to make the best use of any CAD program. If you're not familiar with coordinates it's highly recommended that you take some time to familiarize yourself with the basic concepts.</p>
<h4>Origin</h4>
<p>The origin of the drawing is the point where the X and Y axis cross each other. It's the absolute zero of the drawing. In addition to the origin there's a relative zero point. This is a helpful spot that changes it's position depending on the current user interactions. The relative zero point can also be moved around by the user.</p>
<p>Cartesian Coordinates</p>
<p>The Cartesian coordinate system is the standard coordinate system. It was named after the French philosopher René Descartes (1596-1650). The position of a point is described by its distance from two axes, X and Y. It is commonly denoted by x, y where x and y are the distances. Positive X direction is left while positive y direction is up.</p>
<p>Cartesian coordinates can also originate in a position different from the origin. In that case we talk about 'relative coordinates'.</p>
<h4>Polar Coordinates</h4>
<p>Polar coordinates use a distance and an angle to describe the position of a point.</p>
<p>Just like Cartesian coordinates, polar coordinates can also originate in a position different from the origin.</p>
<h4>Object and Grid Snapping</h4>
<p>To specify a coordinate, you can use the snap feature which allows you to precisely select grid points or significant points on existing objects: endpoints or midpoints of lines, etc.</p>
<h4>Basic Editing</h4>
<p>Entities can be inserted, selected, and, once selected, can be deleted, transformed or duplicated. To insert an entity means to draw it by selecting the appropriate drawing tool, such as line, arc, etc., and by locating points that define the object to be drawn, such as the endpoints of a line.</p>
<h4>Entity Selection</h4>
<p>An entity must be selected before it can be deleted, duplicated, or transformed. Entity selection is one of the most basic of CAD operations. There are a wide variety of selection tools to quickly select groups of entities, entities within a range, connected entities, etc.</p>
<h4>Deletion</h4>
<p>Deleting an entity means to remove it from the drawing.</p>
<h4>Modifications</h4>
<p>Basic modifications of a CAD systems include translation, rotation, reflection, and scaling. As well as these operations which don't alter the characteristic geometry of selected entities, there are some that do. You can break, trim, extend or stretch existing entities.</p>
<h4>Dimensions</h4>
<p>The required sizes of features are conveyed through use of dimensions. Distances may be indicated with either of two standardized forms of dimension: linear and ordinate.</p>
<p>With linear dimensions, two parallel lines, called “extension lines,” spaced at the distance between two features, are shown at each of the features. A line perpendicular to the extension lines, called a “dimension line,” with arrows at its endpoints, is shown between, and terminating at, the extension lines. The distance is indicated numerically at the midpoint of the dimension line, either adjacent to it, or in a gap provided for it.<br/> <br/>With ordinate dimensions, one horizontal and one vertical extension line establish an origin for the entire view. The origin is identified with zeroes placed at the ends of these extension lines. Distances along the x- and y-axes to other features are specified using other extension lines, with the distances indicated numerically at their ends.<br/> <br/>Sizes of circular features are indicated using either diametral or radial dimensions. Radial dimensions use an “R” followed by the value for the radius; Diametral dimensions use a circle with forward-leaning diagonal line through it, called the diameter symbol, followed by the value for the diameter.</p>
<p>A radially-aligned line with arrowhead pointing to the circular feature, called a leader, is used in conjunction with both diametral and radial dimensions. All types of dimensions are typically composed of two parts: the nominal value, which is the “ideal” size of the feature, and the tolerance, which specifies the amount that the value may vary above and below the nominal. Architectural Dimensions</p>
<h4>Viewing in CAD</h4>
<p>Unlike in manual drafting, there is no need in CAD to determine in advance the sheet size and drawing scale. There is no drawing scale: all sizes and distances are specified using their full-scale values. A 10 meter object is drawn as a 10 meter object. Only at the printing stage, the drawing scale needs to be determined based on sheet size and drawing size.</p>
<p>On the screen, the user can adjust the currently visible area of the drawing by zooming in to view more detail or zooming out to view a wider extent. Another important viewing operation in CAD is panning. To see another portion of the drawing without changing the display scale, a user pans to it by “moving” a rectangular display window until it's over the desired spot.</p>
<p>From R38 version the command are changed this new list describe how to use it and what they do</p>
<ul>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:segment" rel="nofollow" title="r38command:segment">SEGMENT</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:arc" rel="nofollow" title="r38command:arc">ARC</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:circle" rel="nofollow" title="r38command:circle">CIRCLE</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:point" rel="nofollow" title="r38command:point">POINT</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:ellipse" rel="nofollow" title="r38command:ellipse">ELLIPSE</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:polyline" rel="nofollow" title="r38command:polyline">POLYLINE</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:cline" rel="nofollow" title="r38command:cline">CLINE</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:ccircle" rel="nofollow" title="r38command:ccircle">CCIRCLE</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:text" rel="nofollow" title="r38command:text">TEXT</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:chamfer" rel="nofollow" title="r38command:chamfer">CHAMFER</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:fillet" rel="nofollow" title="r38command:fillet">FILLET</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:bisector" rel="nofollow" title="r38command:bisector">BISECTOR</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:rectangle" rel="nofollow" title="r38command:rectangle">RECTANGLE</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:polygon" rel="nofollow" title="r38command:polygon">POLYGON</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:copy" rel="nofollow" title="r38command:copy">COPY</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38commande:move" rel="nofollow" title="r38commande:move">MOVE</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:mirror" rel="nofollow" title="r38command:mirror">MIRROR</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:rotate" rel="nofollow" title="r38command:rotate">ROTATE</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:trim" rel="nofollow" title="r38command:trim">TRIM</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:delete" rel="nofollow" title="r38command:delete">DELETE</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink2" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:dimension" rel="nofollow" title="r38command:dimension">DIMENSION</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38command:property" title="r38command:property">PROPERTY</a></div>
</li>
</ul>
<h4><span style="background-color: #d5d5d5;">Command</span></h4>
<h4>Command Line Staff Only R38</h4>
<div class="level2">
<p>If the CAD is waiting for a point you can use the following form to input the point from a command line:</p>
<ul>
<li class="level1">
<div class="li">absolute coords 10,10</div>
</li>
<li class="level1">
<div class="li">relative coords 10;10</div>
</li>
<li class="level1">
<div class="li">relative coords angle&gt;lenght</div>
</li>
</ul>
<p>Unit Mesure: PythonCAD use the mm radiants as input value .. if you whant to input a different unit measure you can use the sympy syntax as follow. the unit measure converter is retrieved by using the u letter .. es:</p>
<ul>
<li class="level1">
<div class="li">10*u.ft → translate 10 ft in mm</div>
</li>
<li class="level1">
<div class="li">10,10*u.ft</div>
</li>
<li class="level1">
<div class="li">45*u.deg&gt;100</div>
</li>
</ul>
<h4>File</h4>
</div>
<div class="level2">
<p>It opens drop down menu for the<span> </span><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file" title="file">file</a><span> </span>manipulation. The menu consists of</p>
<ul>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file#new" title="file">New</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file#open" title="file">Open</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file#import" title="file">Import</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file#close" title="file">Close</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file#save" title="file">Save &lt;R38</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file#save_as" title="file">Save as</a>…</div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file#save_layer_as" title="file">Save layer as</a>…</div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file#print_screen" title="file">Print screen</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file#print" title="file">Print</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file#quit" title="file">Quit</a></div>
</li>
</ul>
</div>
<h4>Edit</h4>
<div class="level2">
<ul>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=edit" title="edit">Undo</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=edit" title="edit">Redo</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=edit" title="edit">Cut</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=edit" title="edit">Copy</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=edit" title="edit">Paste</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=edit" title="edit">Select</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=edit" title="edit">Select all</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=edit" title="edit">Deselect</a></div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=commands:preferences" title="commands:preferences">Preferences</a></div>
</li>
</ul>
<h4>Draw</h4>
</div>
<div class="level2">
<ul>
<li class="level1">
<div class="li">Basic</div>
<ul>
<li class="level2">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=commands:point" title="commands:point">Point</a></div>
</li>
<li class="level2">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=commands:segment" title="commands:segment">Segment</a></div>
</li>
<li class="level2">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=commands:rect" title="commands:rect">Rectangle</a></div>
</li>
<li class="level2">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=commands:circle" title="commands:circle">Circle</a><span> </span>center and radius</div>
</li>
<li class="level2">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=commands:circle2pts" title="commands:circle2pts">Circle (2pts)</a><span> </span>diameter points</div>
</li>
<li class="level2">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=commands:arc" title="commands:arc">Arc</a></div>
</li>
</ul>
</li>
<li class="level1">
<div class="li">Con. lines (construction lines)</div>
<ul>
<li class="level2">
<div class="li">Horizontal</div>
</li>
<li class="level2">
<div class="li">Vertical</div>
</li>
<li class="level2">
<div class="li">Angled</div>
</li>
<li class="level2">
<div class="li">Two points</div>
</li>
<li class="level2">
<div class="li">Perpendicular</div>
</li>
<li class="level2">
<div class="li">Parallel</div>
</li>
<li class="level2">
<div class="li">Tangent</div>
</li>
<li class="level2">
<div class="li">Tangent 2 circ</div>
</li>
</ul>
</li>
<li class="level1">
<div class="li">Con. circs. (construction circles)</div>
<ul>
<li class="level2">
<div class="li">Center pt.</div>
</li>
<li class="level2">
<div class="li">Two pts.</div>
</li>
<li class="level2">
<div class="li">Single tangency</div>
</li>
<li class="level2">
<div class="li">Dual tangency</div>
</li>
</ul>
</li>
<li class="level1">
<div class="li">Chamfer</div>
</li>
<li class="level1">
<div class="li">Fillets</div>
<ul>
<li class="level2">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=commands:filletpoint" title="commands:filletpoint">point</a></div>
</li>
<li class="level2">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=commands:fillettwoline" title="commands:fillettwoline">twoline</a></div>
</li>
</ul>
</li>
<li class="level1">
<div class="li">Leader</div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=commands:polyline" title="commands:polyline">Polyline</a></div>
</li>
<li class="level1">
<div class="li">Polygon (int.)</div>
</li>
<li class="level1">
<div class="li">Polygon (ext.)</div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=commands:text" title="commands:text">Text</a></div>
</li>
<li class="level1">
<div class="li">Set</div>
<ul>
<li class="level2">
<div class="li">Colors</div>
</li>
<li class="level2">
<div class="li">Sizes</div>
</li>
<li class="level2">
<div class="li">Style</div>
</li>
<li class="level2">
<div class="li">TextStyle</div>
</li>
<li class="level2">
<div class="li">DimStyle</div>
</li>
<li class="level2">
<div class="li">Display</div>
</li>
<li class="level2">
<div class="li">Units</div>
</li>
</ul>
</li>
<li class="level1">
<div class="li">Add new</div>
<ul>
<li class="level2">
<div class="li">Style</div>
</li>
<li class="level2">
<div class="li">Line type</div>
</li>
</ul>
</li>
</ul>
<h4>Modify</h4>
</div>
<div class="level2">
<ul>
<li class="level1">
<div class="li">Move - alter the position of entities</div>
</li>
<li class="level1">
<div class="li">Stretch - alter the size of entities</div>
</li>
<li class="level1">
<div class="li">Split - create additional vertices in entities</div>
</li>
<li class="level1">
<div class="li">Mirror -</div>
</li>
<li class="level1">
<div class="li">Transfer - move entities to another layer</div>
</li>
<li class="level1">
<div class="li">Rotate - rotate entities to an angle around a point</div>
</li>
<li class="level1">
<div class="li">Delete</div>
</li>
<li class="level1">
<div class="li">Change</div>
</li>
<li class="level1">
<div class="li"><a class="wikilink1" href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=modifie:trim_r38" title="modifie:trim_r38">Trim &gt;= R38</a></div>
</li>
</ul>
<h4>View</h4>
</div>
<div class="level2">
<ul>
<li class="level1">
<div class="li">Zoom window - draw a rectangle to designate the area to be displayed</div>
</li>
<li class="level1">
<div class="li">Zoom in</div>
</li>
<li class="level1">
<div class="li">Zoom out</div>
</li>
<li class="level1">
<div class="li">Zoom Pan - Pan the Drawing</div>
</li>
<li class="level1">
<div class="li">Zoom fit - show the drawing at a size that will include all entities</div>
</li>
</ul>
<h4>Snap</h4>
</div>
<div class="level2">
<ul>
<li class="level1">
<div class="li">Mid Point - Snap the Media Point of a segment</div>
</li>
<li class="level1">
<div class="li">Point - Snap On a Point</div>
</li>
<li class="level1">
<div class="li">Center - Snap On the Center of arc circle</div>
</li>
<li class="level1">
<div class="li">End Point - Snap The end point of a segment</div>
</li>
<li class="level1">
<div class="li">Intersection Point -Snap on the intersection point</div>
</li>
<li class="level1">
<div class="li">Origin Point - Snap on the Drawing origin point 0,0</div>
</li>
<li class="level1">
<div class="li">Perpendicular - Snap on perpendicular</div>
</li>
<li class="level1">
<div class="li">Tangent - Snap on Tangent</div>
</li>
</ul>
<h4>Dimensions</h4>
</div>
<div class="level2">
<ul>
<li class="level1">
<div class="li">Linear</div>
</li>
<li class="level1">
<div class="li">Horizontal</div>
</li>
<li class="level1">
<div class="li">Vertical</div>
</li>
<li class="level1">
<div class="li">Radial</div>
</li>
<li class="level1">
<div class="li">Angular</div>
</li>
</ul>
<h4>Debug</h4>
</div>
<div class="level2">
<ul>
<li class="level1">
<div class="li">Focus</div>
</li>
<li class="level1">
<div class="li">Undo stack</div>
</li>
<li class="level1">
<div class="li">Redo stack</div>
</li>
<li class="level1">
<div class="li">Image undo</div>
</li>
<li class="level1">
<div class="li">Image redo</div>
</li>
<li class="level1">
<div class="li">GC</div>
</li>
</ul>
<h4>Code Organization</h4>
<p><br/>An overall goal is to keep the front-end interface code as separate from the back-end code as can be achieved. Using a high level language like Python helps immensely in moving towards this goal, as Python provides basic data structures like lists, tuples, and directories (hashes) as built-in components of the language. There is no need to hand-roll these data structures so that all the code, both generic and interface specific, could make use of these essential building blocks of a program. As both the interface and back-end code have these structures available by the nature of the language, the task of keeping the interface code and generic code separated is much simpler.</p>
<p>All code that comprises the core objects in the program, and anything else that is interface neutral, is kept in the Generic subdirectory. The interface code is kept in an Interface directory, and the code for a specific interface is kept in a subdirectory below that. The initial release has a Gtk subdirectory, and it is hoped that there will be several companion subdirectories eventually.</p>
<h4>Generic Directory</h4>
<p><br/>There are presently no subdirectories in this directory. It is in this directory that the code for things like points, segments, layers, etc., is located. Also, there is code in here for things such as calculating intersections of the objects, compressed file reading and writing, saving and loading of files, and various utility functions. There will probably be several subdirectories in here at some point, and files performing certain functions will be moved as needed, but these changes will depend on how the program evolves. All code that finds its way into this directory should never rely on any Python modules outside of the standard set of Python modules.</p>
<h4>Interface Directory</h4>
<p><br/>Here is where the Gtk subdirectory sits, and in that directory is all the code for presenting the user interface. It is this code that relies on the PyGTK module. So far that module is the only third party module needed for running PythonCAD.</p>
<p>As more interfaces are added, their code should then be placed in this directory. All code in the Interface directory uses code in the Generic directory to whatever extent is needed. If a particular interface is requiring some specific functionality in the drawing entities, rather than code being added in this directory that performs the function, that functionality should be considered being moved to the entity itself so that other interfaces may also benefit. By enriching the basic functionality of the core objects, the interface code can be kept to a minimum, and interface-specific object functionality will be reduced. This should hopefully produce a more robust core code-base.</p>
<h4>Features</h4>
<ol>
<li>Draw points, lines, rectangles, circles, arcs, polygons, text</li>
<li>Draw fillets and chamfers</li>
<li>Draw dimensions</li>
<li>Styles: Linetype (solid, dashed), color, thickness</li>
<li>Move</li>
<li>Stretch</li>
<li>Rotate</li>
<li>Split</li>
<li>Layers</li>
<li>Open, Save in XML format, and Print drawings</li>
<li>Undo</li>
<li>Zoom in, out, window, fit, Dynamic pan and zooming</li>
<li>Select All by object type</li>
<li>Set preferences for Units, colors, line thickness, Object sizes, text and dimensions</li>
<li>Draw with the following units: micrometers, millimeters, Meters, Kilometers, Inches, Feet, Yards, Miles</li>
<li>Command line for entering commands</li>
<li>Dynamic snap</li>
</ol>
<p>File format 參考: <a href="http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file_format_reference">http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=file_format_reference</a> </p>
</div>
<h2>WaferRobot</h2>
<h4>WaferPro Software</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/fqhJ9K5NaOI" width="560"></iframe></p>
<h4>Silicon Wafer Production</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/AMgQ1-HdElM" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gBy7kTAyaxE" width="560"></iframe></p>
<h4>Wafer Handling</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/WhnpOTpZbk8" width="560"></iframe></p>
<h4>Wafer Mover</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FCmAaGcqk5I" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/VBxTrts82Js" width="560"></iframe></p>
<h4>Wafer Sorter</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/f2qmXFXhqNY" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/tqSNHKhkyEw" width="560"></iframe></p>
<h4><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/L2yUtgUhRNw" width="560"></iframe></h4>
<h4>Wafer Prober</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/UTreD4jP7c0" width="560"></iframe></p>
<p>參考資料:</p>
<p><a href="http://trc2018.cn.nctu.edu.tw/">http://trc2018.cn.nctu.edu.tw/</a> </p>
<p><a href="/downloads/trc2018_info.pdf">trc2018_info.pdf</a></p>
<p><a href="/downloads/trc2018_qanda.pdf">trc2018 Q&amp;A.pdf</a></p>
<p><a href="/downloads/trc2018_proposal_sample.pdf">trc2018_proposal_sample.pdf</a></p>
<h4>任務一:晶圓傳送 <small>(Cassette-Chamber-Cassette)</small></h4>
<p class="text-center">由 Cassette A 取出一片晶圓依序傳送至六個腔體 (Chamber A~F), 短暫停留指定時間, 最後傳回 Cassette B.</p>
<p class="text-center"><img alt="" height="220" src="/images/trc2018_task1.jpg" width="700"/></p>
<h4>任務二:晶圓排序 <small>(Wafer Sequence)</small></h4>
<p class="text-center">參賽者向平台詢問 Cassette A  的 slotmap, 根據 slotmap 向平台詢問晶圓編號, 依編號由 Cassette A 取出晶圓後傳送至 Cassette B 對應 Slot.</p>
<p class="text-center"><img alt="" height="220" src="/images/trc2018_task2.jpg" width="700"/></p>
<h4>任務三:晶圓製程</h4>
<p><span>最佳排程</span></p>
<p><span>參賽者根據競賽平台指定之 6 片晶圓製程, 設計排程將每片晶圓取放至對應 Chamber, 依序完成每道製程內容, 競賽平台依完成全部製程之總時間給予評分.</span></p>
<p><span><img alt="" height="584" src="/images/trc2018_optimal_scheduling.png" width="587"/></span></p>
<p><span>精準取放</span></p>
<p><span>參賽者將晶圓放入 Chamber A, 競賽平台以 CCD 相機偵測晶圓取放位置, 根據其精準度給予評分.</span></p>
<p><span><img alt="" height="401" src="/images/trc2018_task3-2.png" width="488"/></span></p>
<p><span>製程判斷</span></p>
<p><span>Chamber B, D, E, F為製程站點, 參賽者放置好晶圓後, 須下 Chamber Start 指令給競賽平台, 並蒐集競賽平台提供之製程資料, 根據資料曲線判斷製程是否完成或有異常發生, 競賽平台根據參賽者製程判斷之準確性給予評分.</span></p>
<p><span><img alt="" height="448" src="/images/trc2018_task3-3.png" width="562"/></span></p>
<p><span>平穩傳送</span></p>
<p><span>參賽者將晶圓放入 Chamber C, 競賽平台以 Dot Laser 偵測晶圓傳送過程之角度平均  𝜃 ̅ 與標準差  𝜎  給予評分.</span></p>
<p><span><img alt="" height="413" src="/images/trc2018_task3-4.png" width="601"/></span></p>
<p><span>瑕疵檢測</span></p>
<p><span>Chamber C 為檢測站點, 參賽者放置好晶圓後, 須下 Chamber Start 指令給競賽平台, 並根據競賽平台提供之影像編號, 針對特定影像做瑕疵檢測, 競賽平台根據參賽者檢測結果之準確性給予評分.</span></p>
<p><span>得分 = 100*(正確數量 - 誤判數量) /實際數量</span></p>
<p><span><img alt="" height="240" src="/images/trc2018_task3-5.png" width="528"/></span></p>
<h4>任務平台</h4>
<p><img alt="" height="392" src="/images/trc2018_task_platform-1.jpg" width="700"/></p>
<h4>任務平台尺寸</h4>
<p><img alt="" height="492" src="/images/trc2018_task_platform-2.jpg" width="800"/></p>
<p><a href="/downloads/trc2018_ROBOT_TEST_TOOL_V4.rar">任務平台 STEP 格式壓縮檔</a> (rar)</p>
<p><a href="/downloads/trc2018_task_platform_dwg.7z">任務平台尺寸 DWG 格式壓縮檔案</a> (7z)</p>
<p><a href="https://cad.onshape.com/documents/d128ccb1edce824f26a5ddbc/w/38e2983410e6430423554192/e/c2e706ad80afea195325b903">3D 任務平台  in Onshape</a></p>
<h4>Chamber Pin 尺寸圖</h4>
<p><img alt="" height="414" src="/images/trc2018_chamber_pin_dimension.png" width="906"/></p>
<p><img alt="" height="100" src="/images/trc2018_chamber_pin_dimension-1.png" width="800"/></p>
<p><span> </span></p>
<h4>Cassette 尺寸</h4>
<p><img alt="" height="268" src="/images/trc2018_cassette_dimension.png" width="330"/><img alt="" height="268" src="/images/trc2018_cassette_dimension-1.png" width="357"/></p>
<h4>Wafer 尺寸</h4>
<table border="1">
<tbody>
<tr>
<td width="50%">Spec.</td>
<td>8吋晶圓</td>
</tr>
<tr>
<td>Diameter</td>
<td>200+/-.2mm</td>
</tr>
<tr>
<td>Thickness</td>
<td>700um~1000um</td>
</tr>
</tbody>
</table><h3>Evaluation</h3>
<h4>1.計畫書審查</h4>
<p>依構想計畫書進行評比, 針對其中的執行步驟、硬體設計以及設計特色進行給分, 評比標準如下.</p>
<table border="1">
<tbody>
<tr>
<th width="200">評比項目</th>
<th>項目說明</th>
<th width="100">配分</th>
</tr>
<tr>
<td>硬體及控制系統設計構想</td>
<td>機器手臂系統完整程度，包含<br/>原形機構設計、機電控制</td>
<td>35%</td>
</tr>
<tr>
<td>演算法初步構想</td>
<td>針對各個任務所開發之演算法構想</td>
<td>35%</td>
</tr>
<tr>
<td>獨特性</td>
<td>機械手臂設計的原創性</td>
<td>30%</td>
</tr>
</tbody>
</table>
<h4>2.規劃簡報</h4>
<p>依各組之簡報和目前手臂運作影片進行評比, 將對於其手臂完程度以及報告完整性作評分, 評比標準如下.</p>
<table border="1">
<tbody>
<tr>
<th width="200">評比項目</th>
<th>項目說明</th>
<th width="100">配分</th>
</tr>
<tr>
<td>簡報完整性</td>
<td>製作進度內容及表達完整性</td>
<td>30%</td>
</tr>
<tr>
<td>影片審查</td>
<td>機器人軟硬體實現程度</td>
<td>40%</td>
</tr>
<tr>
<td>獨特性</td>
<td>作品中的原創性</td>
<td>30%</td>
</tr>
</tbody>
</table>
<h4 class="well">3.專案評比</h4>
<p>依各組專案執行之書面報告審查進行評比, 評比標準如下.</p>
<table border="1">
<tbody>
<tr>
<th width="200">評比項目</th>
<th>項目說明</th>
<th width="100">配分</th>
</tr>
<tr>
<td>性能評比</td>
<td>Cycle Time、重複精度、定位精度、穩定度</td>
<td>30%</td>
</tr>
<tr>
<td>排程運作</td>
<td>操作時間、操作完成度、機器人教導便利性</td>
<td>30%</td>
</tr>
<tr>
<td>檢測結果</td>
<td>辨識準確率、辨識效率</td>
<td>30%</td>
</tr>
<tr>
<td>創意加分</td>
<td>創意思維、可延伸性</td>
<td>10%</td>
</tr>
</tbody>
</table>
<div class="well"></div>
<div class="well"></div><h1>分組專題</h1>
<p>分組專題報告</p>
<p>章節</p>
<ul>
<li>標題頁 - 含報告標題、作者、日期與所屬單位</li>
<li>目錄 - 列出全文章節與所屬頁面連結</li>
<li>摘要 - 解釋報告編寫動機、報告重點、結論、建議與關鍵字</li>
<li>前言 - 簡要描述全文意旨與背景, 說明報告目標與報告內容組成架構</li>
<li>內文 - 依照章節標題, 詳細說明報告內容, 包括方法、操作步驟與所得結果的詳細說明</li>
<li>結論 - 條列所獲致的重要成果, 與摘要及導言中的目標互相呼應</li>
<li>討論與建議 - 說明後續值得進行的方向、方法與可能遭遇問題的討論</li>
<li>參考 - 詳列所引用的參考內容</li>
<li>附錄 - 附加值得參考的詳細內容</li>
</ul>
<p><a href="/downloads/cadp_project_ex1.pdf">cadp_project_ex1.pdf</a></p>
<p>設計一個實用的網際 peer evaluation site:</p>
<p><a href="/downloads/peer_evaluation_form.pdf">peer_evaluation_form.pdf</a></p><h2>3D 列印機</h2>
<p>分組專題人員: 六人</p>
<p><span>設計模擬: 三人</span></p>
<p>組立製作: 三人</p>
<p>XYZ 架構</p>
<p><a href="https://github.com/mdecourse/kll3pp">https://github.com/mdecourse/kll3pp</a> </p>
<p><a href="https://cad.onshape.com/documents/d2e8a54fc59d1a20435d8dd2/w/8ff652a5f6c61e4648cb5a0b/e/cce13c0f443986af885c79ff">Onshape 零組件</a></p>
<p><img alt="" height="800" src="/images/kll3pp.jpg" width="600"/></p>
<p><img alt="" height="338" src="/images/kll3pp.png" width="600"/></p>
<p>Delta 架構</p>
<p>分組專題人員: 六人</p>
<p><a href="https://cad.onshape.com/documents/5857da172c6401109cd59c40/w/3c12983596f0b655e19c8242/e/acc3c9a33b806c014834c490">Delta 3D 印表機</a> (<a href="https://www.onshape.com/">Onshape</a> 連結)</p>
<p><img alt="" height="752" src="/images/delta3dPrinter.jpg" width="384"/></p>
<h4>參考資料</h4>
<p><a href="https://reprap.org/wiki/RepRap">https://reprap.org/wiki/RepRap</a> </p>
<p><a href="/downloads/RepRap - The Replicating Rapid Prototyper.pdf">RepRap - The Replicating Rapid Prototyper.pdf</a></p>
<p>Advances in 3D Printing &amp; Additive Manufacturing Technologies</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-981-10-0812-2">https://link.springer.com/book/10.1007/978-981-10-0812-2</a> </p>
<p></p>
<h2>行走機構</h2>
<p>主動式行走機構 - Active Walker - 以馬達驅動行走</p>
<p>分組專題人員: 六人</p>
<p><span>設計模擬: 三人</span></p>
<p>組立製作: 三人</p>
<p><a href="https://cad.onshape.com/documents/96be21438ae9f607a1911459/w/9587e92def580a31ac504bce/e/c02e184cc4dede90f6842cda">Jansen_walker</a> in <a href="https://www.onshape.com/">Onshape</a></p>
<p><img alt="" height="449" src="/images/Jansen_walker.jpg" width="600"/></p>
<p>被動式行走機構 - Passive Walker - 以重力在斜坡或移動平台上行走</p>
<p>分組專題人員: 六人 </p>
<p><a href="https://www.onshape.com/">Onshape</a> 設計, <a href="http://www.coppeliarobotics.com/">V-rep</a> 模擬</p>
<p><a href="https://www.cs.cmu.edu/~hgeyer/Teaching/R16-899B/Papers/McGeer90IJRR.pdf">Passive dynamic walking</a></p>
<p><a href="https://en.wikipedia.org/wiki/Passive_dynamics">Passive dynamics</a></p>
<p><a href="https://ieeexplore.ieee.org/abstract/document/945523/"><span class="ng-binding" mathjax-bind="" ng-bind-html="vm.displayDocTitle">Biped walking robot control with passive walker model by new VSC servo</span></a></p>
<p><a href="https://www.eucognition.org/index.php?page=passive-dynamic-walkers"><span class="ng-binding" mathjax-bind="" ng-bind-html="vm.displayDocTitle">Passive dynamic walker</span></a></p>
<p><a href="http://www-personal.umich.edu/~artkuo/Passive_Walk/passive_walking.html"><span class="ng-binding" mathjax-bind="" ng-bind-html="vm.displayDocTitle">Passive walking</span></a></p>
<p><a href="http://groups.csail.mit.edu/robotics-center/public_papers/Tedrake04.pdf"><span class="ng-binding" mathjax-bind="" ng-bind-html="vm.displayDocTitle">Actuating a Simple 3D Passive Dynamic Walker</span></a></p>
<p><a href="http://biomechanical.asmedigitalcollection.asme.org/article.aspx?articleid=1401236"><span id="scm6MainContent_lblArticleTitle">The Simplest Walking Model: Stability, Complexity, and Scaling</span></a></p>
<p><a href="https://github.com/kenaycock/Six-Bar-Walking-Mechanism">https://github.com/kenaycock/Six-Bar-Walking-Mechanism</a> </p>
<p><span>專題目的: <a href="https://ir.nctu.edu.tw/bitstream/11536/44666/1/450801.pdf">創新步行輔助機構之設計與應用</a></span></p>
<h2>鋼球運動系統</h2>
<p>分組專題人員: 六人</p>
<p><span>設計模擬: 三人</span></p>
<p>組立製作: 三人</p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/lQvcoOzmLqs" width="560"></iframe></p>
<h2>機械手臂</h2>
<p><a href="https://github.com/mdecourse/EvoArm">https://github.com/mdecourse/EvoArm</a> </p>
<p><img alt="" height="240" src="https://github.com/mdecourse/EvoArm/raw/master/Docs/Img/swing.gif" width="320"/></p>
<p><img alt="" height="240" src="https://github.com/mdecourse/EvoArm/raw/master/Docs/Img/main.gif" width="320"/></p>
<p><img alt="" height="240" src="https://github.com/mdecourse/EvoArm/raw/master/Docs/Img/actuator.gif" width="320"/></p>
<p><img alt="" height="767" src="https://github.com/mdecourse/EvoArm/raw/master/Docs/Img/serial_bb.png" width="800"/></p>
<p>參考資料</p>
<p><a href="https://www.eng.yale.edu/grablab/openhand/">https://www.eng.yale.edu/grablab/openhand/</a> </p>
<p><a href="https://github.com/grablab/openhand-hardware">https://github.com/grablab/openhand-hardware</a></p>
<p><a href="https://github.com/grablab/openhand-software">https://github.com/grablab/openhand-software</a></p>
<p><a href="https://github.com/grablab/Yale-OpenHand-Workshop-2018">https://github.com/grablab/Yale-OpenHand-Workshop-2018</a> </p>
<h2>虛實手足球</h2>
<p>分組專題人員: 六人</p>
<p><span>設計模擬: 三人</span></p>
<p>組立製作: 三人</p>
<p><a href="https://en.wikipedia.org/wiki/Table_football">Table Football Machine</a></p>
<ol>
<li>利用 <a href="https://www.onshape.com/">Onshape</a> 或 <a href="http://solvespace.com">Solvespace</a> 設計所需零組件</li>
<li>將模型輸入 V-rep 後, 以 Lua 控制各零組件運動, 進行初步測試</li>
<li>利用 Python 程式, 透過網路, 由競賽雙方以 Rempte API 型式, 操控足球員動作</li>
<li>虛擬系統完成後, 設計外部實體電子控制系統, 操控虛擬足球員, 或反向運作</li>
</ol>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/0qE_a0wFRa0" width="560"></iframe></p>
<p>利用彈珠檯的旋轉擊球機制, 加上擊球桿的平移, 可以製作 V-rep 模型中的手足球員.</p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/up2pSZ2u0Ws" width="560"></iframe></p>
<p><a href="https://github.com/kmolab/pymcadp/blob/gh-pages/data/v-rep/pinball2/pinball4_rotational.ttt">https://github.com/kmolab/pymcadp/blob/gh-pages/data/v-rep/pinball2/pinball4_rotational.ttt</a> </p>
<h2>機械計時器</h2>
<p><span>分組專題人員: 六人</span></p>
<p><span>設計模擬: 三人</span></p>
<p>列印製作: 三人</p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ir6KkKH0LJw" width="560"></iframe></p>
<h2>摺疊自行車</h2>
<p>1/18 Scale folding bike 摺疊自行車模型設計製作</p>
<p><span>分組專題人員: 六人</span></p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/mNPXl2QQNCk" width="560"></iframe></p>
<p>參考資料:</p>
<p><a href="http://rattlecad.sourceforge.net/">http://rattlecad.sourceforge.net/</a> </p>
<h2>方程式賽車</h2>
<p>1/18 Scale Forumla Student Racing Car</p>
<p><span>分組專題人員: 六人</span></p>
<p><a href="https://www.formulastudent.de/uploads/media/FS-Rules_2018_V1.1.pdf">Forumla Student Rules 2018</a></p>
<p><iframe height="480px" src="http://caesor.github.io/racing-game/" width="640px"></iframe></p>
<p>參考資料:</p>
<p><a href="https://uwformula.com/">https://uwformula.com/</a> </p>
<p><a href="http://learnmech.com/">http://learnmech.com/</a> </p>
<p><a href="https://github.com/Caesor/racing-game">https://github.com/Caesor/racing-game</a> </p>
<p><a href="https://www.kingautos.net/212575">https://www.kingautos.net/212575</a> </p>
<p><a href="https://news.tvbs.com.tw/fun/670993">https://news.tvbs.com.tw/fun/670993</a> </p>
<p><a href="http://www.pme.nthu.edu.tw/files/14-1265-124394,r4641-1.php?Lang=zh-tw">http://www.pme.nthu.edu.tw/files/14-1265-124394,r4641-1.php?Lang=zh-tw</a> </p>
<p><a href="https://insight.udndata.com/ndapp/udntag/finance/Article?origid=9058520">https://insight.udndata.com/ndapp/udntag/finance/Article?origid=9058520</a> </p>